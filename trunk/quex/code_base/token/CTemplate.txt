/* -*- C++ -*-   vim: set syntax=cpp: 
 * (C) 2004-2009 Frank-Rene Schaefer
 * ABSOLUTELY NO WARRANTY
 */
#ifndef __QUEX_INCLUDE_GUARD__TOKEN__GENERATED__$$INCLUDE_GUARD_EXTENSION$$
#define __QUEX_INCLUDE_GUARD__TOKEN__GENERATED__$$INCLUDE_GUARD_EXTENSION$$

#include <quex/code_base/definitions>

$$HEADER$$
 
typedef struct QUEX_TYPE_TOKEN_TAG {
    QUEX_TYPE_TOKEN_ID    _id;
$$DISTINCT_MEMBERS$$
$$UNION_MEMBERS$$
#   ifdef     QUEX_OPTION_TOKEN_STAMPING_WITH_LINE_AND_COLUMN
#       ifdef QUEX_OPTION_LINE_NUMBER_COUNTING
        QUEX_TYPE_TOKEN_LINE_N    _line_n;
#       endif
#       ifdef  QUEX_OPTION_COLUMN_NUMBER_COUNTING
        QUEX_TYPE_TOKEN_COLUMN_N  _column_n;
#       endif
#   endif
$$BODY$$
} QUEX_TYPE_TOKEN;

QUEX_INLINE void QUEX_NAME_TOKEN(_construct)(QUEX_TYPE_TOKEN* me);
QUEX_INLINE void QUEX_NAME_TOKEN(_copy_construct)(QUEX_TYPE_TOKEN*       me, 
                                                  const QUEX_TYPE_TOKEN* That);
QUEX_INLINE void QUEX_NAME_TOKEN(_copy)(QUEX_TYPE_TOKEN*       me, 
                                        const QUEX_TYPE_TOKEN* That);
QUEX_INLINE void QUEX_NAME_TOKEN(_destruct)(QUEX_TYPE_TOKEN*);

/* NOTE: Setters and getters as in the C++ version of the token class are not
 *       necessary, since the members are accessed directly.                   */

QUEX_INLINE void 
QUEX_NAME_TOKEN(_set)(QUEX_TYPE_TOKEN*         me, 
                      const QUEX_TYPE_TOKEN_ID ID) 
{ me->_id = ID; }

QUEX_INLINE const char*    
QUEX_NAME_TOKEN(_map_id_to_name)(QUEX_TYPE_TOKEN_ID);

QUEX_INLINE void 
QUEX_NAME_TOKEN(_construct)(QUEX_TYPE_TOKEN* me)
{
#   define self (*me)
$$CONSTRUCTOR$$
#   undef  self
}

QUEX_INLINE void 
QUEX_NAME_TOKEN(_copy_construct)(QUEX_TYPE_TOKEN*       me, 
                                 const QUEX_TYPE_TOKEN* That)
{
    QUEX_NAME_TOKEN(_copy)(me, That);
    QUEX_NAME_TOKEN(_construct)(me);
}

QUEX_INLINE void 
QUEX_NAME_TOKEN(_destruct)(QUEX_TYPE_TOKEN* me)
{
#   define self (*me)
$$DESTRUCTOR$$
#   undef  self
}

void QUEX_NAME_TOKEN(_copy)(QUEX_TYPE_TOKEN*       me, 
                            const QUEX_TYPE_TOKEN* That)
{
#   define self (*me)
$$COPY$$
#   undef  self
    /* If the user even misses to copy the token id, then there's
     * something seriously wrong.                                 */
    __quex_assert(me->_id == That->_id);
#ifdef     QUEX_OPTION_TOKEN_STAMPING_WITH_LINE_AND_COLUMN
#   ifdef QUEX_OPTION_LINE_NUMBER_COUNTING
    __quex_assert(me->_line_n == That->_line_n);
#   endif
#   ifdef  QUEX_OPTION_COLUMN_NUMBER_COUNTING
    __quex_assert(me->_column_n == That->_column_n);
#   endif
#endif
}

$$FOOTER$$

#endif /* __QUEX_INCLUDE_GUARD__TOKEN__GENERATED__$$INCLUDE_GUARD_EXTENSION$$ */
