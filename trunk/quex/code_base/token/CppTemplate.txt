/* -*- C++ -*-   vim: set syntax=cpp: 
 * (C) 2004-2009 Frank-Rene Schaefer
 * ABSOLUTELY NO WARRANTY
 */
#ifndef __QUEX_INCLUDE_GUARD__TOKEN__GENERATED__$$TOKEN_CLASS$$
#define __QUEX_INCLUDE_GUARD__TOKEN__GENERATED__$$TOKEN_CLASS$$

#include <quex/code_base/definitions>

$$HEADER$$
 
$$NAMESPACE_OPEN$$

class $$TOKEN_CLASS$$ {
public:
    $$TOKEN_CLASS$$();
    $$TOKEN_CLASS$$(const $$TOKEN_CLASS$$& That);
    void __copy(const $$TOKEN_CLASS$$& That);
    /* operator=(..): USE WITH CAUTION--POSSIBLE MAJOR PERFORMANCE DECREASE! 
     *                BETTER USE __copy(That)                                */
    $$TOKEN_CLASS$$& operator=(const $$TOKEN_CLASS$$& That) 
    { __copy(That); return *this; }
    $$VIRTUAL_DESTRUCTOR$$~$$TOKEN_CLASS$$();

$$DISTINCT_MEMBERS$$
$$UNION_MEMBERS$$
public:
$$SETTERS_GETTERS$$
    void set(const QUEX_TYPE_TOKEN_ID ID) { _id = ID; }
$$QUICK_SETTERS$$

    private:
        QUEX_TYPE_TOKEN_ID    _id;
    public:
        QUEX_TYPE_TOKEN_ID    type_id() const      { return _id; }
        static const char*    map_id_to_name(QUEX_TYPE_TOKEN_ID);
        const std::string     type_id_name() const { return map_id_to_name(_id); }

#   ifdef     QUEX_OPTION_TOKEN_STAMPING_WITH_LINE_AND_COLUMN
#       ifdef QUEX_OPTION_LINE_NUMBER_COUNTING
    private:
        QUEX_TYPE_TOKEN_LINE_N    _line_n;
    public:
        QUEX_TYPE_TOKEN_LINE_N    line_number() const                                 { return _line_n; }
        void                      set_line_number(const QUEX_TYPE_TOKEN_LINE_N Value) { _line_n = Value; }
#       endif
#       ifdef  QUEX_OPTION_COLUMN_NUMBER_COUNTING
    private:
        QUEX_TYPE_TOKEN_COLUMN_N  _column_n;
    public:
        QUEX_TYPE_TOKEN_COLUMN_N  column_number() const                                   { return _column_n; }
        void                      set_column_number(const QUEX_TYPE_TOKEN_COLUMN_N Value) { _column_n = Value; }
#       endif
#   endif
    public:
$$BODY$$
};

inline
/* NOTE: If you get an error here, then your configuration
 *       file does not declare QUEX_TYPE_TOKEN as $$TOKEN_CLASS$$. 
 *       The following weirdly typed constructor shall break in
 *       this particular case.                                        */
$$TOKEN_CLASS$$::QUEX_TYPE_TOKEN()
/*****************************************************/
{
$$CONSTRUCTOR$$
}

inline
$$TOKEN_CLASS$$::$$TOKEN_CLASS$$(const $$TOKEN_CLASS$$& That)
{
    __copy(That);
$$CONSTRUCTOR$$
}

inline
$$TOKEN_CLASS$$::~$$TOKEN_CLASS$$()
{
$$DESTRUCTOR$$
}

inline void
$$TOKEN_CLASS$$::__copy(const $$TOKEN_CLASS$$& That)
{
$$COPY$$
    /* If the user even misses to copy the token id, then there's
     * something seriously wrong.                                 */
    __quex_assert(this->_id == That._id);
#ifdef     QUEX_OPTION_TOKEN_STAMPING_WITH_LINE_AND_COLUMN
#   ifdef QUEX_OPTION_LINE_NUMBER_COUNTING
    __quex_assert(_line_n == That._line_n);
#   endif
#   ifdef  QUEX_OPTION_COLUMN_NUMBER_COUNTING
    __quex_assert(_column_n == That._column_n);
#   endif
#endif
}

$$FOOTER$$

$$NAMESPACE_CLOSE$$

#endif /* __QUEX_INCLUDE_GUARD__TOKEN__GENERATED__$$TOKEN_CLASS$$ */
