/* -*- C++ -*-   vim: set syntax=cpp:
 * (C) Frank-Rene Schaefer                               */
#ifndef __QUEX_INCLUDE_GUARD__ANALYZER__COUNTER__BASE
#define __QUEX_INCLUDE_GUARD__ANALYZER__COUNTER__BASE

#if ! defined(__QUEX_OPTION_PLAIN_C)
#include <cstddef> 
#else
#include <stddef.h>
#endif

QUEX_NAMESPACE_MAIN_OPEN

    typedef struct {
#       ifdef  QUEX_OPTION_LINE_NUMBER_COUNTING
        size_t  _line_number_at_begin;    /* line where current pattern starts   */
        size_t  _line_number_at_end;      /* line after current pattern          */
#       endif
#       ifdef  QUEX_OPTION_COLUMN_NUMBER_COUNTING
        size_t  _column_number_at_begin;  /* column where current pattern starts */
        size_t  _column_number_at_end;    /* column after current pattern        */
#       endif
#       ifdef   __QUEX_OPTION_INDENTATION_TRIGGER_SUPPORT
        size_t  _indentation;
#       endif
    } QUEX_NAME(CounterBase);

    QUEX_INLINE void  QUEX_NAME(CounterBase_init)(QUEX_NAME(CounterBase)* me);
    QUEX_INLINE void  QUEX_NAME(CounterBase_shift_end_values_to_start_values)(QUEX_NAME(CounterBase)* me);
    QUEX_INLINE void  QUEX_NAME(CounterBase_count_newline_n_backwards)(QUEX_NAME(CounterBase)*  me, 
                                                                       QUEX_TYPE_CHARACTER*     it,
                                                                       QUEX_TYPE_CHARACTER*     Begin);
    QUEX_INLINE void  QUEX_NAME(CounterBase_print_this)(QUEX_NAME(CounterBase)* me);


QUEX_NAMESPACE_MAIN_CLOSE

#if         ! defined(__QUEX_OPTION_INDENTATION_TRIGGER_SUPPORT)
#   include <quex/code_base/analyzer/counter/LineColumn>
#   else
#   include <quex/code_base/analyzer/counter/LineColumnIndentation>
#endif

#endif /* __QUEX_INCLUDE_GUARD__ANALYZER__COUNTER__BASE */

