/* -*- C++ -*-  vim:set syntax=cpp: 
 *
 * (C) 2004-2009 Frank-Rene Schaefer
 *
 * __QUEX_INCLUDE_GUARD__ANALYZER__ACCUMULATOR may be undefined in case
 *    that multiple lexical analyzers are used. Then, the name of the
 *    QUEX_NAME(Accumulator) must be different.                             */
#ifndef __QUEX_INCLUDE_GUARD__ANALYZER__ACCUMULATOR
#define __QUEX_INCLUDE_GUARD__ANALYZER__ACCUMULATOR

#ifndef   QUEX_TYPE_ANALYZER
#   error "Macro QUEX_TYPE_ANALYZER must be defined before inclusion of this file."
#endif

#include <quex/code_base/definitions>

QUEX_NAMESPACE_MAIN_OPEN

    /* (*) pure text accumulation and flushing */
    typedef struct {
#       ifdef QUEX_OPTION_LINE_NUMBER_COUNTING
        int  _begin_line;
#       endif
#       ifdef QUEX_OPTION_COLUMN_NUMBER_COUNTING
        int  _begin_column;
#       endif

        struct { 
            QUEX_TYPE_CHARACTER* begin;
            QUEX_TYPE_CHARACTER* end;
            QUEX_TYPE_CHARACTER* memory_end;
        }                   text;
        QUEX_TYPE_ANALYZER* the_lexer;     

#   ifndef __QUEX_SETTING_PLAIN_C
    public:
        void  flush(const QUEX_TYPE_TOKEN_XXX_ID TokenID);
        void  clear();
        void  add(const QUEX_TYPE_CHARACTER* Begin, const QUEX_TYPE_CHARACTER* End);
        void  add_chararacter(const QUEX_TYPE_CHARACTER);
        void  print_this();
    private:
        friend class QUEX_TYPE_ANALYZER;
#   endif
    } QUEX_NAME(Accumulator);

    void
    QUEX_NAME(Accumulator_construct)(QUEX_NAME(Accumulator)*, QUEX_TYPE_ANALYZER*);

QUEX_NAMESPACE_MAIN_CLOSE

#endif /* __QUEX_INCLUDE_GUARD__ANALYZER__ACCUMULATOR */
