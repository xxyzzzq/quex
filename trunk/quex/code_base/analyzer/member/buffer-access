/* -*- C++ -*- vim: set syntax=cpp:
 * (C) 2005-2010 Frank-Rene Schaefer
 * ABSOLUTELY NO WARRANTY              */
#ifndef __QUEX_INCLUDE_GUARD__ANALYZER__MEMBER__BUFFER_ACCESS
#define __QUEX_INCLUDE_GUARD__ANALYZER__MEMBER__BUFFER_ACCESS

QUEX_NAMESPACE_MAIN_OPEN

typedef struct QUEX_NAME(BufferFillerDirectMemory_tag) {
    size_t   (*insert)(struct QUEX_NAME(BufferFiller_tag)* me,
                       QUEX_TYPE_CHARACTER**               insertion_p,
                       QUEX_TYPE_CHARACTER*                BufferEnd,
                       void*                               ContentBegin,
                       void*                               ContentEnd));
    size_t   (*fill_region_prepare)(struct QUEX_NAME(BufferFiller_tag)* me);
    size_t   (*fill_region_finish)(struct QUEX_NAME(BufferFiller_tag)* me);
    size_t   (*fill_region_get_begin)(struct QUEX_NAME(BufferFiller_tag)* me);
    size_t   (*fill_region_get_end)(struct QUEX_NAME(BufferFiller_tag)* me);
} QUEX_NAME(BufferFillerDirectMemory);


/* Direct Access to Memory */
QUEX_INLINE  void*  QUEX_FUNC(buffer_fill_region_append)(QUEX_TYPE_ANALYZER*  me,
                                                         void* ContentBegin, 
                                                         void* ContentEnd);
QUEX_INLINE  void*  QUEX_FUNC(buffer_fill_region_append_conversion)(QUEX_TYPE_ANALYZER* me,
                                                                    void*            ContentBegin, 
                                                                    void*            ContentEnd);
QUEX_INLINE  void*  QUEX_FUNC(buffer_fill_region_append_conversion_direct)(QUEX_TYPE_ANALYZER* me,
                                                                           void*            ContentBegin, 
                                                                           void*            ContentEnd);
QUEX_INLINE  void                  QUEX_FUNC(buffer_fill_region_prepare)(QUEX_TYPE_ANALYZER* me);
QUEX_INLINE  QUEX_TYPE_CHARACTER*  QUEX_FUNC(buffer_fill_region_begin)(QUEX_TYPE_ANALYZER* me);
QUEX_INLINE  QUEX_TYPE_CHARACTER*  QUEX_FUNC(buffer_fill_region_end)(QUEX_TYPE_ANALYZER* me);
QUEX_INLINE  size_t                QUEX_FUNC(buffer_fill_region_size)(QUEX_TYPE_ANALYZER* me);
QUEX_INLINE  void                  QUEX_FUNC(buffer_fill_region_finish)(QUEX_TYPE_ANALYZER* me,
                                                                        const size_t LoadedN);

QUEX_INLINE  void                  QUEX_FUNC(buffer_conversion_fill_region_prepare)(QUEX_TYPE_ANALYZER* me); 
QUEX_INLINE  uint8_t*              QUEX_FUNC(buffer_conversion_fill_region_begin)(QUEX_TYPE_ANALYZER* me);
QUEX_INLINE  uint8_t*              QUEX_FUNC(buffer_conversion_fill_region_end)(QUEX_TYPE_ANALYZER* me);
QUEX_INLINE  size_t                QUEX_FUNC(buffer_conversion_fill_region_size)(QUEX_TYPE_ANALYZER* me);
QUEX_INLINE  void                  QUEX_FUNC(buffer_conversion_fill_region_finish)(QUEX_TYPE_ANALYZER* me,
                                                                                   const size_t  ByteN);
QUEX_INLINE  QUEX_TYPE_CHARACTER*  QUEX_FUNC(buffer_lexeme_start_pointer_get)(QUEX_TYPE_ANALYZER* me);
QUEX_INLINE  void                  QUEX_FUNC(buffer_input_pointer_set)(QUEX_TYPE_ANALYZER* me,
                                                                       QUEX_TYPE_CHARACTER*);

QUEX_NAMESPACE_MAIN_CLOSE

#endif /* __QUEX_INCLUDE_GUARD__ANALYZER__MEMBER__BUFFER_ACCESS */

