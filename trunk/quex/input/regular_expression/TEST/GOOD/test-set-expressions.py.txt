
expression = "[: alnum :]"
result     = [48, 57] [65, 90] [97, 122] 

expression = "[: [\100-\0] :]"
Character range: '-' requires character with 'lower code' to preceed
found range '@-' which corresponds to 64-1 as unicode code points.

expression = "[: [\x10-\x40] :]"
result     = [16L, 64L] 

expression = "[: [\X10-\X40] :]"
result     = [16L, 64L] 

expression = "[: [\U10-\U40] :]"
result     = [16L, 64L] 

expression = "[: difference([0-9], [1,3,5,7,9]) :]"
result     = '0', '2', '4', '6', '8'

expression = "[: union([0-9], [a-z0-5]) :]"
result     = ['0', '9'], ['a', 'z']

expression = "[: intersection([0-9], [a-z0-5]) :]"
result     = ['0', '5']

expression = "[: inverse([0-9]) :]"
result     = [-oo, '/'], [':', oo]

And know something completely different ...

expression = "[: difference([0-9], union([1-3], intersection([0-7], [5-9]))) :]"
result     = '0', '4', ['8', '9']

expression = "[: difference(alnum, digit) :]"
result     = ['A', 'Z'], ['a', 'z']

Check the range cut ...
expression = "[^a]"
result     = init-state = 0L
00000 ()
     == [-oo, 0060] [0062, oo]  ==> 00001
    
00001 (A)
    

expression = "[:inverse([a]):]"
result     = init-state = 0L
00000 ()
     == [-oo, 0060] [0062, oo]  ==> 00001
    
00001 (A)
    

