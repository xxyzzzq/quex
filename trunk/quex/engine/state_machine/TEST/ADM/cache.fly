{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.065069; None; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.068241; None; ]
  [ 2; OK; 0.066770; None; ]
  [ 3; OK; 0.066780; None; ]
  [ 4; OK; 0.066872; None; ]
  [ 5; OK; 0.065914; None; ]
  [ 6; OK; 0.071287; None; ]
  [ 7; OK; 0.065729; None; ]
  [ 8; OK; 0.066943; None; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.047636; None; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.045453; None; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.044483; None; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.046681; None; ]
  [ 2; OK; 0.045285; None; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1454022471L;
result_list: [
  [ Normal; OK; 0.697575; None; ]
  [ BeginOfLine; OK; 0.693090; None; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ Same; OK; 0.424228; None; ]
  [ Different; OK; 0.898246; None; ]
  [ TwoSet; OK; 0.441601; None; ]
  [ Grid; OK; 0.330752; None; ]
  [ Grid-BOL; OK; 0.322278; None; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1454193383L;
result_list: [
  [ UTF8; OK; 0.280469; 0; ]
  [ UTF16; OK; 0.263159; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.829886; None; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.405046; None; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.093579; None; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.146687; None; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.045696; None; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1454022471L;
result_list: [
  [ linear; OK; 0.341136; None; ]
  [ butterfly; OK; 3.179748; None; ]
  [ long_loop; OK; 0.386451; None; ]
  [ nested_loop; OK; 0.086673; None; ]
  [ mini_loop; OK; 0.045536; None; ]
  [ fork; OK; 0.366093; None; ]
  [ fork2; OK; 0.084287; None; ]
  [ fork3; OK; 2.604853; None; ]
  [ fork4; OK; 2.877976; None; ]
  [ tree; OK; 2.605436; None; ]
  [ mini_bubble; OK; 0.044204; None; ]
  [ bubble; OK; 0.041532; None; ]
  [ bubble2; OK; 0.052155; None; ]
  [ bubble2b; OK; 0.048297; None; ]
  [ bubble3; OK; 0.059804; None; ]
  [ bubble4; OK; 0.049772; None; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.057212; None; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.093203; None; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048431; None; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.061140; None; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.051705; None; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048755; None; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.045226; None; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.050311; None; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.050238; None; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048338; None; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.051029; None; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.056006; None; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.049522; None; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.062414; None; ]
]
}
{
title: Contigous Word Sequence Ranges;
title_group: UTF16 State Split;
file_name: test-utf16_interval_split.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.045630; None; ]
  [ 2; OK; 0.045349; None; ]
  [ 3; OK; 0.045132; None; ]
  [ 4; OK; 0.044639; None; ]
  [ 5; OK; 0.042206; None; ]
]
}
{
title: Larger Number Sets;
title_group: UTF16 State Split;
file_name: test-utf16_number_set_split.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 4.445957; -1145164143; ]
]
}
{
title: Contigous Byte Sequence Ranges;
title_group: UTF8 State Split;
file_name: test-utf8_number_set_split.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.045437; None; ]
  [ 2; OK; 0.045272; None; ]
  [ 3; OK; 0.045273; None; ]
  [ 4; OK; 0.045039; None; ]
  [ 4b; OK; 0.045140; None; ]
  [ misc; OK; 0.044121; None; ]
]
}
{
title: Intervals;
title_group: UTF8 State Split;
file_name: test-utf8_number_set_split-by-length.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.043883; None; ]
  [ 2; OK; 0.044100; None; ]
  [ Overlap1; OK; 0.049286; None; ]
  [ Overlap2; OK; 0.044363; None; ]
]
}
{
title: Larger Number Sets;
title_group: UTF8 State Split;
file_name: test-utf8_state_split-do.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.736354; -1101852080; ]
]
}
{
title: Larger Number Sets;
title_group: UTF8 State Split;
file_name: test-utf8_state_split-do-2.py;
hwut_info_time: 1454142965L;
result_list: [
  [ ; OK; 0.078491; None; ]
]
}
{
title: Plug Intermediate States;
title_group: UTF8 State Split;
file_name: test-utf8_state_split.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1.1; OK; 0.043969; None; ]
  [ 1.2; OK; 0.047682; None; ]
  [ 2.1; OK; 0.045212; None; ]
  [ 2.2; OK; 0.046170; None; ]
  [ 2.3; OK; 0.043924; None; ]
  [ 3.1; OK; 0.043798; None; ]
  [ 3.2; OK; 0.047454; None; ]
  [ 3.3; OK; 0.044793; None; ]
  [ 4.1; OK; 0.045719; None; ]
  [ 4.2; OK; 0.046571; None; ]
  [ 4.3; OK; 0.044491; None; ]
  [ 4.4; OK; 0.046386; None; ]
]
}
