{
file_name: test-StateInfo-trigger-map.py;
result_list: [
  [ ; OK; 0.064594; None; ]
]
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-get_trigger_map.py;
result_list: [
  [ 1; OK; 0.071307; None; ]
  [ 2; OK; 0.061462; None; ]
  [ 3; OK; 0.073538; None; ]
  [ 4; OK; 0.062936; None; ]
  [ 5; OK; 0.074463; None; ]
  [ 6; OK; 0.065050; None; ]
  [ 7; OK; 0.065076; None; ]
  [ 8; OK; 0.075742; None; ]
]
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-epsilon-closure.py;
result_list: [
  [ ; OK; 0.044724; None; ]
]
title: Epsilon closure (single state);
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-elementary_trigger_sets.py;
result_list: [
  [ ; OK; 0.043066; None; ]
]
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-elementary_trigger_sets-2.py;
result_list: [
  [ ; OK; 0.042984; None; ]
]
title: Get elementary trigger sets II;
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-get_graphviz_string.py;
result_list: [
  [ 1; OK; 0.043362; None; ]
  [ 2; OK; 0.044998; None; ]
]
title: Get graphviz string of state machine.;
title_group: Plot;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n.py;
result_list: [
  [ Normal; OK; 0.709276; None; ]
  [ BeginOfLine; OK; 0.785242; None; ]
]
title: Characters;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n-2.py;
result_list: [
  [ Same; OK; 0.512019; None; ]
  [ Different; OK; 1.096472; None; ]
  [ TwoSet; OK; 0.522935; None; ]
  [ Grid; OK; 0.358025; None; ]
  [ Grid-BOL; OK; 0.366240; None; ]
]
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n-codec.py;
result_list: [
  [ UTF8; OK; 0.314455; None; ]
  [ UTF16; OK; 0.283785; None; ]
]
title: Codec Engine;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_newline_n.py;
result_list: [
  [ ; OK; 0.937685; None; ]
]
title: Newlines;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-detect.py;
result_list: [
  [ ; OK; 0.454470; None; ]
]
title: Detection;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-mount_pseudo.py;
result_list: [
  [ ; OK; 0.102170; None; ]
]
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-philosophical_cut.py;
result_list: [
  [ ; OK; 0.167466; None; ]
]
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-clone.py;
result_list: [
  [ ; OK; 0.048921; None; ]
]
title: Cloning;
title_group: StateMachine;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-get_predecessor_db.py;
result_list: [
  [ linear; OK; 0.389051; None; ]
  [ butterfly; OK; 3.169225; None; ]
  [ long_loop; OK; 0.437423; None; ]
  [ nested_loop; OK; 0.095341; None; ]
  [ mini_loop; OK; 0.067304; None; ]
  [ fork; OK; 0.393448; None; ]
  [ fork2; OK; 0.095389; None; ]
  [ fork3; OK; 3.158677; None; ]
  [ fork4; OK; 3.387732; None; ]
  [ tree; OK; 3.213616; None; ]
  [ mini_bubble; OK; 0.057166; None; ]
  [ bubble; OK; 0.044995; None; ]
  [ bubble2; OK; 0.053428; None; ]
  [ bubble2b; OK; 0.050442; None; ]
  [ bubble3; OK; 0.047729; None; ]
  [ bubble4; OK; 0.053040; None; ]
]
title: get_predecessor_db;
title_group: StateMachine;
hwut_info_time: 1426735597L;
}
{
file_name: test-setup_post_condition.py;
result_list: [
  [ ; OK; 0.053231; None; ]
]
title: Append Post Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-setup_border_conditions.py;
result_list: [
  [ ; OK; 0.102424; None; ]
]
title: Append Post Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-inverse.py;
result_list: [
  [ ; OK; 0.049739; None; ]
]
title: Inverse;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-parallelize.py;
result_list: [
  [ ; OK; 0.059704; None; ]
]
title: Paralell;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-repeat.py;
result_list: [
  [ ; OK; 0.052909; None; ]
]
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-repeat-pure.py;
result_list: [
  [ ; OK; 0.048148; None; ]
]
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-sequentialize.py;
result_list: [
  [ ; OK; 0.049374; None; ]
]
title: Sequence;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-setup_pre_condition.py;
result_list: [
  [ ; OK; 0.049234; None; ]
]
title: Setup Pre-Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-clone.py;
result_list: [
  [ ; OK; 0.045805; None; ]
]
title: Cloning;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
result_list: [
  [ ; OK; 0.044310; None; ]
]
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-create-DFA.py;
result_list: [
  [ ; OK; 0.044712; None; ]
]
title: NFA to DFA (subset construction);
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
result_list: [
  [ ; OK; 0.056291; None; ]
]
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-parallelize-trace-origin.py;
result_list: [
  [ ; OK; 0.059823; None; ]
]
title: Paralellization;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateInfo-has_trigger.py;
result_list: [
  [ ; OK; 0.062884; None; ]
]
title: Has Trigger;
title_group: Trigger Set Check;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf16_interval_split.py;
result_list: [
  [ 1; OK; 0.065495; None; ]
  [ 2; OK; 0.043653; None; ]
  [ 3; OK; 0.041375; None; ]
  [ 4; OK; 0.045133; None; ]
  [ 5; OK; 0.046132; None; ]
]
title: Contigous Word Sequence Ranges;
title_group: UTF16 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf16_number_set_split.py;
result_list: [
  [ ; OK; 5.890210; None; ]
]
title: Larger Number Sets;
title_group: UTF16 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_number_set_split.py;
result_list: [
  [ 1; OK; 0.044093; None; ]
  [ 2; OK; 0.044696; None; ]
  [ 3; OK; 0.049912; None; ]
  [ 4; OK; 0.046574; None; ]
  [ 4b; OK; 0.045517; None; ]
  [ misc; OK; 0.043935; None; ]
]
title: Contigous Byte Sequence Ranges;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_number_set_split-by-length.py;
result_list: [
  [ 1; OK; 0.046728; None; ]
  [ 2; OK; 0.049252; None; ]
  [ Overlap1; OK; 0.046717; None; ]
  [ Overlap2; OK; 0.045743; None; ]
]
title: Intervals;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split-do.py;
result_list: [
  [ ; OK; 0.896699; None; ]
]
title: Larger Number Sets;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split-do-2.py;
result_list: [
  [ ; OK; 0.079727; None; ]
]
title: Larger Number Sets;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split.py;
result_list: [
  [ 1.1; OK; 0.046656; None; ]
  [ 1.2; OK; 0.045994; None; ]
  [ 2.1; OK; 0.046882; None; ]
  [ 2.2; OK; 0.045732; None; ]
  [ 2.3; OK; 0.046959; None; ]
  [ 3.1; OK; 0.044496; None; ]
  [ 3.2; OK; 0.042706; None; ]
  [ 3.3; OK; 0.043674; None; ]
  [ 4.1; OK; 0.047007; None; ]
  [ 4.2; OK; 0.043508; None; ]
  [ 4.3; OK; 0.044862; None; ]
  [ 4.4; OK; 0.049470; None; ]
]
title: Plug Intermediate States;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
