{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.068262; 0; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.065838; 0; ]
  [ 2; OK; 0.063736; 0; ]
  [ 3; OK; 0.125753; 0; ]
  [ 4; OK; 0.082972; 0; ]
  [ 5; OK; 0.071594; 0; ]
  [ 6; OK; 0.065442; 0; ]
  [ 7; OK; 0.067781; 0; ]
  [ 8; OK; 0.066329; 0; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.045696; 0; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.040719; 0; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.042774; 0; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.044121; 0; ]
  [ 2; OK; 0.041678; 0; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1454022471L;
result_list: [
  [ Normal; OK; 0.688167; 0; ]
  [ BeginOfLine; OK; 0.692725; 0; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ Same; OK; 0.427397; 0; ]
  [ Different; OK; 0.945848; 0; ]
  [ TwoSet; OK; 0.459085; 0; ]
  [ Grid; OK; 0.366244; 0; ]
  [ Grid-BOL; OK; 0.315017; 0; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1457134087L;
result_list: [
  [ UTF8; OK; 0.300050; 0; ]
  [ UTF16; OK; 0.282466; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 1.621722; 0; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.413423; 0; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.097431; 0; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.155232; 0; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.046301; 0; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1454022471L;
result_list: [
  [ linear; OK; 0.347621; 0; ]
  [ butterfly; OK; 3.282649; 0; ]
  [ long_loop; OK; 0.397948; 0; ]
  [ nested_loop; OK; 0.091264; 0; ]
  [ mini_loop; OK; 0.045211; 0; ]
  [ fork; OK; 0.364708; 0; ]
  [ fork2; OK; 0.082404; 0; ]
  [ fork3; OK; 2.778027; 0; ]
  [ fork4; OK; 2.916176; 0; ]
  [ tree; OK; 2.667753; 0; ]
  [ mini_bubble; OK; 0.044985; 0; ]
  [ bubble; OK; 0.042868; 0; ]
  [ bubble2; OK; 0.050782; 0; ]
  [ bubble2b; OK; 0.052721; 0; ]
  [ bubble3; OK; 0.049707; 0; ]
  [ bubble4; OK; 0.056224; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.050667; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.093293; 0; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.051899; 0; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.057446; 0; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048152; 0; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.049577; 0; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.047716; 0; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.050944; 0; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048298; 0; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.046335; 0; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048766; 0; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.056417; 0; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.052060; 0; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.067360; 0; ]
]
}
