{
file_name: test-StateInfo-trigger-map.py;
result_list: [
  [ ; OK; 0.090330; None; ]
]
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-get_trigger_map.py;
result_list: [
  [ 1; OK; 0.090559; None; ]
  [ 2; OK; 0.068152; None; ]
  [ 3; OK; 0.087510; None; ]
  [ 4; OK; 0.066796; None; ]
  [ 5; OK; 0.064512; None; ]
  [ 6; OK; 0.085890; None; ]
  [ 7; OK; 0.095865; None; ]
  [ 8; OK; 0.091820; None; ]
]
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-epsilon-closure.py;
result_list: [
  [ ; OK; 0.049675; None; ]
]
title: Epsilon closure (single state);
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-elementary_trigger_sets.py;
result_list: [
  [ ; OK; 0.047294; None; ]
]
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-elementary_trigger_sets-2.py;
result_list: [
  [ ; OK; 0.053189; None; ]
]
title: Get elementary trigger sets II;
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-get_graphviz_string.py;
result_list: [
  [ 1; OK; 0.055835; None; ]
  [ 2; OK; 0.057862; None; ]
]
title: Get graphviz string of state machine.;
title_group: Plot;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n.py;
result_list: [
  [ Normal; OK; 0.959990; None; ]
  [ BeginOfLine; OK; 0.980084; None; ]
]
title: Characters;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n-2.py;
result_list: [
  [ Same; OK; 0.638755; None; ]
  [ Different; OK; 1.339560; None; ]
  [ TwoSet; OK; 0.659705; None; ]
  [ Grid; OK; 0.467955; None; ]
  [ Grid-BOL; OK; 0.337588; None; ]
]
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n-codec.py;
result_list: [
  [ UTF8; OK; 0.388979; None; ]
  [ UTF16; OK; 0.379025; None; ]
]
title: Codec Engine;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_newline_n.py;
result_list: [
  [ ; OK; 1.194942; None; ]
]
title: Newlines;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-detect.py;
result_list: [
  [ ; OK; 0.462389; None; ]
]
title: Detection;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-mount_pseudo.py;
result_list: [
  [ ; OK; 0.097789; None; ]
]
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-philosophical_cut.py;
result_list: [
  [ ; OK; 0.163004; None; ]
]
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-clone.py;
result_list: [
  [ ; OK; 0.046865; None; ]
]
title: Cloning;
title_group: StateMachine;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-get_predecessor_db.py;
result_list: [
  [ linear; OK; 0.468027; 831676962; ]
  [ butterfly; OK; 4.729936; -1903424989; ]
  [ long_loop; OK; 0.580590; -1132237465; ]
  [ nested_loop; OK; 0.093723; -342497869; ]
  [ mini_loop; OK; 0.058147; -1072080967; ]
  [ fork; OK; 0.526073; 375926482; ]
  [ fork2; OK; 0.107342; 1247149166; ]
  [ fork3; OK; 3.757455; 2069247824; ]
  [ fork4; OK; 3.747372; 1103825239; ]
  [ tree; OK; 3.826530; 2003462624; ]
  [ mini_bubble; OK; 0.049863; -1847663482; ]
  [ bubble; OK; 0.049928; 1383889657; ]
  [ bubble2; OK; 0.053902; -1843129339; ]
  [ bubble2b; OK; 0.070971; 1091782890; ]
  [ bubble3; OK; 0.058210; -1843129339; ]
  [ bubble4; OK; 0.050434; 563821749; ]
]
title: get_predecessor_db;
title_group: StateMachine;
hwut_info_time: 1426735597L;
}
{
file_name: test-setup_post_condition.py;
result_list: [
  [ ; OK; 0.053827; None; ]
]
title: Append Post Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-setup_border_conditions.py;
result_list: [
  [ ; OK; 0.126451; None; ]
]
title: Append Post Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-inverse.py;
result_list: [
  [ ; OK; 0.051207; None; ]
]
title: Inverse;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-parallelize.py;
result_list: [
  [ ; OK; 0.070234; None; ]
]
title: Paralell;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-repeat.py;
result_list: [
  [ ; OK; 0.052589; None; ]
]
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-repeat-pure.py;
result_list: [
  [ ; OK; 0.054034; None; ]
]
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-sequentialize.py;
result_list: [
  [ ; OK; 0.060582; None; ]
]
title: Sequence;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-setup_pre_condition.py;
result_list: [
  [ ; OK; 0.065382; None; ]
]
title: Setup Pre-Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-clone.py;
result_list: [
  [ ; OK; 0.062565; None; ]
]
title: Cloning;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
result_list: [
  [ ; OK; 0.062432; None; ]
]
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-create-DFA.py;
result_list: [
  [ ; OK; 0.062942; None; ]
]
title: NFA to DFA (subset construction);
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
result_list: [
  [ ; OK; 0.083194; None; ]
]
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-parallelize-trace-origin.py;
result_list: [
  [ ; OK; 0.056503; None; ]
]
title: Paralellization;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateInfo-has_trigger.py;
result_list: [
  [ ; OK; 0.078405; None; ]
]
title: Has Trigger;
title_group: Trigger Set Check;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf16_interval_split.py;
result_list: [
  [ 1; OK; 0.044638; None; ]
  [ 2; OK; 0.049417; None; ]
  [ 3; OK; 0.044497; None; ]
  [ 4; OK; 0.050388; None; ]
  [ 5; OK; 0.051956; None; ]
]
title: Contigous Word Sequence Ranges;
title_group: UTF16 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf16_number_set_split.py;
result_list: [
  [ ; OK; 6.966259; None; ]
]
title: Larger Number Sets;
title_group: UTF16 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_number_set_split.py;
result_list: [
  [ 1; OK; 0.060516; None; ]
  [ 2; OK; 0.054288; None; ]
  [ 3; OK; 0.063011; None; ]
  [ 4; OK; 0.059368; None; ]
  [ 4b; OK; 0.055430; None; ]
  [ misc; OK; 0.056938; None; ]
]
title: Contigous Byte Sequence Ranges;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_number_set_split-by-length.py;
result_list: [
  [ 1; OK; 0.058140; None; ]
  [ 2; OK; 0.057490; None; ]
  [ Overlap1; OK; 0.045782; None; ]
  [ Overlap2; OK; 0.049732; None; ]
]
title: Intervals;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split-do.py;
result_list: [
  [ ; OK; 1.090060; None; ]
]
title: Larger Number Sets;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split-do-2.py;
result_list: [
  [ ; OK; 0.103702; None; ]
]
title: Larger Number Sets;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split.py;
result_list: [
  [ 1.1; OK; 0.046916; None; ]
  [ 1.2; OK; 0.047197; None; ]
  [ 2.1; OK; 0.045116; None; ]
  [ 2.2; OK; 0.060451; None; ]
  [ 2.3; OK; 0.062407; None; ]
  [ 3.1; OK; 0.047539; None; ]
  [ 3.2; OK; 0.050875; None; ]
  [ 3.3; OK; 0.064997; None; ]
  [ 4.1; OK; 0.049799; None; ]
  [ 4.2; OK; 0.057369; None; ]
  [ 4.3; OK; 0.048537; None; ]
  [ 4.4; OK; 0.049013; None; ]
]
title: Plug Intermediate States;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
