{
file_name: test-StateInfo-trigger-map.py;
result_list: [
  [ ; OK; 0.073497; None; ]
]
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-get_trigger_map.py;
result_list: [
  [ 1; OK; 0.071491; None; ]
  [ 2; OK; 0.065657; None; ]
  [ 3; OK; 0.066762; None; ]
  [ 4; OK; 0.066085; None; ]
  [ 5; OK; 0.070074; None; ]
  [ 6; OK; 0.069790; None; ]
  [ 7; OK; 0.069969; None; ]
  [ 8; OK; 0.067610; None; ]
]
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-epsilon-closure.py;
result_list: [
  [ ; OK; 0.047200; None; ]
]
title: Epsilon closure (single state);
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-elementary_trigger_sets.py;
result_list: [
  [ ; OK; 0.044898; None; ]
]
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-elementary_trigger_sets-2.py;
result_list: [
  [ ; OK; 0.046599; None; ]
]
title: Get elementary trigger sets II;
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-get_graphviz_string.py;
result_list: [
  [ 1; OK; 0.046642; None; ]
  [ 2; OK; 0.045556; None; ]
]
title: Get graphviz string of state machine.;
title_group: Plot;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n.py;
result_list: [
  [ Normal; OK; 0.753839; None; ]
  [ BeginOfLine; OK; 0.728957; None; ]
]
title: Characters;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n-2.py;
result_list: [
  [ Same; OK; 0.561230; None; ]
  [ Different; OK; 1.187775; None; ]
  [ TwoSet; OK; 0.626563; None; ]
  [ Grid; OK; 0.385854; None; ]
  [ Grid-BOL; OK; 0.461622; None; ]
]
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n-codec.py;
result_list: [
  [ UTF8; OK; 0.349973; None; ]
  [ UTF16; OK; 0.371861; None; ]
]
title: Codec Engine;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_newline_n.py;
result_list: [
  [ ; OK; 1.025044; None; ]
]
title: Newlines;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-detect.py;
result_list: [
  [ ; OK; 0.669987; None; ]
]
title: Detection;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-mount_pseudo.py;
result_list: [
  [ ; OK; 0.101637; None; ]
]
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-philosophical_cut.py;
result_list: [
  [ ; OK; 0.184137; None; ]
]
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-clone.py;
result_list: [
  [ ; OK; 0.048802; None; ]
]
title: Cloning;
title_group: StateMachine;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-get_predecessor_db.py;
result_list: [
  [ linear; OK; 0.338554; 831676962; ]
  [ butterfly; OK; 3.929040; -1903424989; ]
  [ long_loop; OK; 0.452833; -1132237465; ]
  [ nested_loop; OK; 0.102146; -342497869; ]
  [ mini_loop; OK; 0.052968; -1072080967; ]
  [ fork; OK; 0.427746; 375926482; ]
  [ fork2; OK; 0.090296; 1247149166; ]
  [ fork3; OK; 2.625518; 2069247824; ]
  [ fork4; OK; 2.861510; 1103825239; ]
  [ tree; OK; 3.187136; 2003462624; ]
  [ mini_bubble; OK; 0.050138; -1847663482; ]
  [ bubble; OK; 0.055535; 1383889657; ]
  [ bubble2; OK; 0.059650; -1843129339; ]
  [ bubble2b; OK; 0.080185; 1091782890; ]
  [ bubble3; OK; 0.092822; -1843129339; ]
  [ bubble4; OK; 0.085771; 563821749; ]
]
title: get_predecessor_db;
title_group: StateMachine;
hwut_info_time: 1426735597L;
}
{
file_name: test-setup_post_condition.py;
result_list: [
  [ ; OK; 0.059701; None; ]
]
title: Append Post Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-setup_border_conditions.py;
result_list: [
  [ ; OK; 0.107816; None; ]
]
title: Append Post Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-inverse.py;
result_list: [
  [ ; OK; 0.050926; None; ]
]
title: Inverse;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-parallelize.py;
result_list: [
  [ ; OK; 0.075478; None; ]
]
title: Paralell;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-repeat.py;
result_list: [
  [ ; OK; 0.050732; None; ]
]
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-repeat-pure.py;
result_list: [
  [ ; OK; 0.057137; None; ]
]
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-sequentialize.py;
result_list: [
  [ ; OK; 0.049524; None; ]
]
title: Sequence;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-setup_pre_condition.py;
result_list: [
  [ ; OK; 0.059964; None; ]
]
title: Setup Pre-Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-clone.py;
result_list: [
  [ ; OK; 0.050461; None; ]
]
title: Cloning;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
result_list: [
  [ ; OK; 0.052613; None; ]
]
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-create-DFA.py;
result_list: [
  [ ; OK; 0.057263; None; ]
]
title: NFA to DFA (subset construction);
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
result_list: [
  [ ; OK; 0.069834; None; ]
]
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-parallelize-trace-origin.py;
result_list: [
  [ ; OK; 0.053710; None; ]
]
title: Paralellization;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateInfo-has_trigger.py;
result_list: [
  [ ; OK; 0.075532; None; ]
]
title: Has Trigger;
title_group: Trigger Set Check;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf16_interval_split.py;
result_list: [
  [ 1; OK; 0.044082; None; ]
  [ 2; OK; 0.054733; None; ]
  [ 3; OK; 0.046552; None; ]
  [ 4; OK; 0.057763; None; ]
  [ 5; OK; 0.047783; None; ]
]
title: Contigous Word Sequence Ranges;
title_group: UTF16 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf16_number_set_split.py;
result_list: [
  [ ; OK; 6.153812; None; ]
]
title: Larger Number Sets;
title_group: UTF16 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_number_set_split.py;
result_list: [
  [ 1; OK; 0.046468; None; ]
  [ 2; OK; 0.055019; None; ]
  [ 3; OK; 0.049905; None; ]
  [ 4; OK; 0.050894; None; ]
  [ 4b; OK; 0.063054; None; ]
  [ misc; OK; 0.043944; None; ]
]
title: Contigous Byte Sequence Ranges;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_number_set_split-by-length.py;
result_list: [
  [ 1; OK; 0.057738; None; ]
  [ 2; OK; 0.046921; None; ]
  [ Overlap1; OK; 0.055527; None; ]
  [ Overlap2; OK; 0.052742; None; ]
]
title: Intervals;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split-do.py;
result_list: [
  [ ; OK; 0.950312; None; ]
]
title: Larger Number Sets;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split-do-2.py;
result_list: [
  [ ; OK; 0.089603; None; ]
]
title: Larger Number Sets;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split.py;
result_list: [
  [ 1.1; OK; 0.052466; None; ]
  [ 1.2; OK; 0.051745; None; ]
  [ 2.1; OK; 0.049322; None; ]
  [ 2.2; OK; 0.062910; None; ]
  [ 2.3; OK; 0.051480; None; ]
  [ 3.1; OK; 0.050027; None; ]
  [ 3.2; OK; 0.056611; None; ]
  [ 3.3; OK; 0.054188; None; ]
  [ 4.1; OK; 0.047296; None; ]
  [ 4.2; OK; 0.049903; None; ]
  [ 4.3; OK; 0.055327; None; ]
  [ 4.4; OK; 0.055251; None; ]
]
title: Plug Intermediate States;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
