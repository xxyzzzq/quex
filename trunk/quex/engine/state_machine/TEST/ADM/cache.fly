{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.066508; None; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.067473; None; ]
  [ 2; OK; 0.067772; None; ]
  [ 3; OK; 0.064801; None; ]
  [ 4; OK; 0.066052; None; ]
  [ 5; OK; 0.063867; None; ]
  [ 6; OK; 0.065490; None; ]
  [ 7; OK; 0.073711; None; ]
  [ 8; OK; 0.065250; None; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048551; None; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.044235; None; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.044828; None; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.042532; None; ]
  [ 2; OK; 0.044165; None; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1454022471L;
result_list: [
  [ Normal; OK; 0.692428; None; ]
  [ BeginOfLine; OK; 0.706050; None; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ Same; OK; 0.481349; None; ]
  [ Different; OK; 0.933346; None; ]
  [ TwoSet; OK; 0.441310; None; ]
  [ Grid; OK; 0.339103; None; ]
  [ Grid-BOL; OK; 0.330420; None; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1454193383L;
result_list: [
  [ UTF8; OK; 0.293324; 0; ]
  [ UTF16; OK; 0.265593; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.875519; None; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.408418; None; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.096866; None; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.152977; None; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048193; None; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1454022471L;
result_list: [
  [ linear; OK; 0.377590; None; ]
  [ butterfly; OK; 3.483067; None; ]
  [ long_loop; OK; 0.418138; None; ]
  [ nested_loop; OK; 0.088214; None; ]
  [ mini_loop; OK; 0.045548; None; ]
  [ fork; OK; 0.379485; None; ]
  [ fork2; OK; 0.092472; None; ]
  [ fork3; OK; 2.744504; None; ]
  [ fork4; OK; 3.056768; None; ]
  [ tree; OK; 2.803695; None; ]
  [ mini_bubble; OK; 0.051819; None; ]
  [ bubble; OK; 0.044955; None; ]
  [ bubble2; OK; 0.052871; None; ]
  [ bubble2b; OK; 0.049338; None; ]
  [ bubble3; OK; 0.055164; None; ]
  [ bubble4; OK; 0.052192; None; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.056755; None; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.099992; None; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.050472; None; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.064150; None; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.051221; None; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048525; None; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.049055; None; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048985; None; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.052278; None; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.047716; None; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048415; None; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.060915; None; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.055754; None; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.065363; None; ]
]
}
{
title: Contigous Word Sequence Ranges;
title_group: UTF16 State Split;
file_name: test-utf16_interval_split.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.046552; None; ]
  [ 2; OK; 0.062241; None; ]
  [ 3; OK; 0.054185; None; ]
  [ 4; OK; 0.048772; None; ]
  [ 5; OK; 0.045871; None; ]
]
}
{
title: Larger Number Sets;
title_group: UTF16 State Split;
file_name: test-utf16_number_set_split.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 4.493754; -1145164143; ]
]
}
{
title: Contigous Byte Sequence Ranges;
title_group: UTF8 State Split;
file_name: test-utf8_number_set_split.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.054333; None; ]
  [ 2; OK; 0.048260; None; ]
  [ 3; OK; 0.046393; None; ]
  [ 4; OK; 0.045407; None; ]
  [ 4b; OK; 0.051458; None; ]
  [ misc; OK; 0.044716; None; ]
]
}
{
title: Intervals;
title_group: UTF8 State Split;
file_name: test-utf8_number_set_split-by-length.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.050947; None; ]
  [ 2; OK; 0.046382; None; ]
  [ Overlap1; OK; 0.046857; None; ]
  [ Overlap2; OK; 0.047048; None; ]
]
}
{
title: Larger Number Sets;
title_group: UTF8 State Split;
file_name: test-utf8_state_split-do.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.775529; -1101852080; ]
]
}
{
title: Larger Number Sets;
title_group: UTF8 State Split;
file_name: test-utf8_state_split-do-2.py;
hwut_info_time: 1454142965L;
result_list: [
  [ ; OK; 0.079241; None; ]
]
}
{
title: Plug Intermediate States;
title_group: UTF8 State Split;
file_name: test-utf8_state_split.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1.1; OK; 0.046102; None; ]
  [ 1.2; OK; 0.045137; None; ]
  [ 2.1; OK; 0.047640; None; ]
  [ 2.2; OK; 0.047844; None; ]
  [ 2.3; OK; 0.049110; None; ]
  [ 3.1; OK; 0.047199; None; ]
  [ 3.2; OK; 0.046347; None; ]
  [ 3.3; OK; 0.045362; None; ]
  [ 4.1; OK; 0.047478; None; ]
  [ 4.2; OK; 0.045320; None; ]
  [ 4.3; OK; 0.048725; None; ]
  [ 4.4; OK; 0.048760; None; ]
]
}
