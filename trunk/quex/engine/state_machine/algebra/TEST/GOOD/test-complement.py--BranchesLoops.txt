_____________________________________________________________________
A = (AB|XY)+
complement(A): init-state = 0L
00000 
     == [-oo, '@'], ['B', 'W'], ['Y', oo] ==> 00001
     == 'A' ==> 00002
     == 'X' ==> 00004
    
00001 A
     == [-oo, oo] ==> 00001
    
00002 A
     == [-oo, 'A'], ['C', oo] ==> 00001
     == 'B' ==> 00003
    
00003 
     == [-oo, '@'], ['B', 'W'], ['Y', oo] ==> 00001
     == 'A' ==> 00002
     == 'X' ==> 00004
    
00004 A
     == [-oo, 'X'], ['Z', oo] ==> 00001
     == 'Y' ==> 00003
    


union(A, complement(A)):            All  = True
intersection(A, complement(A)):     None = True
identity(A, complement(complement(A)): True
_____________________________________________________________________
A = (AB|XY)((DE|FG)*)
complement(A): init-state = 0L
00000 
     == [-oo, '@'], ['B', 'W'], ['Y', oo] ==> 00001
     == 'A' ==> 00002
     == 'X' ==> 00006
    
00001 A
     == [-oo, oo] ==> 00001
    
00002 A
     == [-oo, 'A'], ['C', oo] ==> 00001
     == 'B' ==> 00003
    
00003 
     == [-oo, 'C'], 'E', ['G', oo] ==> 00001
     == 'D' ==> 00004
     == 'F' ==> 00005
    
00004 A
     == [-oo, 'D'], ['F', oo] ==> 00001
     == 'E' ==> 00003
    
00005 A
     == [-oo, 'F'], ['H', oo] ==> 00001
     == 'G' ==> 00003
    
00006 A
     == [-oo, 'X'], ['Z', oo] ==> 00001
     == 'Y' ==> 00003
    


union(A, complement(A)):            All  = True
intersection(A, complement(A)):     None = True
identity(A, complement(complement(A)): True
_____________________________________________________________________
A = (((AB|XY)+)(DE|FG)+)(HI|JK)+
complement(A): init-state = 0L
00000 
     == [-oo, '@'], ['B', 'W'], ['Y', oo] ==> 00001
     == 'A' ==> 00002
     == 'X' ==> 00010
    
00001 A
     == [-oo, oo] ==> 00001
    
00002 A
     == [-oo, 'A'], ['C', oo] ==> 00001
     == 'B' ==> 00003
    
00003 A
     == [-oo, '@'], ['B', 'C'], 'E', ['G', 'W'], ['Y', oo] ==> 00001
     == 'A' ==> 00002
     == 'D' ==> 00004
     == 'F' ==> 00006
     == 'X' ==> 00010
    
00004 A
     == [-oo, 'D'], ['F', oo] ==> 00001
     == 'E' ==> 00005
    
00005 A
     == [-oo, 'C'], 'E', 'G', 'I', ['K', oo] ==> 00001
     == 'D' ==> 00004
     == 'F' ==> 00006
     == 'H' ==> 00007
     == 'J' ==> 00009
    
00006 A
     == [-oo, 'F'], ['H', oo] ==> 00001
     == 'G' ==> 00005
    
00007 A
     == [-oo, 'H'], ['J', oo] ==> 00001
     == 'I' ==> 00008
    
00008 
     == [-oo, 'G'], 'I', ['K', oo] ==> 00001
     == 'H' ==> 00007
     == 'J' ==> 00009
    
00009 A
     == [-oo, 'J'], ['L', oo] ==> 00001
     == 'K' ==> 00008
    
00010 A
     == [-oo, 'X'], ['Z', oo] ==> 00001
     == 'Y' ==> 00003
    


union(A, complement(A)):            All  = True
intersection(A, complement(A)):     None = True
identity(A, complement(complement(A)): True
_____________________________________________________________________
A = ((AB|XY)(DE|FG)(HI|JK)|(DE|FG)(HI|JK)|(HI|JK))+
complement(A): init-state = 0L
00000 
     == [-oo, '@'], ['B', 'C'], 'E', 'G', 'I', ['K', 'W'], ['Y', oo] ==> 00001
     == 'A' ==> 00002
     == 'D' ==> 00004
     == 'F' ==> 00008
     == 'H' ==> 00006
     == 'J' ==> 00009
     == 'X' ==> 00010
    
00001 A
     == [-oo, oo] ==> 00001
    
00002 A
     == [-oo, 'A'], ['C', oo] ==> 00001
     == 'B' ==> 00003
    
00003 A
     == [-oo, 'C'], 'E', ['G', oo] ==> 00001
     == 'D' ==> 00004
     == 'F' ==> 00008
    
00004 A
     == [-oo, 'D'], ['F', oo] ==> 00001
     == 'E' ==> 00005
    
00005 A
     == [-oo, 'G'], 'I', ['K', oo] ==> 00001
     == 'H' ==> 00006
     == 'J' ==> 00009
    
00006 A
     == [-oo, 'H'], ['J', oo] ==> 00001
     == 'I' ==> 00007
    
00007 
     == [-oo, '@'], ['B', 'C'], 'E', 'G', 'I', ['K', 'W'], ['Y', oo] ==> 00001
     == 'A' ==> 00002
     == 'D' ==> 00004
     == 'F' ==> 00008
     == 'H' ==> 00006
     == 'J' ==> 00009
     == 'X' ==> 00010
    
00008 A
     == [-oo, 'F'], ['H', oo] ==> 00001
     == 'G' ==> 00005
    
00009 A
     == [-oo, 'J'], ['L', oo] ==> 00001
     == 'K' ==> 00007
    
00010 A
     == [-oo, 'X'], ['Z', oo] ==> 00001
     == 'Y' ==> 00003
    


union(A, complement(A)):            All  = True
intersection(A, complement(A)):     None = True
identity(A, complement(complement(A)): True
