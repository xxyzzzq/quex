{
file_name: test-algebraic-relations.py;
result_list: [
  [ unary; OK; 4.845417; None; ]
  [ binary; OK; 7.526775; None; ]
  [ derived_binary; OK; 8.214267; None; ]
]
title: Algebraic Relations;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement.py;
result_list: [
  [ Sequence; OK; 0.124546; None; ]
  [ Branches; OK; 0.290489; None; ]
  [ Loops; OK; 0.177708; None; ]
  [ BranchesLoops; OK; 0.416254; None; ]
  [ Misc; OK; 0.861928; None; ]
]
title: Complementary State Machines;
hwut_info_time: 1424896296L;
}
{
file_name: test-difference.py;
result_list: [
  [ Easy; OK; 0.240325; None; ]
  [ FalseCases; OK; 0.292394; None; ]
  [ GoodCases; OK; 0.272691; None; ]
  [ FalseCasesII; OK; 0.279742; None; ]
  [ GoodCasesII; OK; 0.691794; None; ]
  [ Misc; OK; 0.467476; None; ]
]
title: Difference Operation;
hwut_info_time: 1426921701L;
}
{
file_name: test-intersection.py;
result_list: [
  [ 0; OK; 0.156224; None; ]
  [ 1; OK; 0.233636; None; ]
  [ 2; OK; 0.169641; None; ]
  [ 3; OK; 0.302012; None; ]
  [ 4; OK; 0.753760; None; ]
  [ 5; OK; 1.330290; None; ]
]
title: Intersection;
hwut_info_time: 1424896296L;
}
{
file_name: test-unique-state-indices.py;
result_list: [
  [ ; OK; 0.778181; None; ]
]
title: Unique State Indices;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_begin.py;
result_list: [
  [ 0; OK; 0.535135; None; ]
  [ 1; OK; 0.268248; None; ]
  [ 2; OK; 0.206043; None; ]
  [ 3; OK; 0.446936; None; ]
  [ 4; OK; 1.112155; None; ]
  [ 5; OK; 0.767032; None; ]
]
title: Cut patterns from P that begin with Q.;
title_group: Complement Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_in.py;
result_list: [
  [ 0; OK; 0.401822; None; ]
  [ 1; OK; 0.263702; None; ]
  [ 2; OK; 0.161553; None; ]
  [ 3; OK; 0.253409; None; ]
  [ 4; OK; 0.515150; None; ]
  [ 5; OK; 0.681931; None; ]
]
title: Cut patterns from P that contain Q.;
title_group: Complement Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_end.py;
result_list: [
  [ 0; OK; 0.319306; None; ]
  [ 1; OK; 0.330062; None; ]
  [ 2; OK; 0.217230; None; ]
  [ 3; OK; 0.349636; None; ]
  [ 4; OK; 0.643624; None; ]
  [ 5; OK; 0.733295; None; ]
]
title: Cut patterns from P that end with Q.;
title_group: Complement End;
hwut_info_time: 1424896296L;
}
{
file_name: test-cut_begin.py;
result_list: [
  [ 0; OK; 0.319687; None; ]
  [ 1; OK; 0.213766; None; ]
  [ 2; OK; 0.133226; None; ]
  [ 3; OK; 0.205829; None; ]
  [ 4; OK; 0.427812; None; ]
  [ 5; OK; 0.219198; None; ]
]
title: Cut P so that it does not start with Q.;
title_group: Cut Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-cut_end.py;
result_list: [
  [ 0; OK; 0.453665; None; ]
  [ 1; OK; 0.294943; None; ]
  [ 2; OK; 0.181133; None; ]
  [ 3; OK; 0.233696; None; ]
  [ 4; OK; 0.431464; None; ]
  [ 5; OK; 0.236267; None; ]
]
title: Cut P so that it does not end with Q.;
title_group: Cut End;
hwut_info_time: 1424896296L;
}
