{
file_name: test-algebraic-relations.py;
result_list: [
  [ unary; OK; 5.449996; None; ]
  [ binary; OK; 10.438918; None; ]
  [ derived_binary; OK; 11.648743; None; ]
]
title: Algebraic Relations;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement.py;
result_list: [
  [ Sequence; OK; 0.155769; None; ]
  [ Branches; OK; 0.334344; None; ]
  [ Loops; OK; 0.203509; None; ]
  [ BranchesLoops; OK; 0.472361; None; ]
  [ Misc; OK; 0.966379; None; ]
]
title: Complementary State Machines;
hwut_info_time: 1424896296L;
}
{
file_name: test-difference.py;
result_list: [
  [ Easy; OK; 0.283194; None; ]
  [ FalseCases; OK; 0.254927; None; ]
  [ GoodCases; OK; 0.247132; None; ]
  [ FalseCasesII; OK; 0.327720; None; ]
  [ GoodCasesII; OK; 0.813185; None; ]
  [ Misc; OK; 0.502790; None; ]
]
title: Difference Operation;
hwut_info_time: 1426921701L;
}
{
file_name: test-intersection.py;
result_list: [
  [ 0; OK; 0.153450; None; ]
  [ 1; OK; 0.215209; None; ]
  [ 2; OK; 0.154850; None; ]
  [ 3; OK; 0.282719; None; ]
  [ 4; OK; 0.694943; None; ]
  [ 5; OK; 1.233450; None; ]
]
title: Intersection;
hwut_info_time: 1424896296L;
}
{
file_name: test-unique-state-indices.py;
result_list: [
  [ ; OK; 0.908946; None; ]
]
title: Unique State Indices;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_begin.py;
result_list: [
  [ 0; OK; 0.614740; None; ]
  [ 1; OK; 0.378904; None; ]
  [ 2; OK; 0.274157; None; ]
  [ 3; OK; 0.535147; None; ]
  [ 4; OK; 0.987501; None; ]
  [ 5; OK; 0.913655; None; ]
]
title: Cut patterns from P that begin with Q.;
title_group: Complement Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_in.py;
result_list: [
  [ 0; OK; 0.487178; None; ]
  [ 1; OK; 0.330067; None; ]
  [ 2; OK; 0.222477; None; ]
  [ 3; OK; 0.233614; None; ]
  [ 4; OK; 0.480649; None; ]
  [ 5; OK; 0.656608; None; ]
]
title: Cut patterns from P that contain Q.;
title_group: Complement Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_end.py;
result_list: [
  [ 0; OK; 0.365208; None; ]
  [ 1; OK; 0.475688; None; ]
  [ 2; OK; 0.204257; None; ]
  [ 3; OK; 0.406290; None; ]
  [ 4; OK; 0.757958; None; ]
  [ 5; OK; 1.026724; None; ]
]
title: Cut patterns from P that end with Q.;
title_group: Complement End;
hwut_info_time: 1424896296L;
}
{
file_name: test-cut_begin.py;
result_list: [
  [ 0; OK; 0.349572; None; ]
  [ 1; OK; 0.260955; None; ]
  [ 2; OK; 0.165091; None; ]
  [ 3; OK; 0.214878; None; ]
  [ 4; OK; 0.525928; None; ]
  [ 5; OK; 0.266003; None; ]
]
title: Cut P so that it does not start with Q.;
title_group: Cut Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-cut_end.py;
result_list: [
  [ 0; OK; 0.523272; None; ]
  [ 1; OK; 0.339722; None; ]
  [ 2; OK; 0.207725; None; ]
  [ 3; OK; 0.314184; None; ]
  [ 4; OK; 0.481179; None; ]
  [ 5; OK; 0.238601; None; ]
]
title: Cut P so that it does not end with Q.;
title_group: Cut End;
hwut_info_time: 1424896296L;
}
