{
file_name: test-algebraic-relations.py;
result_list: [
  [ unary; OK; 5.269703; None; ]
  [ binary; OK; 10.099794; None; ]
  [ derived_binary; OK; 11.234991; None; ]
]
title: Algebraic Relations;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement.py;
result_list: [
  [ Sequence; OK; 0.150593; None; ]
  [ Branches; OK; 0.266851; None; ]
  [ Loops; OK; 0.159130; None; ]
  [ BranchesLoops; OK; 0.351985; None; ]
  [ Misc; OK; 0.737688; None; ]
]
title: Complementary State Machines;
hwut_info_time: 1424896296L;
}
{
file_name: test-difference.py;
result_list: [
  [ Easy; OK; 0.261123; None; ]
  [ FalseCases; OK; 0.314124; None; ]
  [ GoodCases; OK; 0.250767; None; ]
  [ FalseCasesII; OK; 0.271547; None; ]
  [ GoodCasesII; OK; 0.710568; None; ]
  [ Misc; OK; 0.614668; None; ]
]
title: Difference Operation;
hwut_info_time: 1426921701L;
}
{
file_name: test-intersection.py;
result_list: [
  [ 0; OK; 0.283148; None; ]
  [ 1; OK; 0.197593; None; ]
  [ 2; OK; 0.179436; None; ]
  [ 3; OK; 0.307871; None; ]
  [ 4; OK; 0.782509; None; ]
  [ 5; OK; 1.242863; None; ]
]
title: Intersection;
hwut_info_time: 1424896296L;
}
{
file_name: test-unique-state-indices.py;
result_list: [
  [ ; OK; 0.739608; None; ]
]
title: Unique State Indices;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_begin.py;
result_list: [
  [ 0; OK; 0.441022; None; ]
  [ 1; OK; 0.278812; None; ]
  [ 2; OK; 0.350845; None; ]
  [ 3; OK; 0.464276; None; ]
  [ 4; OK; 1.126357; None; ]
  [ 5; OK; 0.788994; None; ]
]
title: Cut patterns from P that begin with Q.;
title_group: Complement Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_in.py;
result_list: [
  [ 0; OK; 0.464021; None; ]
  [ 1; OK; 0.292688; None; ]
  [ 2; OK; 0.191379; None; ]
  [ 3; OK; 0.269348; None; ]
  [ 4; OK; 0.447771; None; ]
  [ 5; OK; 0.582172; None; ]
]
title: Cut patterns from P that contain Q.;
title_group: Complement Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_end.py;
result_list: [
  [ 0; OK; 0.269383; None; ]
  [ 1; OK; 0.393809; None; ]
  [ 2; OK; 0.197237; None; ]
  [ 3; OK; 0.292194; None; ]
  [ 4; OK; 0.548858; None; ]
  [ 5; OK; 0.730505; None; ]
]
title: Cut patterns from P that end with Q.;
title_group: Complement End;
hwut_info_time: 1424896296L;
}
{
file_name: test-cut_begin.py;
result_list: [
  [ 0; OK; 0.292026; None; ]
  [ 1; OK; 0.186103; None; ]
  [ 2; OK; 0.130177; None; ]
  [ 3; OK; 0.217164; None; ]
  [ 4; OK; 0.373379; None; ]
  [ 5; OK; 0.190623; None; ]
]
title: Cut P so that it does not start with Q.;
title_group: Cut Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-cut_end.py;
result_list: [
  [ 0; OK; 0.452348; None; ]
  [ 1; OK; 0.297641; None; ]
  [ 2; OK; 0.189174; None; ]
  [ 3; OK; 0.237984; None; ]
  [ 4; OK; 0.641049; None; ]
  [ 5; OK; 0.222968; None; ]
]
title: Cut P so that it does not end with Q.;
title_group: Cut End;
hwut_info_time: 1424896296L;
}
