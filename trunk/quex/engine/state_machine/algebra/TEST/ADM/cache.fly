{
file_name: test-algebraic-relations.py;
result_list: [
  [ unary; OK; 4.439057; None; ]
  [ binary; OK; 7.570662; None; ]
  [ derived_binary; OK; 9.210168; None; ]
]
title: Algebraic Relations;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement.py;
result_list: [
  [ Sequence; OK; 0.134271; None; ]
  [ Branches; OK; 0.262130; None; ]
  [ Loops; OK; 0.160539; None; ]
  [ BranchesLoops; OK; 0.385514; None; ]
  [ Misc; OK; 0.795504; None; ]
]
title: Complementary State Machines;
hwut_info_time: 1424896296L;
}
{
file_name: test-difference.py;
result_list: [
  [ Easy; OK; 0.227785; 1794453517; ]
  [ FalseCases; OK; 0.273359; -1973805762; ]
  [ GoodCases; OK; 0.250005; -1874061652; ]
  [ FalseCasesII; NO GOOD FILE; 0.297864; None; ]
  [ GoodCasesII; NO GOOD FILE; 0.990561; None; ]
  [ Misc; NO GOOD FILE; 1.031987; None; ]
  [ Pre-Post-Conditions; NO GOOD FILE; 0.140114; None; ]
]
title: Difference Operation;
hwut_info_time: 1424896296L;
}
{
file_name: test-intersection.py;
result_list: [
  [ 0; OK; 0.145702; None; ]
  [ 1; OK; 0.195066; None; ]
  [ 2; OK; 0.153833; None; ]
  [ 3; OK; 0.272986; None; ]
  [ 4; OK; 0.690218; None; ]
  [ 5; OK; 1.206917; None; ]
]
title: Intersection;
hwut_info_time: 1424896296L;
}
{
file_name: test-unique-state-indices.py;
result_list: [
  [ ; OK; 0.707959; None; ]
]
title: Unique State Indices;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_begin.py;
result_list: [
  [ 0; OK; 0.486441; None; ]
  [ 1; OK; 0.289934; None; ]
  [ 2; OK; 0.209742; None; ]
  [ 3; OK; 0.416607; None; ]
  [ 4; OK; 1.012506; None; ]
  [ 5; OK; 0.707162; None; ]
]
title: Cut patterns from P that begin with Q.;
title_group: Complement Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_in.py;
result_list: [
  [ 0; OK; 0.381334; None; ]
  [ 1; OK; 0.237814; None; ]
  [ 2; OK; 0.161176; None; ]
  [ 3; OK; 0.242109; None; ]
  [ 4; OK; 0.476397; None; ]
  [ 5; OK; 0.632615; None; ]
]
title: Cut patterns from P that contain Q.;
title_group: Complement Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_end.py;
result_list: [
  [ 0; OK; 0.284163; None; ]
  [ 1; OK; 0.360747; None; ]
  [ 2; OK; 0.220514; None; ]
  [ 3; OK; 0.317817; None; ]
  [ 4; OK; 0.603233; None; ]
  [ 5; OK; 0.722971; None; ]
]
title: Cut patterns from P that end with Q.;
title_group: Complement End;
hwut_info_time: 1424896296L;
}
{
file_name: test-cut_begin.py;
result_list: [
  [ 0; OK; 0.299268; None; ]
  [ 1; OK; 0.196685; None; ]
  [ 2; OK; 0.128842; None; ]
  [ 3; OK; 0.231083; None; ]
  [ 4; OK; 0.411934; None; ]
  [ 5; OK; 0.190821; None; ]
]
title: Cut P so that it does not start with Q.;
title_group: Cut Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-cut_end.py;
result_list: [
  [ 0; OK; 0.393816; None; ]
  [ 1; OK; 0.263651; None; ]
  [ 2; OK; 0.163373; None; ]
  [ 3; OK; 0.250201; None; ]
  [ 4; OK; 0.489621; None; ]
  [ 5; OK; 0.238026; None; ]
]
title: Cut P so that it does not end with Q.;
title_group: Cut End;
hwut_info_time: 1424896296L;
}
