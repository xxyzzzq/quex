init-state = 0L
00000 (15, 30), (28, 58), (1, 2), (5, 10)
     == 'a' ==> 00001
    
00001 (1, 3, A), (5, 11, A, pre=8), (15, 31), (28, 59)
     == 'b' ==> 00002
    
00002 (15, 32, A, pre=18), (28, 60)
     == 'c' ==> 00003
    
00003 (28, 61, A, pre=31)
    

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .positioner:
        .from 0: <nothing>
  .drop_out:
     goto Pattern1;


State 2:
  .entry:
    .positioner:
        .from 1: <nothing>
  .drop_out:
    if PreContext_18:  goto Pattern15;
    pos -= 1;  goto Pattern1;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
    if PreContext_31:  goto Pattern28;
    else if PreContext_18: pos -= 1;  goto Pattern15;
    pos -= 2;  goto Pattern1;


