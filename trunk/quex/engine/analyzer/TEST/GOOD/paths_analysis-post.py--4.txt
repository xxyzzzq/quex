init-state = 0L
00000 
     == 'a' ==> 00001
     == 'b' ==> 00004
     == 'c' ==> 00007
    
00001 S1
     == 'b' ==> 00002
    
00002 
     == 'c' ==> 00003
    
00003 A(1,R1)
    
00004 S2
     == 'b' ==> 00005
    
00005 
     == 'c' ==> 00006
    
00006 A(2,R2)
    
00007 
     == 'b' ==> 00008
    
00008 
     == 'c' ==> 00009
    
00009 A(3)
    

State 0:
  .entry:
    .from NONE: 

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 1:
  .entry:
    .from 0: 

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 2:
  .entry:
    .from 1: 

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 3:
  .entry:
    .from 2: 

.drop_out:
pos -= 2;  goto Pattern1;

State 4:
  .entry:
    .from 0: 

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 5:
  .entry:
    .from 4: 

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 6:
  .entry:
    .from 5: 

.drop_out:
pos -= 2;  goto Pattern2;

State 7:
  .entry:
    .from 0: 

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 8:
  .entry:
    .from 7: 

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 9:
  .entry:
    .from 8: 

.drop_out:
goto Pattern3;

