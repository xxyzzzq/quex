init-state = 0L
00000 (6, 16), (14, 33), (51, 133), (88, 238), (125, 343)
     == 'a' ==> 00001
     == 'b' ==> 00005
    
00001 (6, 17, A, pre=10), (51, 134, S), (88, 239), (125, 345)
     == 'a' ==> 00001
     == 'd' ==> 00002
    
00002 (51, 137), (88, 242, S), (125, 346)
     == 'd' ==> 00002
     == 'e' ==> 00003
    
00003 (51, 138), (88, 243), (125, 347, S)
     == 'f' ==> 00004
    
00004 (51, 139, A, R, pre=55), (88, 244, A, R, pre=92), (125, 348, A, R, pre=129)
    
00005 (14, 34, A, pre=18), (51, 135), (88, 240), (125, 344)
     == 'c' ==> 00006
    
00006 (51, 136, S), (88, 241), (125, 349)
     == 'c' ==> 00006
     == 'd' ==> 00002
    

State 0:
  .entry:
    .accepter:
        last_acceptance = Failure
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .accepter:
        if      PreContext_10: last_acceptance = Pattern6
    .positioner:
        .from 0: <nothing>
        .from 1: <nothing>
  .drop_out:
    if PreContext_10:  goto Pattern6;
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .positioner:
        .from 1:
            if 'PreContext_10':  position[Acceptance] = input_p;
            if 'PreContext_55':  position[PostContext_51]  = input_p;
        .from 2: <nothing>
        .from 6:if 'PreContext_55':  position[PostContext_51]  = input_p;
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 14: pos = position[Acceptance]; goto Pattern14;
        case 6: pos = position[Acceptance]; goto Pattern6;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 14: pos = position[Acceptance]; goto Pattern14;
        case 6: pos = position[Acceptance]; goto Pattern6;


State 4:
  .entry:
    .positioner:
        .from 3: <nothing>
  .drop_out:
    Checker:
        if      PreContext_55: accept = Pattern51
        else if PreContext_92: accept = Pattern88
        else if PreContext_129: accept = Pattern125
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 6: pos = position[Acceptance]; goto Pattern6;
        case 14: pos = position[Acceptance]; goto Pattern14;
        case 51: pos = position[PostContext_51] ; goto Pattern51;
        case 88: pos -= 2;  goto Pattern88;
        case 125: pos -= 1;  goto Pattern125;


State 5:
  .entry:
    .accepter:
        if      PreContext_18: last_acceptance = Pattern14
    .positioner:
        .from 0: <nothing>
  .drop_out:
    if PreContext_18:  goto Pattern14;
    pos = lexeme_start_p + 1;  goto Failure;


State 6:
  .entry:
    .positioner:
        .from 5:if 'PreContext_18':  position[Acceptance] = input_p;
        .from 6: <nothing>
  .drop_out:
    if PreContext_18: pos = position[Acceptance]; goto Pattern14;
    pos = lexeme_start_p + 1;  goto Failure;


