init-state = 399L
00399() <~ (11, 28), (20, 46), (57, 146), (94, 251), (131, 356)
      == 'a' ==> 00400
      == 'b' ==> 00401
      <no epsilon>
00400(A, S, P40, pre=9) <~ (11, 29, A, S, pre=9), (57, 148, S, P40), (94, 252), (131, 358)
      == 'a' ==> 00400
      == 'd' ==> 00403
      <no epsilon>
00403(S, P83) <~ (57, 149), (94, 255, S, P83), (131, 359)
      == 'd' ==> 00403
      == 'e' ==> 00404
      <no epsilon>
00404(S, P123) <~ (57, 150), (94, 256), (131, 360, S, P123)
      == 'f' ==> 00405
      <no epsilon>
00405(A, P123, pre=129) <~ (57, 151, A, P40, pre=55), (94, 257, A, P83, pre=92), (131, 361, A, P123, pre=129)
      <no epsilon>
00401(A, S, pre=18) <~ (20, 47, A, S, pre=18), (57, 147), (94, 253), (131, 357)
      == 'c' ==> 00402
      <no epsilon>
00402(S, P40) <~ (57, 152, S, P40), (94, 254), (131, 362)
      == 'c' ==> 00402
      == 'd' ==> 00403
      <no epsilon>

State 399:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 400:
  .entry:
    Accepter:
        if      PreContext_9: last_acceptance = Pattern11
    Positioner:
    if 'PreContext_9': Position[Acceptance] = input_p;
    if 'PreContext_55': Position[PostContext_40]  = input_p;
  .drop_out:
    if PreContext_9:  goto Pattern11;
    pos = lexeme_start_p + 1;  goto Failure;


State 401:
  .entry:
    Accepter:
        if      PreContext_18: last_acceptance = Pattern20
    Positioner:
    if 'PreContext_18': Position[Acceptance] = input_p;
  .drop_out:
    if PreContext_18:  goto Pattern20;
    pos = lexeme_start_p + 1;  goto Failure;


State 402:
  .entry:
    Positioner:
    if 'PreContext_55': Position[PostContext_40]  = input_p;
  .drop_out:
    if PreContext_18: pos = Position[Acceptance]; goto Pattern20;
    pos = lexeme_start_p + 1;  goto Failure;


State 403:
  .entry:
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 11: pos = Position[Acceptance]; goto Pattern11;
        case 20: pos = Position[Acceptance]; goto Pattern20;


State 404:
  .entry:
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 11: pos = Position[Acceptance]; goto Pattern11;
        case 20: pos = Position[Acceptance]; goto Pattern20;


State 405:
  .entry:
  .drop_out:
    Checker:
        if      PreContext_55: accept = Pattern57
        else if PreContext_92: accept = Pattern94
        else if PreContext_129: accept = Pattern131
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 131: pos -= 1;  goto Pattern131;
        case 11: pos = Position[Acceptance]; goto Pattern11;
        case 20: pos = Position[Acceptance]; goto Pattern20;
        case 57: pos = Position[PostContext_40] ; goto Pattern57;
        case 94: pos -= 2;  goto Pattern94;


