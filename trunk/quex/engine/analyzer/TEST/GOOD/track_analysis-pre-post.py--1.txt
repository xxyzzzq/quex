init-state = 0L
00000 (10, 22), (39, 86), (25, 55)
     == 'a' ==> 00001
    
00001 (10, 23, S), (25, 56), (39, 87)
     == 'b' ==> 00002
    
00002 (10, 24), (25, 57, S), (39, 88)
     == 'c' ==> 00003
    
00003 (10, 25, A, R, pre=14), (25, 58, A, R, pre=29), (39, 89, A, pre=43)
    

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .positioner:
        .from 0: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .positioner:
        .from 1: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
    if PreContext_14: pos -= 2;  goto Pattern10;
    else if PreContext_29: pos -= 1;  goto Pattern25;
    else if PreContext_43:  goto Pattern39;
    pos = lexeme_start_p + 1;  goto Failure;


