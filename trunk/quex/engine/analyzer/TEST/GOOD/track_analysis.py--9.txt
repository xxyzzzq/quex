init-state = 0L
00000 (4, 8), (9, 23)
     == ['a', 'h'], ['j', 'z'] ==> 00001
     == 'i' ==> 00002
    
00001 (9, 24, A)
     == ['a', 'z'] ==> 00001
    
00002 (4, 9), (9, 24, A)
     == ['a', 'e'], ['g', 'z'] ==> 00001
     == 'f' ==> 00003
    
00003 (4, 10, A), (9, 24, A)
     == ['a', 'z'] ==> 00001
    

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .positioner:
        .from 0: <nothing>
        .from 1: <nothing>
        .from 2: <nothing>
        .from 3: <nothing>
  .drop_out:
     goto Pattern9;


State 2:
  .entry:
    .positioner:
        .from 0: <nothing>
  .drop_out:
     goto Pattern9;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
     goto Pattern4;


