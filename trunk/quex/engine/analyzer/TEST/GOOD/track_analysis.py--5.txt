init-state = 68L
00068() <~ (1, 2), (20, 48)
      == 'a' ==> 00070
      == 'b' ==> 00069
      <no epsilon>
00070(A, S) <~ (1, 3, A, S), (20, 50)
      == 'a' ==> 00072
      == 'c' ==> 00071
      <no epsilon>
00072() <~ (20, 49)
      == 'c' ==> 00071
      <no epsilon>
00071() <~ (20, 51)
      == 'd' ==> 00073
      <no epsilon>
00073(A, S) <~ (20, 52, A, S)
      <no epsilon>
00069(A, S) <~ (1, 3, A, S), (20, 49)
      == 'c' ==> 00071
      <no epsilon>

State 68:
  .entry: 
  .drop_out: pos = lexeme_start + 1; goto Failure;

State 69:
  .entry: Pattern1, StoreAcceptancePosition, 
  .drop_out: goto Pattern1;

State 70:
  .entry: Pattern1, StoreAcceptancePosition, 
  .drop_out: goto Pattern1;

State 71:
  .entry: 
  .drop_out: pos = restore(StoredAcceptancePosition); goto Pattern1;

State 72:
  .entry: 
  .drop_out: pos -= 1; goto Pattern1;

State 73:
  .entry: 
  .drop_out: goto Pattern20;

