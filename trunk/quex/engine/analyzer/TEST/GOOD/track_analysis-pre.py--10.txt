init-state = 0L
00000 (14, 33), (42, 106), (71, 187), (104, 277), (137, 367), (6, 16)
     == 'a' ==> 00001
     == 'b' ==> 00005
    
00001 (6, 17, A, pre=10), (42, 107), (71, 189), (104, 279), (137, 369)
     == 'a' ==> 00001
     == 'd' ==> 00002
    
00002 (42, 110), (71, 190), (104, 280), (137, 370)
     == 'e' ==> 00003
    
00003 (42, 111, A), (71, 191), (104, 281), (137, 371)
     == 'f' ==> 00004
    
00004 (71, 192, A, pre=75), (104, 282, A, pre=108), (137, 372, A, pre=141)
    
00005 (14, 34, A, pre=18), (42, 108), (71, 188), (104, 278), (137, 368)
     == 'c' ==> 00006
    
00006 (42, 109), (71, 193), (104, 283), (137, 373)
     == 'c' ==> 00006
     == 'd' ==> 00002
    

State 0:
  .entry:
    .accepter:
        last_acceptance = Failure
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .accepter:
        if      PreContext_10: last_acceptance = Pattern6
    .positioner:
        .from 0: <nothing>
        .from 1: <nothing>
  .drop_out:
    if PreContext_10:  goto Pattern6;
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .positioner:
        .from 1: <nothing>
        .from 6: <nothing>
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 14: pos = position[Acceptance]; goto Pattern14;
        case 6: pos -= 1;  goto Pattern6;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
     goto Pattern42;


State 4:
  .entry:
    .positioner:
        .from 3: <nothing>
  .drop_out:
    if PreContext_75:  goto Pattern71;
    else if PreContext_108:  goto Pattern104;
    else if PreContext_141:  goto Pattern137;
    pos -= 1;  goto Pattern42;


State 5:
  .entry:
    .accepter:
        if      PreContext_18: last_acceptance = Pattern14
    .positioner:
        .from 0: <nothing>
  .drop_out:
    if PreContext_18:  goto Pattern14;
    pos = lexeme_start_p + 1;  goto Failure;


State 6:
  .entry:
    .positioner:
        .from 5:if 'PreContext_18':  position[Acceptance] = input_p;
        .from 6: <nothing>
  .drop_out:
    if PreContext_18: pos = position[Acceptance]; goto Pattern14;
    pos = lexeme_start_p + 1;  goto Failure;


