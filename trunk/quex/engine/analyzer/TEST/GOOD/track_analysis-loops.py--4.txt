init-state = 0L
00000 (39, 132)
     == 'a' ==> 00001
    
00001 (39, 133, A)
     == 'b' ==> 00002
    
00002 (39, 134)
     == 'c' ==> 00003
     == 'e' ==> 00006
    
00003 (39, 136)
     == 'c' ==> 00004
     == 'd' ==> 00002
    
00004 (39, 137)
     == 'c' ==> 00005
     == 'd' ==> 00003
    
00005 (39, 138)
     == 'd' ==> 00004
    
00006 (39, 135, A)
     == 'f' ==> 00007
    
00007 (39, 139)
     == 'g' ==> 00008
    
00008 (39, 140, A)
    

State 0:
  .entry:
    .from NONE:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
        .from 0:
  .drop_out:
     goto Pattern39;


State 2:
  .entry:
        .from 1: position[PostContext_39]  = input_p;
        .from 3:
  .drop_out:
    pos = position[PostContext_39] ; goto Pattern39;


State 3:
  .entry:
        .from 2:
        .from 4:
  .drop_out:
    pos = position[PostContext_39] ; goto Pattern39;


State 4:
  .entry:
        .from 3:
        .from 5:
  .drop_out:
    pos = position[PostContext_39] ; goto Pattern39;


State 5:
  .entry:
        .from 4:
  .drop_out:
    pos = position[PostContext_39] ; goto Pattern39;


State 6:
  .entry:
        .from 2:
  .drop_out:
     goto Pattern39;


State 7:
  .entry:
        .from 6:
  .drop_out:
    pos -= 1;  goto Pattern39;


State 8:
  .entry:
        .from 7:
  .drop_out:
     goto Pattern39;


State 0:
        [FAILURE]: NONE/set([0L])

State 1:
        [     39]: NONE/set([1L])

State 2:
    (*) [     39]: NONE/set([1L])

State 3:
    (*) [     39]: NONE/set([1L])

State 4:
    (*) [     39]: NONE/set([1L])

State 5:
    (*) [     39]: NONE/set([1L])

State 6:
        [     39]: NONE/set([6L])

State 7:
        [     39]: NONE/set([6L])

State 8:
        [     39]: NONE/set([8L])


--- Optimized States ---

State 2:
  .entry:
        .from 1: position[PostContext_0]  = input_p;
        .from 3:
  .drop_out:
    pos = position[PostContext_0] ; goto Pattern39;


State 3:
  .entry:
        .from 2:
        .from 4:
  .drop_out:
    pos = position[PostContext_0] ; goto Pattern39;


State 4:
  .entry:
        .from 3:
        .from 5:
  .drop_out:
    pos = position[PostContext_0] ; goto Pattern39;


State 5:
  .entry:
        .from 4:
  .drop_out:
    pos = position[PostContext_0] ; goto Pattern39;


