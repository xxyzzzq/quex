NOTE: Set SAME command list in recursion.

(Straight)---------------------------------------
________________________________________________________________________________
State A: [0L]
  [INTERVAL] [SCHEME_ID] [TARGET/STATE [0]]
  [-oo, 9]   None        **(s=0, d=DROP_OUT)
  [10]       None        **(s=0, d=0)
  [11, oo]   None        **(s=0, d=DROP_OUT)
State B: [1L]
  [INTERVAL] [SCHEME_ID] [TARGET/STATE [1]]
  [-oo, 9]   None        **(s=1, d=DROP_OUT)
  [10]       None        **(s=1, d=0)
  [11, oo]   None        **(s=1, d=DROP_OUT)

_ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ _
State A: [0L]
State B: [1L]
Result:

  [INTERVAL] [SCHEME_ID] [TARGET/STATE [0, 1]]
  [-oo, 9]   0           (s=0, d=DROP_OUT), (s=1, d=DROP_OUT)
  [10]       1           (s=2, d=0), (s=2, d=0)
  [11, oo]   0           (s=0, d=DROP_OUT), (s=1, d=DROP_OUT)

  BorderN = 2


(Vice Versa)-------------------------------------
________________________________________________________________________________
State A: [1L]
  [INTERVAL] [SCHEME_ID] [TARGET/STATE [1]]
  [-oo, 9]   None        **(s=1, d=DROP_OUT)
  [10]       None        **(s=1, d=0)
  [11, oo]   None        **(s=1, d=DROP_OUT)
State B: [0L]
  [INTERVAL] [SCHEME_ID] [TARGET/STATE [0]]
  [-oo, 9]   None        **(s=0, d=DROP_OUT)
  [10]       None        **(s=0, d=0)
  [11, oo]   None        **(s=0, d=DROP_OUT)

_ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ _
State A: [1L]
State B: [0L]
Result:

  [INTERVAL] [SCHEME_ID] [TARGET/STATE [1, 0]]
  [-oo, 9]   0           (s=1, d=DROP_OUT), (s=0, d=DROP_OUT)
  [10]       1           (s=3, d=0), (s=3, d=0)
  [11, oo]   0           (s=1, d=DROP_OUT), (s=0, d=DROP_OUT)

  BorderN = 2


