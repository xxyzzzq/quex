#spec 
       [\x0A\x0b\x0c\x85\X2028\X2029]      => newline 1;
       [\x0d]                                   => newline 0;
       [\t]                                     => grid    4;
       [\X0600-\X06FF]                         => space   3;
       [\U010000-\U10FFFF]                     => space   2;
    
#ifdef __QUEX_OPTION_COUNTER
void
QUEX_NAME(TEST_MODE_counter)(QUEX_TYPE_ANALYZER* me, QUEX_TYPE_CHARACTER* LexemeBegin, QUEX_TYPE_CHARACTER* LexemeEnd)
{
#   define self (*me)
    QUEX_TYPE_CHARACTER* iterator    = LexemeBegin;
    __QUEX_IF_COUNT_SHIFT_VALUES();

    __quex_assert(LexemeBegin <= LexemeEnd);
    for(iterator=LexemeBegin; iterator < LexemeEnd; ) {
        if( (*(iterator)) < 0x86 ) {
            if( (*(iterator)) < 0xD ) {
                switch( (*(iterator)) ) {
                    case 0x0: 
                    case 0x1: 
                    case 0x2: 
                    case 0x3: 
                    case 0x4: 
                    case 0x5: 
                    case 0x6: 
                    case 0x7: 
                    case 0x8: __QUEX_IF_COUNT_COLUMNS_ADD((size_t)1);
                        ++(((iterator)));
                    continue;
                    case 0x9:                 __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end &= ~ ((size_t)0x3));
                __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 4);
                        ++(((iterator)));
                    continue;
                    case 0xA: 
                    case 0xB: 
                    case 0xC: __QUEX_IF_COUNT_LINES_ADD((size_t)1);
                __QUEX_IF_COUNT_COLUMNS_SET((size_t)1);
                        ++(((iterator)));
                    continue;

                }
            } else {
                if( (*(iterator)) == 0xD ) {
                    __QUEX_IF_COUNT_COLUMNS_SET((size_t)1);
                        ++(((iterator)));
                    continue;
                } else if( (*(iterator)) < 0x85 ) {
                    __QUEX_IF_COUNT_COLUMNS_ADD((size_t)1);
                        ++(((iterator)));
                    continue;
                } else {
                    __QUEX_IF_COUNT_LINES_ADD((size_t)1);
                __QUEX_IF_COUNT_COLUMNS_SET((size_t)1);
                        ++(((iterator)));
                    continue;
                }
            }
        } else {
            if( (*(iterator)) < 0x2028 ) {
                if( (*(iterator)) < 0x600 ) {
                    __QUEX_IF_COUNT_COLUMNS_ADD((size_t)1);
                        ++(((iterator)));
                    continue;
                } else if( (*(iterator)) < 0x700 ) {
                    __QUEX_IF_COUNT_COLUMNS_ADD((size_t)3);
                        ++(((iterator)));
                    continue;
                } else {
                    __QUEX_IF_COUNT_COLUMNS_ADD((size_t)1);
                        ++(((iterator)));
                    continue;
                }
            } else {
                if( (*(iterator)) < 0x202A ) {
                    __QUEX_IF_COUNT_LINES_ADD((size_t)1);
                __QUEX_IF_COUNT_COLUMNS_SET((size_t)1);
                        ++(((iterator)));
                    continue;
                } else if( (*(iterator)) < 0x10000 ) {
                    __QUEX_IF_COUNT_COLUMNS_ADD((size_t)1);
                        ++(((iterator)));
                    continue;
                } else if( (*(iterator)) < 0x110000 ) {
                    __QUEX_IF_COUNT_COLUMNS_ADD((size_t)2);
                        ++(((iterator)));
                    continue;
                } else {
                    __QUEX_IF_COUNT_COLUMNS_ADD((size_t)1);
                        ++(((iterator)));
                    continue;
                }
            }
        }
    }
    __quex_assert(iterator == LexemeEnd); /* Otherwise, lexeme violates codec character boundaries. */
   return;
#  undef self
}
#endif /* __QUEX_OPTION_COUNTER */
_____________________________________________________________________________
file:     './data/example.utf32le';
char_size: 4;
byte_n:    549;
column_n:  1298;
line_n:    6;
## gcc -Wall -I. -ggdb ./data/check.c ./data/test.c  -D__QUEX_OPTION_COUNTER -DDEF_COUNTER_FUNCTION='QUEX_NAME(TEST_MODE_counter)'  -DDEF_FILE_NAME='"./data/example.utf32le"'  -DDEF_CHARACTER_TYPE=uint32_t  -o test
