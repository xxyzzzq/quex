(*) Lexical Analyser Patterns:
           [a-eg-z]+ --> IDENTIFIER
                " "+ --> WHITESPACE
                 for --> FOR
              forest --> FOREST
            forester --> FORESTER
          formidable --> FORMIDABLE
## (1) code generation
## (2) compiling generated engine code and test
g++  ./tmp.cpp -I./. -I$QUEX_PATH -o ./tmp.cpp.exe -D__QUEX_OPTION_UNIT_TEST_ISOLATED_CODE_GENERATION -ggdb ##
## (3) running the test
(*) test string: 
'for forester forest formidable forever foresmic foresti foresteri formidablek formidabl'
(*) result:
                FOR  'for'
         WHITESPACE  ' '
           FORESTER  'forester'
         WHITESPACE  ' '
             FOREST  'forest'
         WHITESPACE  ' '
         FORMIDABLE  'formidable'
         WHITESPACE  ' '
                FOR  'for'
         IDENTIFIER  'ever'
         WHITESPACE  ' '
                FOR  'for'
         IDENTIFIER  'esmic'
         WHITESPACE  ' '
             FOREST  'forest'
         IDENTIFIER  'i'
         WHITESPACE  ' '
           FORESTER  'forester'
         IDENTIFIER  'i'
         WHITESPACE  ' '
         FORMIDABLE  'formidable'
         IDENTIFIER  'k'
         WHITESPACE  ' '
                FOR  'for'
         IDENTIFIER  'midabl'
  ''

## (4) cleaning up
