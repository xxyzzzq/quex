--(Transition Targets)--------------------------------------------------

## const QUEX_TYPE_GOTO_LABEL
## const QUEX_TYPE_GOTO_LABEL
## const QUEX_TYPE_GOTO_LABEL
    const QUEX_TYPE_GOTO_LABEL template_1_target_0[3] = { 1, -1,2, };
    const QUEX_TYPE_GOTO_LABEL template_1_target_1[3] = { 1, 3, 2, };
    const QUEX_TYPE_GOTO_LABEL template_1_target_2[3] = { 2, 3, 1, };


--(Template Code)-------------------------------------------------------

STATE_100:
    QUEX_DEBUG_PRINT(&me->buffer, "LABEL: STATE_100");
    QUEX_DEBUG_PRINT2(&me->buffer, "template_state_key = %s", "0");
    template_state_key = 0;
    goto TEMPLATE_1;

STATE_200:
    QUEX_DEBUG_PRINT(&me->buffer, "LABEL: STATE_200");
    QUEX_DEBUG_PRINT2(&me->buffer, "template_state_key = %s", "1");
    template_state_key = 1;
    goto TEMPLATE_1;

STATE_202:
    QUEX_DEBUG_PRINT(&me->buffer, "LABEL: STATE_202");
    QUEX_DEBUG_PRINT2(&me->buffer, "template_state_key = %s", "2");
    template_state_key = 2;
    goto TEMPLATE_1;

TEMPLATE_1:
    QUEX_DEBUG_PRINT(&me->buffer, "LABEL: TEMPLATE_1");
STATE_1_INPUT:
    QUEX_DEBUG_PRINT(&me->buffer, "LABEL: STATE_1_INPUT");

    QUEX_NAME(Buffer_input_p_increment)(&me->buffer);
    input = QUEX_NAME(Buffer_input_get)(&me->buffer);
    if( input < 10) {
        if( input < 8) {
            goto STATE_1_DROP_OUT;    /* [-oo, '\t'] */
        } else {
            if( input == 8) {
                QUEX_TEMPLATE_GOTO(1, 0);    /* \8 */
            } else {
                QUEX_TEMPLATE_GOTO(1, 1);    /* '\t' */
            }
        }
    } else {
        if( input < 12) {
            if( input == 10) {
                goto STATE_100;    /* '\n' */
            } else {
                goto TEMPLATE_1;    /* \11 */
            }
        } else {
            if( input == 12) {
                goto STATE_1_DROP_OUT_DIRECT;    /* \12 */
            } else {
                QUEX_TEMPLATE_GOTO(1, 2);    /* [\14, oo] */
            }
        }
    }

STATE_1_DROP_OUT:
    QUEX_DEBUG_PRINT(&me->buffer, "LABEL: STATE_1_DROP_OUT");
    if(   (input != QUEX_SETTING_BUFFER_LIMIT_CODE) 
       || (me->buffer._memory._end_of_file_p != 0x0) ) {
STATE_1_DROP_OUT_DIRECT:
        QUEX_DEBUG_PRINT(&me->buffer, "LABEL: STATE_1_DROP_OUT_DIRECT");
        QUEX_GOTO_last_acceptance();

    }

    QUEX_NAME(buffer_reload_forward_LA_PC)(&me->buffer, &last_acceptance_input_position,
                                       post_context_start_position, PostContextStartPositionN);
    goto STATE_1_INPUT;


--(State Router)--------------------------------------------------------

STATE_ROUTER:
    switch( target_state_index ) {
    case 1: goto STATE_1;
    case 2: goto STATE_2;
    case 3: goto STATE_3;
    case -1: goto STATE_1_DROP_OUT;
    }


