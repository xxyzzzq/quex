-1L  
<no title>
=====
-1L  test-setup_pre_condition.py
StateMachine Operations:Setup Pre-Condition
RESULT:   OK;
=====
-1L  test-StateInfo-trigger-map.py
DFA:Get Trigger Map (intervals --> target states)
RESULT:   OK;
=====
-1L  test-count_newline_n.py

RESULT:   FAIL;
=====
-1L  test-StateMachine-inverse.py
StateMachine Operations:Inverse
RESULT:   OK;
=====
-1L  test-count_character_n.py

RESULT:   FAIL;
=====
-1L  test-repeat.py
StateMachine Operations:Repetition with min and max repetition numbers
RESULT:   OK;
=====
-1L  test-StateMachine-clone.py
StateMachine:Cloning
RESULT:   OK;
=====
-1L  test-parallelize.py
StateMachine Operations:Paralell
RESULT:   OK;
=====
-1L  test-StateMachine-trace-origin-create-DFA.py
Tracing origin:NFA to DFA (subset construction)
RESULT:   OK;
=====
-1L  test-StateMachine-create-DFA.py
NFA:Conversion to DFA (subset construction)
RESULT:   OK;
=====
-1L  test-ranking.py
Ranking of state machines:Pattern priorization
RESULT:   OK;
=====
-1L  test-StateMachine-elementary_trigger_sets.py
NFA:Get elementary trigger sets (target index --> trigger sets)
RESULT:   OK;
=====
-1L  test-StateMachine-trace-origin-clone.py
Tracing origin:Cloning
RESULT:   OK;
=====
-1L  test-StateMachine-filter-dominated-origins.py
Ranking of state machines:Filter dominated origins
RESULT:   OK;
=====
-1L  test-StateMachine-trace-origin-inverse.py
Tracing origin:Inverse
RESULT:   OK;
=====
-1L  test-StateInfo-has_trigger.py

RESULT:   FAIL;
=====
-1L  test-count_contains_only_spaces.py

RESULT:   FAIL;
=====
-1L  test-StateMachine-epsilon-closure.py
NFA:Epsilon closure (single state)
RESULT:   OK;
=====
-1L  test-parallelize-trace-origin.py
Tracing origin:Paralellization
RESULT:   OK;
=====
-1L  test-repeat-pure.py
StateMachine Operations:Repetitions Kleene closure 0 or arbitrary repetitions
RESULT:   OK;
=====
-1L  test-StateMachine-hopcroft-optimization.py
DFA:Hopcroft optimization (minimize state set)
RESULT:   OK;
=====
-1L  test-StateMachine-trace-origin-hopcroft-optimization.py
Tracing origin:Hopcroft optimization (minimize state set)
RESULT:   OK;
=====
-1L  test-StateMachine-elementary_trigger_sets-2.py
NFA:Get elementary trigger sets II
RESULT:   OK;
=====
-1L  test-setup_post_condition.py
StateMachine Operations:Append Post Condition
RESULT:   OK;
=====
-1L  test-sequentialize.py
StateMachine Operations:Sequence
RESULT:   OK;
=====
-1L  test-setup_border_conditions.py
StateMachine Operations:Append Post Condition
RESULT:   OK;
=====
