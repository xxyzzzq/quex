  BRACKET_OPEN / WS  '('
         WHITESPACE  '   '
       BRACKET_OPEN  '('
  BRACKET_OPEN / WS  '('
         WHITESPACE  ' '
       BRACKET_OPEN  '('
  ''
         IDENTIFIER  'otto'
         WHITESPACE  ' '
       BRACKET_OPEN  '{'
         WHITESPACE  ' '
             NUMBER  '1.232'
         WHITESPACE  ' '
            OP_PLUS  '+'
         WHITESPACE  ' '
         IDENTIFIER  'some_more'
         WHITESPACE  ' '
      BRACKET_CLOSE  '}'
         WHITESPACE  ' '
                 IF  'if'
         WHITESPACE  ' '
       BRACKET_OPEN  '('
               ELSE  'else'
         WHITESPACE  ' '
          VAN_CONGO  '_van_congo'
      BRACKET_CLOSE  ')'
         WHITESPACE  ' '
               ELSE  'else'
         WHITESPACE  ' '
         IDENTIFIER  'bismarck'
         WHITESPACE  ' '
                 IF  'if'
         WHITESPACE  ' '
         CONGO ELSE  'else_van_congo'
         WHITESPACE  ' '
            TYPEDEF  'typedef'
         WHITESPACE  ' '
             STRUCT  'struct'
         WHITESPACE  ' '
         IDENTIFIER  'elephant'
         WHITESPACE  ' '
                FOR  'for'
       BRACKET_OPEN  '('
         IDENTIFIER  'i'
          OP_ASSIGN  '='
             NUMBER  '0'
          SEMICOLON  ';'
         WHITESPACE  ' '
         IDENTIFIER  'i'
        OP_CMP_LESS  '<'
         IDENTIFIER  'N'
          SEMICOLON  ';'
         WHITESPACE  ' '
       OP_PLUS_PLUS  '++'
         IDENTIFIER  'i'
      BRACKET_CLOSE  ')'
  ''
## (1) code generation
## (2) compiling generated engine code and test
## (3) running the test
## (1) code generation
## (2) compiling generated engine code and test
## (3) running the test
