terminate called after throwing an instance of 'std::runtime_error'
  what():  
The provided input stream behaves strangely. The quex engine detected
that the number of characters is not proportional to the character
position increase. The buffer filler type which you are using might
be able to deal with those cases, if you define the compile option:

-DQUEX_OPTION_STRANGE_ISTREAM_IMPLEMENTATION

Note, however, that those mechanisms imply a tradeoff in terms of
computational speed. Please, consider using a 'binary' mode of your
input stream instead, or use a different implementation of the
standard input/output library (e.g. not Microsoft).

###############################################################################
## NOTE: In order to disable this message, you can do two things. Either, 
## define 'QUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED' which only disables
## this particular message, but leaves the asserts intact. Or, define the macro
## 'QUEX_OPTION_ASSERTS_DISABLED' which also disarms all internal asserts.
##-----------------------------------------------------------------------------
## You are running a lexical analyser generated by quex in 'paranoid' mode.
## This is very good, in a way that any tiny misbehavior will cause a comment
## and a program exit. However, the paranoia is a heavy load on speed perfor-
## mance!
##-----------------------------------------------------------------------------
## The lexical analyser is very low-level and the smallest error
## can have desastrous consequences. Leaving the asserts helps you to find
## subtle errors in your code--and if you find one in the lexical analyser, 
## then please, report it at
##
##          http://sourceforge.net/tracker/?group_id=168259&atid=846112
##
###############################################################################
ToMode: ONE_AND_ONLY
