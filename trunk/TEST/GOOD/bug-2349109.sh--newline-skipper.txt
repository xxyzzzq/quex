quex -i newline-skipper.qx -o Simple --token-prefix COL_ --token-policy single
newline-skipper.qx:6:warning: Token id 'COL_1' defined implicitly.
newline-skipper.qx:7:warning: Token id 'COL_2' defined implicitly.
newline-skipper.qx:8:warning: Token id 'COL_3' defined implicitly.
newline-skipper.qx:9:warning: Token id 'COL_4' defined implicitly.
newline-skipper.qx:10:warning: Token id 'COL_5' defined implicitly.
newline-skipper.qx:11:warning: Token id 'COL_6' defined implicitly.
newline-skipper.qx:12:warning: Token id 'COL_7' defined implicitly.
newline-skipper.qx:13:warning: Token id 'COL_8' defined implicitly.
newline-skipper.qx:14:warning: Token id 'COL_9' defined implicitly.
newline-skipper.qx:15:warning: Token id 'COL_10' defined implicitly.
newline-skipper.qx:16:warning: Token id 'COL_11' defined implicitly.
newline-skipper.qx:17:warning: Token id 'COL_12' defined implicitly.
newline-skipper.qx:18:warning: Token id 'COL_13' defined implicitly.
newline-skipper.qx:19:warning: Token id 'COL_14' defined implicitly.
newline-skipper.qx:20:warning: Token id 'COL_15' defined implicitly.
g++ -I/home/fschaef/prj/quex/trunk -I./ Simple*.cpp lexer.cpp -ggdb -o lexer \
		-DQUEX_OPTION_LINE_NUMBER_COUNTING \
		-DQUEX_OPTION_COLUMN_NUMBER_COUNTING \
		-DQUEX_SETTING_BUFFER_SIZE=4
###############################################################################
## NOTE: In order to disable this message, you can do two things. Either, 
## define 'QUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED' which only disables
## this particular message, but leaves the asserts intact. Or, define the macro
## 'QUEX_OPTION_ASSERTS_DISABLED' which also disarms all internal asserts.
##-----------------------------------------------------------------------------
## You are running a lexical analyser generated by quex in 'paranoid' mode.
## This is very good, in a way that any tiny misbehavior will cause a comment
## and a program exit. However, the paranoia is a heavy load on speed perfor-
## mance!
##-----------------------------------------------------------------------------
## The lexical analyser is very low-level and the smallest error
## can have desastrous consequences. Leaving the asserts helps you to find
## subtle errors in your code--and if you find one in the lexical analyser, 
## then please, report it at
##
##          http://sourceforge.net/tracker/?group_id=168259&atid=846112
##
###############################################################################
## An Assert-Abortion might be an intended element of the experiment.
1, 1: 1 '' 
2, 2: 2 '' 
3, 1: 1 '' 
4, 2: 2 '' 
5, 3: 3 '' 
6, 4: 4 '' 
7, 5: 5 '' 
8, 6: 6 '' 
9, 7: 7 '' 
10, 8: 8 '' 
11, 9: 9 '' 
12, 10: 10 '' 
13, 11: 11 '' 
14, 12: 12 '' 
15, 13: 13 '' 
16, 1: 1 '' 
17, 2: 2 '' 
18, 3: 3 '' 
23, 4: 4 '' 
28, 5: 5 '' 
29, 6: 6 '' 
30, 7: 7 '' 
35, 8: 8 '' 
45, 9: 9 '' 
98, 10: 10 '' 
107, 11: 11 '' 
111, 12: 12 '' 
114, 13: 13 '' 
115, 1: <TERMINATION> '' 
