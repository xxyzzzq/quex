error.qx:11:warning: Token id 'QUEX_TKN_A' defined implicitly.
error.qx:12:warning: Token id 'QUEX_TKN_B' defined implicitly.
error.qx:13:warning: Token id 'QUEX_TKN_C' defined implicitly.
error.qx:14:warning: Token id 'QUEX_TKN_D' defined implicitly.
error.qx:15:warning: Token id 'QUEX_TKN_E' defined implicitly.
error.qx:16:warning: Token id 'QUEX_TKN_F' defined implicitly.
warning: no initial mode defined via 'start'
warning: using mode 'X' as initial mode
(1)
#####################################################################################
## NOTE: In order to disable this message, you can do two things. Either, define
## 'QUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED' which only disables this
## particular message, but leaves the asserts intact. Or, define the macro
## 'QUEX_OPTION_ASSERTS_DISABLED' which additionally disarms all internal asserts.
##-----------------------------------------------------------------------------------
## You are running a lexical analyser generated by quex in 'paranoid' mode.
## This is very good, in a way that any tiny misbehavior will cause a comment
## and a program exit. However, the paranoia is a heavy load on speed performance!
##
## The lexical analyser is very low-level and the smallest error
## can have desastrous consequences. Leaving the asserts helps you to find subtle
## errors in your code--and if you find one in the lexical analyser, then please,
## report it at http://sourceforge.net/tracker/?group_id=168259&atid=846112
#####################################################################################
,------------------------------------------------------------------------------------
| [START]
D
E
F
<TERMINATION>
| [END] number of token = 4
`------------------------------------------------------------------------------------
(2)
#####################################################################################
## NOTE: In order to disable this message, you can do two things. Either, define
## 'QUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED' which only disables this
## particular message, but leaves the asserts intact. Or, define the macro
## 'QUEX_OPTION_ASSERTS_DISABLED' which additionally disarms all internal asserts.
##-----------------------------------------------------------------------------------
## You are running a lexical analyser generated by quex in 'paranoid' mode.
## This is very good, in a way that any tiny misbehavior will cause a comment
## and a program exit. However, the paranoia is a heavy load on speed performance!
##
## The lexical analyser is very low-level and the smallest error
## can have desastrous consequences. Leaving the asserts helps you to find subtle
## errors in your code--and if you find one in the lexical analyser, then please,
## report it at http://sourceforge.net/tracker/?group_id=168259&atid=846112
#####################################################################################
,------------------------------------------------------------------------------------
| [START]
<TERMINATION>
| [END] number of token = 1
`------------------------------------------------------------------------------------
