quex -i GOTO.qx -o Simple --token-policy single
g++ -I/home/fschaef/prj/quex/trunk -I. \
		-DQUEX_OPTION_DEBUG_MODE_TRANSITIONS -DQUEX_OPTION_LINE_NUMBER_COUNTING_DISABLED -DQUEX_OPTION_COLUMN_NUMBER_COUNTING_DISABLED  \
		../lexer-simply.cpp Simple*.cpp \
		-ggdb -o lexer
###############################################################################
## NOTE: In order to disable this message, you can do two things. Either, 
## define 'QUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED' which only disables
## this particular message, but leaves the asserts intact. Or, define the macro
## 'QUEX_OPTION_ASSERTS_DISABLED' which also disarms all internal asserts.
##-----------------------------------------------------------------------------
## You are running a lexical analyser generated by quex in 'paranoid' mode.
## This is very good, in a way that any tiny misbehavior will cause a comment
## and a program exit. However, the paranoia is a heavy load on speed perfor-
## mance!
##-----------------------------------------------------------------------------
## The lexical analyser is very low-level and the smallest error
## can have desastrous consequences. Leaving the asserts helps you to find
## subtle errors in your code--and if you find one in the lexical analyser, 
## then please, report it at
##
##          http://sourceforge.net/tracker/?group_id=168259&atid=846112
##
###############################################################################
ToMode: ONE
## An Assert-Abortion might be an intended element of the experiment.
LETTER '1' 
LETTER '1' 
LETTER '1' 
FromMode: ONE ToMode: TWO
LETTER '2' 
LETTER '2' 
FromMode: TWO ToMode: THREE
LETTER '3' 
LETTER '3' 
FromMode: THREE ToMode: FOUR
LETTER '4' 
LETTER '4' 
FromMode: FOUR ToMode: ONE
FromMode: ONE ToMode: TWO
FromMode: TWO ToMode: THREE
FromMode: THREE ToMode: FOUR
FromMode: FOUR ToMode: ONE
<TERMINATION>
