Options
-------

For the sake of simplicity only the positive options are mentioned. For each (or most)
of the options below, there exists a sibling with a ``_DISABLED`` suffix. The option without
the suffix enables something, the option with the suffix disables the 'something'.

.. cmacro:: QUEX_OPTION_ASSERTS

   Explicitly enables asserts which are enabled by default anyway. 
   More of use is the sibling ``QUEX_OPTION_ASSERTS_DISABLED``. Disabling
   asserts is key for getting reasonable performance.

.. cmacro:: QUEX_OPTION_COLUMN_NUMBER_COUNTING

   Enables/disables column number counting. Respectively, ``QUEX_OPTION_COLUMN_NUMBER_COUNTING_DISABLED`` 
   disables it.

.. cmacro:: QUEX_OPTION_DEBUG_MODE_TRANSITIONS

   Enables/disables debug messages on each mode transition.

.. cmacro:: QUEX_OPTION_DEBUG_QUEX_PATTERN_MATCHES

   Enables/disables debug messages for pattern matches.

.. cmacro:: QUEX_OPTION_DEBUG_TOKEN_SENDING

   Enables/disables debug messages for each token to be sent.

.. cmacro:: QUEX_OPTION_ENABLE_ICONV

   Enables/disables the use of the GNU IConv library for conversion. This can also be set with the command line option ``--iconv``.

.. cmacro:: QUEX_OPTION_ENABLE_ICU

   Enables/disables the use of the IBM's ICU library for conversion. This can also be
   set with the command line option ``--icu``. Note, that IConv and ICU are
   best used mutually exclusive.

.. cmacro:: QUEX_OPTION_ENABLE_PINARD_RECODE

   Enables/disables Francois Pinards Recode library. At the time of this writing the 
   converter is not yet implemented.

.. cmacro:: QUEX_OPTION_ERROR_OUTPUT_ON_MODE_CHANGE_ERROR

   Enables/disables error messages on disallows mode transitions.

.. cmacro:: QUEX_OPTION_INCLUDE_STACK_SUPPORT

   Enables/disables the feature of an intelligent include stack. 

.. cmacro:: QUEX_OPTION_INFORMATIVE_BUFFER_OVERFLOW_MESSAGE

   Enables/disables informative buffer overflow messages. If set it prints the lexeme
   on which the buffer overflow happend.

.. cmacro:: QUEX_OPTION_LINE_NUMBER_COUNTING

   Enables/disables line number counting. Line and column number counting
   are implemented very efficiently. Most probably no performance decrease
   will be measurable by deactivating this feature.

.. cmacro:: QUEX_OPTION_POST_CATEGORIZER

   Enables/disables an optional post categorizer that maps from a lexeme to a token-id.

.. cmacro:: QUEX_OPTION_RUNTIME_MODE_TRANSITION_CHECK

   Enables/disables mode transition checks during run-time.

.. cmacro:: QUEX_OPTION_STRANGE_ISTREAM_IMPLEMENTATION

   Some input streams behave rather strange. When receiving ``N`` characters
   from a stream, their stream position might increase by a number ``M`` which
   is different from ``N``. To handle those streams, set this option. 

   Alternatively, one might consider opening the stream in binary mode.

.. cmacro:: QUEX_OPTION_STRING_ACCUMULATOR

   Enables/disables an optional accumulator which can collect some longer string.

.. cmacro:: QUEX_OPTION_TOKEN_POLICY_QUEUE

   Enables/disables the token sending via a token queue. With the current version of quex (0.36.4)
   some performance increase can be achieved if the token queue is disabled.

.. cmacro:: QUEX_OPTION_TOKEN_POLICY_SINGLETON

   Enables/disables the token sending via a unique token object. 

.. cmacro:: QUEX_OPTION_TOKEN_POLICY_MINI_QUEUE

   *Not yet implemented (V. 0.36.5).*

   Enables/disables a tricky efficient token queue policy, where there can be one repeated 
   token plus a follower. This can be helpful for the implementation of indentation
   based languages, or other applications where a full fledged token queue might
   be an overshoot.


