#ifdef __QUEX_OPTION_COUNTER
void
QUEX_NAME(TEST_MODE_counter)(QUEX_TYPE_ANALYZER* me, const QUEX_TYPE_CHARACTER* LexemeBegin, const QUEX_TYPE_CHARACTER* LexemeEnd)
{
#   define self (*me)
    const QUEX_TYPE_CHARACTER* iterator    = (const QUEX_TYPE_CHARACTER*)0;
    QUEX_TYPE_CHARACTER        input       = (QUEX_TYPE_CHARACTER)0;

    __QUEX_IF_COUNT_SHIFT_VALUES();

    for(iterator=LexemeBegin; iterator < LexemeEnd; ) {
        input = *iterator;
        __quex_debug("Init State\n");
        __quex_debug_state(168);
        if( input < 0x80 ) {
            if( input < 0x3D ) {
                switch( input ) {
                    case 0x0: 
                    case 0x1: 
                    case 0x2: 
                    case 0x3: 
                    case 0x4: 
                    case 0x5: 
                    case 0x6: 
                    case 0x7: 
                    case 0x8: 
                    case 0x9: goto _175;
                    case 0xA: goto _174;
                    case 0xB: 
                    case 0xC: 
                    case 0xD: 
                    case 0xE: 
                    case 0xF: 
                    case 0x10: 
                    case 0x11: 
                    case 0x12: 
                    case 0x13: 
                    case 0x14: 
                    case 0x15: 
                    case 0x16: 
                    case 0x17: 
                    case 0x18: 
                    case 0x19: 
                    case 0x1A: 
                    case 0x1B: 
                    case 0x1C: 
                    case 0x1D: 
                    case 0x1E: 
                    case 0x1F: 
                    case 0x20: 
                    case 0x21: 
                    case 0x22: 
                    case 0x23: 
                    case 0x24: 
                    case 0x25: 
                    case 0x26: 
                    case 0x27: 
                    case 0x28: 
                    case 0x29: 
                    case 0x2A: 
                    case 0x2B: 
                    case 0x2C: 
                    case 0x2D: 
                    case 0x2E: 
                    case 0x2F: 
                    case 0x30: 
                    case 0x31: 
                    case 0x32: 
                    case 0x33: 
                    case 0x34: 
                    case 0x35: 
                    case 0x36: 
                    case 0x37: 
                    case 0x38: 
                    case 0x39: 
                    case 0x3A: 
                    case 0x3B: goto _175;
                    case 0x3C: goto _172;

                }
            } else {
                if( input == 0x3D ) {
                    goto _175;
                } else if( input == 0x3E ) {
                    goto _179;
                } else if( input == 0x3F ) {
                    goto _177;
                } else {
                    goto _175;
                }
            }
        } else {
            switch( input ) {
                case 0xC2: 
                case 0xC3: 
                case 0xC4: 
                case 0xC5: 
                case 0xC6: 
                case 0xC7: 
                case 0xC8: 
                case 0xC9: 
                case 0xCA: 
                case 0xCB: 
                case 0xCC: 
                case 0xCD: 
                case 0xCE: 
                case 0xCF: 
                case 0xD0: 
                case 0xD1: 
                case 0xD2: 
                case 0xD3: 
                case 0xD4: 
                case 0xD5: 
                case 0xD6: 
                case 0xD7: 
                case 0xD8: 
                case 0xD9: 
                case 0xDA: 
                case 0xDB: 
                case 0xDC: 
                case 0xDD: 
                case 0xDE: 
                case 0xDF: goto _180;
                case 0xE0: goto _182;
                case 0xE1: 
                case 0xE2: 
                case 0xE3: 
                case 0xE4: 
                case 0xE5: 
                case 0xE6: 
                case 0xE7: 
                case 0xE8: 
                case 0xE9: 
                case 0xEA: 
                case 0xEB: 
                case 0xEC: 
                case 0xED: 
                case 0xEE: 
                case 0xEF: goto _176;
                case 0xF0: goto _170;
                case 0xF1: goto _169;
                case 0xF2: 
                case 0xF3: goto _171;
                case 0xF4: 
                case 0xF5: 
                case 0xF6: 
                case 0xF7: goto _173;

            }
        }
        __quex_debug_drop_out(168);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_190: /* (190 from 189) (190 from 219) (190 from 210) (190 from 209) (190 from 208) (190 from 202) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(190);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _175;
        } else {

        }
        __quex_debug_drop_out(190);
        goto TERMINAL_16;

        __quex_assert_no_passage();
_202: /* (202 from 218) (202 from 201) (202 from 206) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(202);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _190;
        } else {

        }
        __quex_debug_drop_out(202);
        goto TERMINAL_16;

        __quex_assert_no_passage();
_175: /* (175 from 168) (175 from 190) (175 from 220) (175 from 180) */

        ++iterator;
        __quex_debug_state(175);
        __quex_debug_drop_out(175);
        goto TERMINAL_16;

        __quex_assert_no_passage();
_193: /* (193 from 169) (193 from 170) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(193);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _201;
        } else {

        }
        __quex_debug_drop_out(193);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_201: /* (201 from 193) (201 from 217) (201 from 198) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(201);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _202;
        } else {

        }
        __quex_debug_drop_out(201);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_180: /* (180 from 176) (180 from 182) (180 from 168) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(180);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _175;
        } else {

        }
        __quex_debug_drop_out(180);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_171: /* (171 from 168) (171 from 170) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(171);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _188;
        } else {

        }
        __quex_debug_drop_out(171);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_173: /* (173 from 194) (173 from 168) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(173);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _176;
        } else {

        }
        __quex_debug_drop_out(173);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_176: /* (176 from 168) (176 from 173) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(176);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _180;
        } else {

        }
        __quex_debug_drop_out(176);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_188: /* (188 from 171) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(188);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _189;
        } else {

        }
        __quex_debug_drop_out(188);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_189: /* (189 from 188) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(189);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _190;
        } else {

        }
        __quex_debug_drop_out(189);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_194: /* (194 from 170) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(194);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _173;
        } else {

        }
        __quex_debug_drop_out(194);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_198: /* (198 from 170) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(198);
        switch( input ) {
            case 0x80: goto _206;
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: 
            case 0xBF: goto _201;

        }
        __quex_debug_drop_out(198);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_206: /* (206 from 198) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(206);
        switch( input ) {
            case 0x80: goto _209;
            case 0x81: goto _202;
            case 0x82: goto _210;
            case 0x83: goto _208;
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: 
            case 0xBF: goto _202;

        }
        __quex_debug_drop_out(206);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_208: /* (208 from 206) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(208);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _190;
        } else {

        }
        __quex_debug_drop_out(208);
        goto TERMINAL_20;

        __quex_assert_no_passage();
_209: /* (209 from 206) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(209);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _190;
        } else {

        }
        __quex_debug_drop_out(209);
        goto TERMINAL_18;

        __quex_assert_no_passage();
_210: /* (210 from 206) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(210);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _190;
        } else {

        }
        __quex_debug_drop_out(210);
        goto TERMINAL_19;

        __quex_assert_no_passage();
_217: /* (217 from 169) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(217);
        switch( input ) {
            case 0x80: 
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: goto _201;
            case 0xBF: goto _218;

        }
        __quex_debug_drop_out(217);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_218: /* (218 from 217) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(218);
        switch( input ) {
            case 0x80: 
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: goto _202;
            case 0xBF: goto _219;

        }
        __quex_debug_drop_out(218);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_219: /* (219 from 218) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(219);
        switch( input ) {
            case 0x80: 
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: goto _190;
            case 0xBF: goto _220;

        }
        __quex_debug_drop_out(219);
        goto TERMINAL_16;

        __quex_assert_no_passage();
_220: /* (220 from 219) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(220);
        if( input >= 0xBF ) {

        } else if( input >= 0x80 ) {
            goto _175;
        } else {

        }
        __quex_debug_drop_out(220);
        goto TERMINAL_16;

        __quex_assert_no_passage();
_169: /* (169 from 168) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(169);
        switch( input ) {
            case 0x80: 
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: goto _193;
            case 0xBF: goto _217;

        }
        __quex_debug_drop_out(169);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_170: /* (170 from 168) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(170);
        switch( input ) {
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: goto _194;
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: goto _171;
            case 0x90: 
            case 0x91: goto _193;
            case 0x92: goto _198;
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: 
            case 0xBF: goto _193;

        }
        __quex_debug_drop_out(170);
        
        goto _222; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_172: /* (172 from 168) */

        ++iterator;
        __quex_debug_state(172);
        __quex_debug_drop_out(172);
        goto TERMINAL_18;

        __quex_assert_no_passage();
_174: /* (174 from 168) */

        ++iterator;
        __quex_debug_state(174);
        __quex_debug_drop_out(174);
        goto TERMINAL_17;

        __quex_assert_no_passage();
_177: /* (177 from 168) */

        ++iterator;
        __quex_debug_state(177);
        __quex_debug_drop_out(177);
        goto TERMINAL_20;

        __quex_assert_no_passage();
_179: /* (179 from 168) */

        ++iterator;
        __quex_debug_state(179);
        __quex_debug_drop_out(179);
        goto TERMINAL_19;

        __quex_assert_no_passage();
_182: /* (182 from 168) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(182);
        switch( input ) {
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: 
            case 0xBF: goto _180;

        }
        __quex_debug_drop_out(182);
        
        goto _222; /* TERMINAL_FAILURE */
TERMINAL_16:
        __quex_debug("* terminal 16:   \n");
        __QUEX_IF_COUNT_COLUMNS_ADD((size_t)1);

        continue;

TERMINAL_17:
        __quex_debug("* terminal 17:   \n");
        __QUEX_IF_COUNT_LINES_ADD((size_t)1);
        __QUEX_IF_COUNT_COLUMNS_SET((size_t)1);

        continue;

TERMINAL_18:
        __quex_debug("* terminal 18:   \n");
        
        continue;

TERMINAL_19:
        __quex_debug("* terminal 19:   \n");
        __QUEX_IF_COUNT_COLUMNS_ADD((size_t)2);

        continue;

TERMINAL_20:
        __quex_debug("* terminal 20:   \n");
        __QUEX_IF_COUNT_COLUMNS_ADD((size_t)3);

        continue;

_222: /* TERMINAL: FAILURE */
        QUEX_ERROR_EXIT("State machine failed.");
    }
    __quex_assert(iterator == LexemeEnd); /* Otherwise, lexeme violates codec character boundaries. */
#   undef self
}
#endif /* __QUEX_OPTION_COUNTER */
_____________________________________________________________________________
file:     './data/example.utf8';
char_size: 1;
byte_n:    1605;
column_n:  543;
line_n:    1;
## gcc -I. -ggdb ./data/check.c ./data/test.c  -D__QUEX_OPTION_COUNTER -DDEF_COUNTER_FUNCTION='QUEX_NAME(TEST_MODE_counter)'  -DDEF_FILE_NAME='"./data/example.utf8"'  -DDEF_CHARACTER_TYPE=uint8_t  -o test
