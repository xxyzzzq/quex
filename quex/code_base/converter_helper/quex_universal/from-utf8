/* -*- C++ -*- vim: set syntax=cpp: 
 *
 * Declaration of all converter functions towards 'utf8', 'utf16', 'utf32',
 * 'char', and 'wchar_t': 
 *
 *    __QUEX_CONVERTER_CHAR(utf8, utf8)(...)
 *    __QUEX_CONVERTER_CHAR(utf8, utf16)(...)
 *    __QUEX_CONVERTER_CHAR(utf8, utf32)(...)
 *    __QUEX_CONVERTER_CHAR(utf8, char)(...)
 *    __QUEX_CONVERTER_CHAR(utf8, wchar_t)(...)
 *
 *    __QUEX_CONVERTER_STRING(utf8, utf8)(...)     for string and buffer 
 *    __QUEX_CONVERTER_STRING(utf8, utf16)(...)    for string and buffer 
 *    __QUEX_CONVERTER_STRING(utf8, utf32)(...)    for string and buffer 
 *    __QUEX_CONVERTER_STRING(utf8, char)(...)     for string and buffer 
 *    __QUEX_CONVERTER_STRING(utf8, wchar_t)(...)  for string and buffer 
 *
 * The declarations are generated by the file:
 *
 *             ../generator/to-utf8-utf16-utf32-char-wchar_t.g
 *
 * All functions are independent of the particular analyzer. Thus, they
 * are placed in the universal namespace 'quex' (and not in the analyzer's
 * or the token's namespace).
 *
 * (C) 2012 Frank-Rene Schaefer. 
 *     ABSOLUTELY NO WARRANTY                                                */
#ifndef __QUEX_INCLUDE_GUARD__CONVERTER_HELPER__UTF8
#define __QUEX_INCLUDE_GUARD__CONVERTER_HELPER__UTF8

#if ! defined(__QUEX_OPTION_PLAIN_C)
namespace quex {
#endif

#define __QUEX_FROM      utf8
#define __QUEX_FROM_TYPE uint8_t

#include <quex/code_base/converter_helper/generator/to-utf8-utf16-utf32-char-wchar_t.g>

#if ! defined(__QUEX_OPTION_PLAIN_C)
} /* namespace quex */
#endif

#endif /* __QUEX_INCLUDE_GUARD__CONVERTER_HELPER__UTF8 */

