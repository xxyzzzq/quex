/* vim: set filetype=cpp:  -*- C++ -*-
 *
 * Declaration of all converter functions towards 'utf8', 'utf16', 'utf32',
 * 'char', and 'wchar_t': 
 *
 *    __QUEX_CONVERTER_CHAR(unicode, utf8)(...)
 *    __QUEX_CONVERTER_CHAR(unicode, utf16)(...)
 *    __QUEX_CONVERTER_CHAR(unicode, utf32)(...)
 *    __QUEX_CONVERTER_CHAR(unicode, char)(...)
 *    __QUEX_CONVERTER_CHAR(unicode, wchar_t)(...)
 *
 *    __QUEX_CONVERTER_STRING(unicode, utf8)(...)     for string and buffer 
 *    __QUEX_CONVERTER_STRING(unicode, utf16)(...)    for string and buffer 
 *    __QUEX_CONVERTER_STRING(unicode, utf32)(...)    for string and buffer 
 *    __QUEX_CONVERTER_STRING(unicode, char)(...)     for string and buffer 
 *    __QUEX_CONVERTER_STRING(unicode, wchar_t)(...)  for string and buffer 
 *
 * The declarations are generated by the file:
 *
 *             ../generator/to-utf8-utf16-utf32-char-wchar_t.g
 *
 * These functions ARE DEPENDENT on the particular analyzer. 
 * => Thus, they are placed in the analyzer's namespace.
 *
 * (C) 2012 Frank-Rene Schaefer. 
 *     ABSOLUTELY NO WARRANTY                                                */
#ifndef __QUEX_INCLUDE_GUARD__CONVERTER_HELPER__UNICODE
#define __QUEX_INCLUDE_GUARD__CONVERTER_HELPER__UNICODE
/* 2010 (C) Frank-Rene Schaefer; ABSOLUTELY NO WARRANTY */

#include <quex/code_base/compatibility/stdint.h>

QUEX_NAMESPACE_MAIN_OPEN

#define __QUEX_FROM      unicode
#define __QUEX_FROM_TYPE QUEX_TYPE_CHARACTER

#include <quex/code_base/converter_helper/generator/to-utf8-utf16-utf32-char-wchar_t.g>

QUEX_NAMESPACE_MAIN_CLOSE

#endif /* __QUEX_INCLUDE_GUARD__CONVERTER_HELPER__UNICODE */
