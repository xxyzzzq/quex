// vim:set syntax=cpp:
// (C) 2007 Frank-Rene Schaefer
//
#ifndef __INCLUDE_GUARD__QUEX_BUFFER_INPUT_STRATEGY__
#define __INCLUDE_GUARD__QUEX_BUFFER_INPUT_STRATEGY__

namespace quex {

    template <class CharacterCarrierType>  // CharacterCarrierType = uin8_t, uint16_t, uint32_t, ...
    struct fixed_size_character_stream { 
        // PURPOSE: The 'fixed_size_character_stream' provides the illusion of a continous 
        //          character stream consisting of characters coded all with the **same** 
        //          byte-width.  It hides coding/uncoding and differing character sizes.
        virtual size_t   tell_character_index() = 0;
        virtual void     seek_character_index(const size_t Index) = 0;
        virtual void     close() = 0;
        virtual void     destroy_handle() = 0;

        virtual size_t   read_characters(CharacterCarrierType* start_of_buffer, const size_t N) = 0;
        virtual long     register_begin_of_file() = 0;
    };

}

#endif // __INCLUDE_GUARD__QUEX_BUFFER_INPUT_STRATEGY__
