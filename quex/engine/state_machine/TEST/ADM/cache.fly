{
file_name: test-StateInfo-trigger-map.py;
result_list: [
  [ ; OK; 0.065249; None; ]
]
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-get_trigger_map.py;
result_list: [
  [ 1; OK; 0.073238; None; ]
  [ 2; OK; 0.076551; None; ]
  [ 3; OK; 0.071774; None; ]
  [ 4; OK; 0.077494; None; ]
  [ 5; OK; 0.066844; None; ]
  [ 6; OK; 0.068338; None; ]
  [ 7; OK; 0.078855; None; ]
  [ 8; OK; 0.078563; None; ]
]
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-epsilon-closure.py;
result_list: [
  [ ; OK; 0.049042; None; ]
]
title: Epsilon closure (single state);
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-elementary_trigger_sets.py;
result_list: [
  [ ; OK; 0.047565; None; ]
]
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-elementary_trigger_sets-2.py;
result_list: [
  [ ; OK; 0.045227; None; ]
]
title: Get elementary trigger sets II;
title_group: NFA;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-get_graphviz_string.py;
result_list: [
  [ 1; OK; 0.050770; None; ]
  [ 2; OK; 0.050873; None; ]
]
title: Get graphviz string of state machine.;
title_group: Plot;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n.py;
result_list: [
  [ Normal; OK; 0.642994; None; ]
  [ BeginOfLine; OK; 0.634453; None; ]
]
title: Characters;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n-2.py;
result_list: [
  [ Same; OK; 0.533220; None; ]
  [ Different; OK; 1.144961; None; ]
  [ TwoSet; OK; 0.444558; None; ]
  [ Grid; OK; 0.398058; None; ]
  [ Grid-BOL; OK; 0.378531; None; ]
]
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_character_n-codec.py;
result_list: [
  [ UTF8; OK; 0.348642; None; ]
  [ UTF16; OK; 0.318031; None; ]
]
title: Codec Engine;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-count_newline_n.py;
result_list: [
  [ ; OK; 1.020699; None; ]
]
title: Newlines;
title_group: Predetermined Character Count;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-detect.py;
result_list: [
  [ ; OK; 0.467921; None; ]
]
title: Detection;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-mount_pseudo.py;
result_list: [
  [ ; OK; 0.098072; None; ]
]
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-ambiguous_post_condition-philosophical_cut.py;
result_list: [
  [ ; OK; 0.174439; None; ]
]
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-clone.py;
result_list: [
  [ ; OK; 0.050111; None; ]
]
title: Cloning;
title_group: StateMachine;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-get_predecessor_db.py;
result_list: [
  [ linear; OK; 0.408855; None; ]
  [ butterfly; OK; 4.163552; None; ]
  [ long_loop; OK; 0.476338; None; ]
  [ nested_loop; OK; 0.104086; None; ]
  [ mini_loop; OK; 0.048321; None; ]
  [ fork; OK; 0.451377; None; ]
  [ fork2; OK; 0.098324; None; ]
  [ fork3; OK; 2.955630; None; ]
  [ fork4; OK; 3.281391; None; ]
  [ tree; OK; 3.320730; None; ]
  [ mini_bubble; OK; 0.042219; None; ]
  [ bubble; OK; 0.047874; None; ]
  [ bubble2; OK; 0.050830; None; ]
  [ bubble2b; OK; 0.055737; None; ]
  [ bubble3; OK; 0.052858; None; ]
  [ bubble4; OK; 0.051320; None; ]
]
title: get_predecessor_db;
title_group: StateMachine;
hwut_info_time: 1426735597L;
}
{
file_name: test-setup_post_condition.py;
result_list: [
  [ ; OK; 0.052282; None; ]
]
title: Append Post Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-setup_border_conditions.py;
result_list: [
  [ ; OK; 0.094673; None; ]
]
title: Append Post Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-inverse.py;
result_list: [
  [ ; OK; 0.052970; None; ]
]
title: Inverse;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-parallelize.py;
result_list: [
  [ ; OK; 0.062082; None; ]
]
title: Paralell;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-repeat.py;
result_list: [
  [ ; OK; 0.048533; None; ]
]
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-repeat-pure.py;
result_list: [
  [ ; OK; 0.047643; None; ]
]
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-sequentialize.py;
result_list: [
  [ ; OK; 0.047452; None; ]
]
title: Sequence;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-setup_pre_condition.py;
result_list: [
  [ ; OK; 0.051613; None; ]
]
title: Setup Pre-Condition;
title_group: StateMachine Operations;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-clone.py;
result_list: [
  [ ; OK; 0.047328; None; ]
]
title: Cloning;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
result_list: [
  [ ; OK; 0.049995; None; ]
]
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-create-DFA.py;
result_list: [
  [ ; OK; 0.051307; None; ]
]
title: NFA to DFA (subset construction);
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
result_list: [
  [ ; OK; 0.061540; None; ]
]
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-parallelize-trace-origin.py;
result_list: [
  [ ; OK; 0.059343; None; ]
]
title: Paralellization;
title_group: Tracing origin;
hwut_info_time: 1424896296L;
}
{
file_name: test-StateInfo-has_trigger.py;
result_list: [
  [ ; OK; 0.068052; None; ]
]
title: Has Trigger;
title_group: Trigger Set Check;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf16_interval_split.py;
result_list: [
  [ 1; OK; 0.045476; None; ]
  [ 2; OK; 0.049161; None; ]
  [ 3; OK; 0.047355; None; ]
  [ 4; OK; 0.048068; None; ]
  [ 5; OK; 0.048292; None; ]
]
title: Contigous Word Sequence Ranges;
title_group: UTF16 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf16_number_set_split.py;
result_list: [
  [ ; OK; 5.593925; None; ]
]
title: Larger Number Sets;
title_group: UTF16 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_number_set_split.py;
result_list: [
  [ 1; OK; 0.049165; None; ]
  [ 2; OK; 0.049016; None; ]
  [ 3; OK; 0.047667; None; ]
  [ 4; OK; 0.045120; None; ]
  [ 4b; OK; 0.049346; None; ]
  [ misc; OK; 0.049960; None; ]
]
title: Contigous Byte Sequence Ranges;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_number_set_split-by-length.py;
result_list: [
  [ 1; OK; 0.042680; None; ]
  [ 2; OK; 0.046368; None; ]
  [ Overlap1; OK; 0.044915; None; ]
  [ Overlap2; OK; 0.051269; None; ]
]
title: Intervals;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split-do.py;
result_list: [
  [ ; OK; 0.958070; None; ]
]
title: Larger Number Sets;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split-do-2.py;
result_list: [
  [ ; OK; 0.095597; None; ]
]
title: Larger Number Sets;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
{
file_name: test-utf8_state_split.py;
result_list: [
  [ 1.1; OK; 0.046523; None; ]
  [ 1.2; OK; 0.047590; None; ]
  [ 2.1; OK; 0.048218; None; ]
  [ 2.2; OK; 0.045264; None; ]
  [ 2.3; OK; 0.056362; None; ]
  [ 3.1; OK; 0.050072; None; ]
  [ 3.2; OK; 0.046542; None; ]
  [ 3.3; OK; 0.047570; None; ]
  [ 4.1; OK; 0.058329; None; ]
  [ 4.2; OK; 0.047840; None; ]
  [ 4.3; OK; 0.049425; None; ]
  [ 4.4; OK; 0.048522; None; ]
]
title: Plug Intermediate States;
title_group: UTF8 State Split;
hwut_info_time: 1424896296L;
}
