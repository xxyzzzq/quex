{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.063466; 0; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.067308; 0; ]
  [ 2; OK; 0.065066; 0; ]
  [ 3; OK; 0.064960; 0; ]
  [ 4; OK; 0.062546; 0; ]
  [ 5; OK; 0.068800; 0; ]
  [ 6; OK; 0.068772; 0; ]
  [ 7; OK; 0.067664; 0; ]
  [ 8; OK; 0.066748; 0; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.052294; 0; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.044250; 0; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.044120; 0; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.044230; 0; ]
  [ 2; OK; 0.044527; 0; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1454022471L;
result_list: [
  [ Normal; OK; 0.697304; 0; ]
  [ BeginOfLine; OK; 0.687500; 0; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ Same; OK; 0.416690; 0; ]
  [ Different; OK; 0.913981; 0; ]
  [ TwoSet; OK; 0.443482; 0; ]
  [ Grid; OK; 0.321014; 0; ]
  [ Grid-BOL; OK; 0.322161; 0; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1457134087L;
result_list: [
  [ UTF8; OK; 0.301886; 0; ]
  [ UTF16; OK; 0.267722; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.828808; 0; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.409539; 0; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.095575; 0; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.151284; 0; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.047928; 0; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1454022471L;
result_list: [
  [ linear; OK; 0.344089; 0; ]
  [ butterfly; OK; 3.255314; 0; ]
  [ long_loop; OK; 0.403201; 0; ]
  [ nested_loop; OK; 0.090481; 0; ]
  [ mini_loop; OK; 0.044397; 0; ]
  [ fork; OK; 0.363169; 0; ]
  [ fork2; OK; 0.086407; 0; ]
  [ fork3; OK; 2.685813; 0; ]
  [ fork4; OK; 2.906223; 0; ]
  [ tree; OK; 2.662691; 0; ]
  [ mini_bubble; OK; 0.045493; 0; ]
  [ bubble; OK; 0.043794; 0; ]
  [ bubble2; OK; 0.048799; 0; ]
  [ bubble2b; OK; 0.051294; 0; ]
  [ bubble3; OK; 0.049815; 0; ]
  [ bubble4; OK; 0.049757; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.052700; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.091856; 0; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048004; 0; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.062651; 0; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048861; 0; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.050730; 0; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.045584; 0; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.052104; 0; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.051267; 0; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048917; 0; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.049839; 0; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.065951; 0; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.062128; 0; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.068975; 0; ]
]
}
