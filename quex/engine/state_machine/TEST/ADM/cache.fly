{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.069304; None; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.091936; None; ]
  [ 2; OK; 0.093367; None; ]
  [ 3; OK; 0.093618; None; ]
  [ 4; OK; 0.098192; None; ]
  [ 5; OK; 0.074948; None; ]
  [ 6; OK; 0.067160; None; ]
  [ 7; OK; 0.066257; None; ]
  [ 8; OK; 0.092061; None; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.072032; None; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.050212; None; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.046772; None; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.047885; None; ]
  [ 2; OK; 0.044530; None; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1454022471L;
result_list: [
  [ Normal; OK; 0.701443; None; ]
  [ BeginOfLine; OK; 0.696762; None; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ Same; OK; 0.435045; None; ]
  [ Different; OK; 0.914804; None; ]
  [ TwoSet; OK; 0.721876; None; ]
  [ Grid; OK; 0.328255; None; ]
  [ Grid-BOL; OK; 0.529232; None; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1454193383L;
result_list: [
  [ UTF8; OK; 0.422962; 0; ]
  [ UTF16; OK; 0.424081; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 1.292259; None; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.412608; None; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.102183; None; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.199752; None; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.062047; None; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1454022471L;
result_list: [
  [ linear; OK; 0.351180; None; ]
  [ butterfly; OK; 5.169305; None; ]
  [ long_loop; OK; 0.388455; None; ]
  [ nested_loop; OK; 0.140540; None; ]
  [ mini_loop; OK; 0.043424; None; ]
  [ fork; OK; 0.589970; None; ]
  [ fork2; OK; 0.133684; None; ]
  [ fork3; OK; 3.831258; None; ]
  [ fork4; OK; 4.240410; None; ]
  [ tree; OK; 4.124397; None; ]
  [ mini_bubble; OK; 0.044117; None; ]
  [ bubble; OK; 0.059205; None; ]
  [ bubble2; OK; 0.055499; None; ]
  [ bubble2b; OK; 0.057055; None; ]
  [ bubble3; OK; 0.057011; None; ]
  [ bubble4; OK; 0.051497; None; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.071988; None; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.102012; None; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.055299; None; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.094964; None; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.049568; None; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.052739; None; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.066810; None; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.050028; None; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.048197; None; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.053656; None; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.063156; None; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.077764; None; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.074616; None; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1454022471L;
result_list: [
  [ ; OK; 0.072364; None; ]
]
}
{
title: Contigous Word Sequence Ranges;
title_group: UTF16 State Split;
file_name: test-utf16_interval_split.py;
hwut_info_time: 1454022471L;
result_list: [
  [ 1; OK; 0.045613; None; ]
  [ 2; OK; 0.048992; None; ]
  [ 3; OK; 0.055916; None; ]
  [ 4; OK; 0.049662; None; ]
  [ 5; OK; 0.056606; None; ]
]
}
{
title: Larger Number Sets;
title_group: UTF16 State Split;
file_name: test-utf16_number_set_split.py;
hwut_info_time: 1454364912L;
result_list: [
  [ ; OK; 7.492260; -1145164143; ]
]
}
{
title: Contigous Byte Sequence Ranges;
title_group: UTF8 State Split;
file_name: test-utf8_number_set_split.py;
hwut_info_time: 1454565855L;
result_list: [
  [ 1; OK; 0.062843; None; ]
  [ 2; OK; 0.053376; None; ]
  [ 3; OK; 0.047250; None; ]
  [ 4; OK; 0.045749; None; ]
  [ 4b; OK; 0.053366; None; ]
  [ misc; OK; 0.052026; None; ]
]
}
{
title: Intervals;
title_group: UTF8 State Split;
file_name: test-utf8_number_set_split-by-length.py;
hwut_info_time: 1454565975L;
result_list: [
  [ 1; OK; 0.049440; None; ]
  [ 2; OK; 0.045914; None; ]
  [ Overlap1; OK; 0.068273; None; ]
  [ Overlap2; OK; 0.056115; None; ]
]
}
{
title: Larger Number Sets;
title_group: UTF8 State Split;
file_name: test-utf8_state_split-do.py;
hwut_info_time: 1454364956L;
result_list: [
  [ ; FAIL; 0.479912; -1101852080; ]
]
}
{
title: Larger Number Sets;
title_group: UTF8 State Split;
file_name: test-utf8_state_split-do-2.py;
hwut_info_time: 1454142965L;
result_list: [
  [ ; FAIL; 0.094513; None; ]
]
}
{
title: Plug Intermediate States;
title_group: UTF8 State Split;
file_name: test-utf8_state_split.py;
hwut_info_time: 1454566836L;
result_list: [
  [ 1.1; OK; 0.046954; None; ]
  [ 1.2; OK; 0.047602; None; ]
  [ 2.1; FAIL; 0.061700; None; ]
  [ 2.2; FAIL; 0.063689; None; ]
  [ 2.3; FAIL; 0.049758; None; ]
  [ 3.1; FAIL; 0.058884; -897863897; ]
  [ 3.2; FAIL; 0.051890; None; ]
  [ 3.3; FAIL; 0.048283; None; ]
  [ 4.1; FAIL; 0.047154; None; ]
  [ 4.2; FAIL; 0.069871; None; ]
  [ 4.3; FAIL; 0.064646; None; ]
  [ 4.4; FAIL; 0.078140; None; ]
]
}
