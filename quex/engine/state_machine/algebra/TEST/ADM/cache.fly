{
file_name: test-algebraic-relations.py;
result_list: [
  [ unary; OK; 3.913192; None; ]
  [ binary; OK; 7.614240; None; ]
  [ derived_binary; OK; 8.461989; None; ]
]
title: Algebraic Relations;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement.py;
result_list: [
  [ Sequence; OK; 0.127478; None; ]
  [ Branches; OK; 0.249321; None; ]
  [ Loops; OK; 0.150108; None; ]
  [ BranchesLoops; OK; 0.344962; None; ]
  [ Misc; OK; 0.690583; None; ]
]
title: Complementary State Machines;
hwut_info_time: 1424896296L;
}
{
file_name: test-difference.py;
result_list: [
  [ Easy; OK; 0.205512; 1794453517; ]
  [ FalseCases; OK; 0.254448; -1973805762; ]
  [ GoodCases; OK; 0.229543; -1874061652; ]
  [ FalseCasesII; NO GOOD FILE; 0.303717; None; ]
  [ GoodCasesII; NO GOOD FILE; 0.999892; None; ]
  [ Misc; NO GOOD FILE; 1.015187; None; ]
  [ Pre-Post-Conditions; NO GOOD FILE; 0.143533; None; ]
]
title: Difference Operation;
hwut_info_time: 1424896296L;
}
{
file_name: test-intersection.py;
result_list: [
  [ 0; OK; 0.142136; None; ]
  [ 1; OK; 0.194510; None; ]
  [ 2; OK; 0.148035; None; ]
  [ 3; OK; 0.249344; None; ]
  [ 4; OK; 0.631017; None; ]
  [ 5; OK; 1.078311; None; ]
]
title: Intersection;
hwut_info_time: 1424896296L;
}
{
file_name: test-unique-state-indices.py;
result_list: [
  [ ; OK; 0.634828; None; ]
]
title: Unique State Indices;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_begin.py;
result_list: [
  [ 0; OK; 0.437040; None; ]
  [ 1; OK; 0.266474; None; ]
  [ 2; OK; 0.197612; None; ]
  [ 3; OK; 0.373805; None; ]
  [ 4; OK; 0.907275; None; ]
  [ 5; OK; 0.641112; None; ]
]
title: Cut patterns from P that begin with Q.;
title_group: Complement Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_in.py;
result_list: [
  [ 0; OK; 0.340465; None; ]
  [ 1; OK; 0.240220; None; ]
  [ 2; OK; 0.158542; None; ]
  [ 3; OK; 0.220076; None; ]
  [ 4; OK; 0.435248; None; ]
  [ 5; OK; 0.582295; None; ]
]
title: Cut patterns from P that contain Q.;
title_group: Complement Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-complement_end.py;
result_list: [
  [ 0; OK; 0.263984; None; ]
  [ 1; OK; 0.335049; None; ]
  [ 2; OK; 0.201072; None; ]
  [ 3; OK; 0.292523; None; ]
  [ 4; OK; 0.544680; None; ]
  [ 5; OK; 0.723674; None; ]
]
title: Cut patterns from P that end with Q.;
title_group: Complement End;
hwut_info_time: 1424896296L;
}
{
file_name: test-cut_begin.py;
result_list: [
  [ 0; OK; 0.292178; None; ]
  [ 1; OK; 0.184281; None; ]
  [ 2; OK; 0.127471; None; ]
  [ 3; OK; 0.205241; None; ]
  [ 4; OK; 0.375311; None; ]
  [ 5; OK; 0.190713; None; ]
]
title: Cut P so that it does not start with Q.;
title_group: Cut Begin;
hwut_info_time: 1424896296L;
}
{
file_name: test-cut_end.py;
result_list: [
  [ 0; OK; 0.367138; None; ]
  [ 1; OK; 0.241431; None; ]
  [ 2; OK; 0.157352; None; ]
  [ 3; OK; 0.229041; None; ]
  [ 4; OK; 0.434856; None; ]
  [ 5; OK; 0.219948; None; ]
]
title: Cut P so that it does not end with Q.;
title_group: Cut End;
hwut_info_time: 1424896296L;
}
