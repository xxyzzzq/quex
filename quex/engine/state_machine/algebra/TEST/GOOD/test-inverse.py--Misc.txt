_____________________________________________________________________
A = ((((((((p+)r)+i)+)n)+t)+e)+r)+
inverse(A): init-state = 0L
00000 ()
     == [-oo, 'o'], ['q', oo] ==> 00001
     == 'p' ==> 00002
    
00001 (A)
     == [-oo, oo] ==> 00001
    
00002 (A)
     == [-oo, 'o'], 'q', ['s', oo] ==> 00001
     == 'p' ==> 00002
     == 'r' ==> 00003
    
00003 (A)
     == [-oo, 'h'], ['j', 'o'], ['q', oo] ==> 00001
     == 'i' ==> 00004
     == 'p' ==> 00002
    
00004 (A)
     == [-oo, 'm'], 'o', ['q', oo] ==> 00001
     == 'n' ==> 00005
     == 'p' ==> 00002
    
00005 (A)
     == [-oo, 'o'], ['q', 's'], ['u', oo] ==> 00001
     == 'p' ==> 00002
     == 't' ==> 00006
    
00006 (A)
     == [-oo, 'd'], ['f', 'o'], ['q', oo] ==> 00001
     == 'e' ==> 00007
     == 'p' ==> 00002
    
00007 (A)
     == [-oo, 'o'], 'q', ['s', oo] ==> 00001
     == 'p' ==> 00002
     == 'r' ==> 00008
    
00008 
     == [-oo, 'o'], ['q', oo] ==> 00001
     == 'p' ==> 00002
    


union(A, inverse(A)):            All  = True
intersection(A, inverse(A)):     None = True
identity(A, inverse(inverse(A)): True
_____________________________________________________________________
A = (printer|rinter|inter|nter|ter|er|r)+
inverse(A): init-state = 0L
00000 ()
     == [-oo, 'd'], ['f', 'h'], ['j', 'm'], 'o', 'q', 's', ['u', oo] ==> 00001
     == 'e' ==> 00002
     == 'i' ==> 00004
     == 'n' ==> 00005
     == 'p' ==> 00007
     == 'r' ==> 00003
     == 't' ==> 00006
    
00001 (A)
     == [-oo, oo] ==> 00001
    
00002 (A)
     == [-oo, 'q'], ['s', oo] ==> 00001
     == 'r' ==> 00003
    
00003 
     == [-oo, 'd'], ['f', 'h'], ['j', 'm'], 'o', 'q', 's', ['u', oo] ==> 00001
     == 'e' ==> 00002
     == 'i' ==> 00004
     == 'n' ==> 00005
     == 'p' ==> 00007
     == 'r' ==> 00003
     == 't' ==> 00006
    
00004 (A)
     == [-oo, 'm'], ['o', oo] ==> 00001
     == 'n' ==> 00005
    
00005 (A)
     == [-oo, 's'], ['u', oo] ==> 00001
     == 't' ==> 00006
    
00006 (A)
     == [-oo, 'd'], ['f', oo] ==> 00001
     == 'e' ==> 00002
    
00007 (A)
     == [-oo, 'q'], ['s', oo] ==> 00001
     == 'r' ==> 00008
    
00008 (A)
     == [-oo, 'h'], ['j', oo] ==> 00001
     == 'i' ==> 00004
    


union(A, inverse(A)):            All  = True
intersection(A, inverse(A)):     None = True
identity(A, inverse(inverse(A)): True
_____________________________________________________________________
A = (p?r?i?n?t?e?r|rinter|inter|nter|ter|er|r)+
inverse(A): init-state = 0L
00000 ()
     == [-oo, 'd'], ['f', 'h'], ['j', 'm'], 'o', 'q', 's', ['u', oo] ==> 00001
     == 'e' ==> 00002
     == 'i' ==> 00004
     == 'n' ==> 00005
     == 'p' ==> 00007
     == 'r' ==> 00003
     == 't' ==> 00006
    
00001 (A)
     == [-oo, oo] ==> 00001
    
00002 (A)
     == [-oo, 'q'], ['s', oo] ==> 00001
     == 'r' ==> 00003
    
00003 
     == [-oo, 'd'], ['f', 'h'], ['j', 'm'], 'o', 'q', 's', ['u', oo] ==> 00001
     == 'e' ==> 00002
     == 'i' ==> 00004
     == 'n' ==> 00005
     == 'p' ==> 00007
     == 'r' ==> 00003
     == 't' ==> 00006
    
00004 (A)
     == [-oo, 'd'], ['f', 'm'], ['o', 'q'], 's', ['u', oo] ==> 00001
     == 'e' ==> 00002
     == 'n' ==> 00005
     == 'r' ==> 00003
     == 't' ==> 00006
    
00005 (A)
     == [-oo, 'd'], ['f', 'q'], 's', ['u', oo] ==> 00001
     == 'e' ==> 00002
     == 'r' ==> 00003
     == 't' ==> 00006
    
00006 (A)
     == [-oo, 'd'], ['f', 'q'], ['s', oo] ==> 00001
     == 'e' ==> 00002
     == 'r' ==> 00003
    
00007 (A)
     == [-oo, 'd'], ['f', 'h'], ['j', 'm'], ['o', 'q'], 's', ['u', oo] ==> 00001
     == 'e' ==> 00002
     == 'i' ==> 00004
     == 'n' ==> 00005
     == 'r' ==> 00003
     == 't' ==> 00006
    


union(A, inverse(A)):            All  = True
intersection(A, inverse(A)):     None = True
identity(A, inverse(inverse(A)): True
_____________________________________________________________________
A = (((((((((p+)r)+i)+)p)+r)+i)+n)+|(priprin|riprin|iprin|prin|rin|in|n)+)x?
inverse(A): init-state = 0L
00000 ()
     == [-oo, 'h'], ['j', 'm'], 'o', 'q', ['s', oo] ==> 00001
     == 'i' ==> 00002
     == 'n' ==> 00003
     == 'p' ==> 00010
     == 'r' ==> 00005
    
00001 (A)
     == [-oo, oo] ==> 00001
    
00002 (A)
     == [-oo, 'm'], 'o', ['q', oo] ==> 00001
     == 'n' ==> 00003
     == 'p' ==> 00007
    
00003 
     == [-oo, 'h'], ['j', 'm'], 'o', 'q', ['s', 'w'], ['y', oo] ==> 00001
     == 'i' ==> 00002
     == 'n' ==> 00003
     == 'p' ==> 00004
     == 'r' ==> 00005
     == 'x' ==> 00006
    
00004 (A)
     == [-oo, 'q'], ['s', oo] ==> 00001
     == 'r' ==> 00005
    
00005 (A)
     == [-oo, 'h'], ['j', oo] ==> 00001
     == 'i' ==> 00002
    
00006 
     == [-oo, oo] ==> 00001
    
00007 (A)
     == [-oo, 'q'], ['s', oo] ==> 00001
     == 'r' ==> 00008
    
00008 (A)
     == [-oo, 'h'], ['j', oo] ==> 00001
     == 'i' ==> 00009
    
00009 (A)
     == [-oo, 'm'], ['o', oo] ==> 00001
     == 'n' ==> 00003
    
00010 (A)
     == [-oo, 'o'], 'q', ['s', oo] ==> 00001
     == 'p' ==> 00011
     == 'r' ==> 00018
    
00011 (A)
     == [-oo, 'o'], 'q', ['s', oo] ==> 00001
     == 'p' ==> 00011
     == 'r' ==> 00012
    
00012 (A)
     == [-oo, 'h'], ['j', 'o'], ['q', oo] ==> 00001
     == 'i' ==> 00013
     == 'p' ==> 00011
    
00013 (A)
     == [-oo, 'o'], ['q', oo] ==> 00001
     == 'p' ==> 00014
    
00014 (A)
     == [-oo, 'o'], 'q', ['s', oo] ==> 00001
     == 'p' ==> 00011
     == 'r' ==> 00015
    
00015 (A)
     == [-oo, 'h'], ['j', 'o'], ['q', oo] ==> 00001
     == 'i' ==> 00016
     == 'p' ==> 00011
    
00016 (A)
     == [-oo, 'm'], 'o', ['q', oo] ==> 00001
     == 'n' ==> 00017
     == 'p' ==> 00014
    
00017 
     == [-oo, 'o'], ['q', 'w'], ['y', oo] ==> 00001
     == 'p' ==> 00011
     == 'x' ==> 00006
    
00018 (A)
     == [-oo, 'h'], ['j', 'o'], ['q', oo] ==> 00001
     == 'i' ==> 00019
     == 'p' ==> 00011
    
00019 (A)
     == [-oo, 'm'], 'o', ['q', oo] ==> 00001
     == 'n' ==> 00003
     == 'p' ==> 00020
    
00020 (A)
     == [-oo, 'o'], 'q', ['s', oo] ==> 00001
     == 'p' ==> 00011
     == 'r' ==> 00021
    
00021 (A)
     == [-oo, 'h'], ['j', 'o'], ['q', oo] ==> 00001
     == 'i' ==> 00022
     == 'p' ==> 00011
    
00022 (A)
     == [-oo, 'm'], 'o', ['q', oo] ==> 00001
     == 'n' ==> 00023
     == 'p' ==> 00014
    
00023 
     == [-oo, 'h'], ['j', 'm'], 'o', 'q', ['s', 'w'], ['y', oo] ==> 00001
     == 'i' ==> 00002
     == 'n' ==> 00003
     == 'p' ==> 00010
     == 'r' ==> 00005
     == 'x' ==> 00006
    


union(A, inverse(A)):            All  = True
intersection(A, inverse(A)):     None = True
identity(A, inverse(inverse(A)): True
