{
file_name: test-accumulate.py;
result_list: [
  [ linear; OK; 0.064296; None; ]
  [ butterfly; OK; 0.072983; None; ]
  [ long_loop; OK; 0.062167; -485008623; ]
  [ nested_loop; OK; 0.063939; None; ]
  [ mini_loop; OK; 0.063909; None; ]
  [ fork; OK; 0.066589; 1722906330; ]
  [ fork2; OK; 0.061458; -1093156551; ]
  [ fork3; OK; 0.064934; None; ]
  [ fork4; OK; 0.064767; -576738901; ]
  [ tree; OK; 0.063951; -1054559432; ]
]
interpreter_list: [ python; ]
title: Accumulation;
hwut_info_time: 1418544121L;
}
{
file_name: test-categorize.py;
result_list: [
  [ linear; OK; 0.061441; None; ]
  [ butterfly; OK; 0.063300; None; ]
  [ long_loop; OK; 0.066673; None; ]
  [ nested_loop; OK; 0.063460; None; ]
  [ mini_loop; OK; 0.060904; None; ]
  [ fork; OK; 0.061387; None; ]
  [ fork2; OK; 0.062043; None; ]
  [ fork3; OK; 0.063494; None; ]
  [ fork4; OK; 0.069863; None; ]
  [ tree; OK; 0.060753; 1112925996; ]
]
interpreter_list: [ python; ]
title: Categorize into Linear and Mouth States;
hwut_info_time: 1418544128L;
}
{
file_name: test-resolve.py;
result_list: [
  [ linear; OK; 0.062006; 2011771137; ]
  [ butterfly; OK; 0.065945; -968658672; ]
  [ long_loop; OK; 0.063885; 1419172857; ]
  [ nested_loop; OK; 0.061766; -400776403; ]
  [ mini_loop; OK; 0.062657; 693911666; ]
  [ fork; OK; 0.063051; 690908787; ]
  [ fork2; OK; 0.068399; -1390367972; ]
  [ fork3; OK; 0.063124; 1601351712; ]
  [ fork4; OK; 0.066604; -1022221137; ]
  [ tree; OK; 0.067579; -1968682607; ]
]
interpreter_list: [ python; ]
title: Resolve Without Dead-Lock Resolution;
hwut_info_time: 1419073955L;
}
{
file_name: test-setup_initial_springs.py;
result_list: [
  [ linear; OK; 0.065346; None; ]
  [ long_loop; OK; 0.061296; -1784420566; ]
]
interpreter_list: [ python; ]
title: Setup Initial Spring States;
hwut_info_time: 1418544138L;
}
{
file_name: test-dead_locks_fine_tuning.py;
result_list: [
  [ butterfly; NO GOOD FILE; 0.064691; None; ]
  [ long_loop; NO GOOD FILE; 0.067510; None; ]
  [ nested_loop; NO GOOD FILE; 0.066167; None; ]
  [ mini_loop; NO GOOD FILE; 0.062960; None; ]
  [ fork; NO GOOD FILE; 0.068309; None; ]
  [ fork2; NO GOOD FILE; 0.063585; None; ]
  [ fork4; NO GOOD FILE; 0.066982; None; ]
]
interpreter_list: [ python; ]
title: Fine Tuning;
title_group: Dead Locks;
hwut_info_time: 1419112338L;
}
{
file_name: test-propagate_recipe_RestoreAll.py;
result_list: [
  [ fork; FAIL; 0.064594; -1999907423; ]
  [ fork2; FAIL; 0.066614; 458544496; ]
  [ butterfly; FAIL; 0.064903; -1547198198; ]
  [ long_loop; OK; 0.062995; -80100025; ]
]
interpreter_list: [ python; ]
title: Propagate the 'RestoreAll' recipe;
title_group: Dead Locks;
hwut_info_time: 1419114272L;
}
{
file_name: test-interference3.py;
result_list: [
  [ 2-entries; OK; 0.365678; None; ]
  [ 3-entries; OK; 0.199088; None; ]
]
interpreter_list: [ python-coverage; run; -a; ]
same_f: True;
title: Homogeneous Acceptance;
title_group: Interference;
hwut_info_time: 1418505939L;
}
{
file_name: test-interference.py;
result_list: [
  [ 2-entries; OK; 0.215632; None; ]
  [ 3-entries; OK; 0.195765; None; ]
]
interpreter_list: [ python-coverage; run; -a; ]
same_f: True;
title: Homogeneous Acceptance;
title_group: Interference;
hwut_info_time: 1418501087L;
}
{
file_name: test-interference2.py;
result_list: [
  [ 2-entries; OK; 0.203767; -1313830898; ]
  [ 3-entries; OK; 0.194513; None; ]
]
interpreter_list: [ python-coverage; run; -a; ]
same_f: True;
title: Homogeneous IpOffset;
title_group: Interference;
hwut_info_time: 1418502250L;
}
{
file_name: test-interference4.py;
result_list: [
  [ 2-entries; OK; 0.206333; 1055801143; ]
  [ 3-entries; OK; 0.199741; None; ]
]
interpreter_list: [ python-coverage; run; -a; ]
same_f: True;
title: Inhomogeneous IpOffset;
title_group: Interference;
hwut_info_time: 1418504423L;
}
