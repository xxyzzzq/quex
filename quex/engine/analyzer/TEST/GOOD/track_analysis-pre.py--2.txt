init-state = 0L
00000 (8, 16), (16, 33)
     == 'a' ==> 00001
     <no epsilon>
00001 (8, 17, A, pre=6), (16, 34)
     == 'b' ==> 00002
     <no epsilon>
00002 (16, 35)
     == 'c' ==> 00003
     <no epsilon>
00003 (16, 36, A)
     <no epsilon>

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .positioner:
        .from 0: <nothing>
  .drop_out:
    if PreContext_6:  goto Pattern8;
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .positioner:
        .from 1: <nothing>
  .drop_out:
    if PreContext_6: pos -= 1;  goto Pattern8;
    pos = lexeme_start_p + 1;  goto Failure;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
     goto Pattern16;


