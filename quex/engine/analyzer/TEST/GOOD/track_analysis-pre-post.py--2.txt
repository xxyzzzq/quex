init-state = 0L
00000 (33, 83), (31, 75), (3, 6), (16, 34)
     == 'a' ==> 00001
    
00001 (3, 7, A, pre=7), (16, 35, S), (31, 76, S), (33, 84, A)
     == 'b' ==> 00002
    
00002 (16, 36), (31, 77)
     == 'c' ==> 00003
    
00003 (16, 37, A, R), (31, 78)
     == 'd' ==> 00004
    
00004 (31, 79)
     == 'e' ==> 00005
    
00005 (31, 80, A, R)
    

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .positioner:
        .from 0: <nothing>
  .drop_out:
    if PreContext_7:  goto Pattern3;
     goto Pattern33;


State 2:
  .entry:
    .positioner:
        .from 1: <nothing>
  .drop_out:
    if PreContext_7: pos -= 1;  goto Pattern3;
    pos -= 1;  goto Pattern33;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
    pos -= 2;  goto Pattern16;


State 4:
  .entry:
    .positioner:
        .from 3: <nothing>
  .drop_out:
    pos -= 3;  goto Pattern16;


State 5:
  .entry:
    .positioner:
        .from 4: <nothing>
  .drop_out:
    pos -= 4;  goto Pattern31;


