init-state = 0L
00000 (1, 22), (2, 47), (3, 70)
     == 'a' ==> 00001
    
00001 (1, 23, S), (2, 48), (3, 71)
     == 'b' ==> 00002
    
00002 (1, 24), (2, 49, S), (3, 72)
     == 'c' ==> 00003
    
00003 (1, 25, A, R, pre=1), (2, 50, A, R, pre=2), (3, 73, A, pre=3)
    

State 0:
  .entry:
    .from NONE:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .from 0:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .from 1:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 3:
  .entry:
    .from 2:
  .drop_out:
    if PreContext_1: pos -= 2;  goto Pattern1;
    else if PreContext_2: pos -= 1;  goto Pattern2;
    else if PreContext_3:  goto Pattern3;
    pos = lexeme_start_p + 1;  goto Failure;


