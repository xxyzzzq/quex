init-state = 0L
00000 
     == 'a' ==> 00001
    
00001 A(4)
     == 'a' ==> 00002
    
00002 
     == 'b' ==> 00003
     == 'c' ==> 00008
    
00003 
     == '0' ==> 00004
     == '1' ==> 00006
    
00004 A(2)
     == '0' ==> 00005
    
00005 
     == '0' ==> 00002
    
00006 A(3)
     == '1' ==> 00007
    
00007 
     == '1' ==> 00002
    
00008 
     == 'c' ==> 00009
    
00009 A(1)
    

State 0:
  .entry:
    .from NONE: 

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 1:
  .entry:
    .from 0: last_acceptance = Pattern4

.drop_out:
goto Pattern4;

State 2:
  .entry:
    .from 1: 
    .from 5: 
    .from 7: 

.drop_out:
on last_acceptance:
case 2: pos -= 2;  goto Pattern2;
case 3: pos -= 2;  goto Pattern3;
case 4: pos -= 1;  goto Pattern4;


State 3:
  .entry:
    .from 2: 

.drop_out:
on last_acceptance:
case 2: pos -= 3;  goto Pattern2;
case 3: pos -= 3;  goto Pattern3;
case 4: pos -= 2;  goto Pattern4;


State 4:
  .entry:
    .from 3: last_acceptance = Pattern2

.drop_out:
goto Pattern2;

State 5:
  .entry:
    .from 4: 

.drop_out:
pos -= 1;  goto Pattern2;

State 6:
  .entry:
    .from 3: last_acceptance = Pattern3

.drop_out:
goto Pattern3;

State 7:
  .entry:
    .from 6: 

.drop_out:
pos -= 1;  goto Pattern3;

State 8:
  .entry:
    .from 2: 

.drop_out:
on last_acceptance:
case 2: pos -= 3;  goto Pattern2;
case 3: pos -= 3;  goto Pattern3;
case 4: pos -= 2;  goto Pattern4;


State 9:
  .entry:
    .from 8: 

.drop_out:
goto Pattern1;

State 0:
        [MATCH_FAILURE]: NONE/set([0L])

State 1:
        [      4]: NONE/set([1L])

State 2:
        [      2]: NONE/set([4L])
        [      3]: NONE/set([6L])
        [      4]: NONE/set([1L])

State 3:
        [      2]: NONE/set([4L])
        [      3]: NONE/set([6L])
        [      4]: NONE/set([1L])

State 4:
        [      2]: NONE/set([4L])

State 5:
        [      2]: NONE/set([4L])

State 6:
        [      3]: NONE/set([6L])

State 7:
        [      3]: NONE/set([6L])

State 8:
        [      2]: NONE/set([4L])
        [      3]: NONE/set([6L])
        [      4]: NONE/set([1L])

State 9:
        [      1]: NONE/set([9L])

