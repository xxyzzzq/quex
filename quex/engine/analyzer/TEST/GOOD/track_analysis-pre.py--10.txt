init-state = 0L
00000() <~ (78, 206), (112, 303), (146, 400), (11, 27), (20, 45), (44, 110)
      == 'a' ==> 00001
      == 'b' ==> 00005
      <no epsilon>
00001(A, pre=9) <~ (11, 28, A, pre=9), (44, 111), (78, 208), (112, 304), (146, 401)
      == 'a' ==> 00001
      == 'd' ==> 00002
      <no epsilon>
00002() <~ (44, 114), (78, 209), (112, 307), (146, 404)
      == 'e' ==> 00003
      <no epsilon>
00003(A) <~ (44, 115, A), (78, 210), (112, 308), (146, 405)
      == 'f' ==> 00004
      <no epsilon>
00004(A, pre=144) <~ (78, 211, A, pre=76), (112, 309, A, pre=110), (146, 406, A, pre=144)
      <no epsilon>
00005(A, pre=18) <~ (20, 46, A, pre=18), (44, 112), (78, 207), (112, 305), (146, 402)
      == 'c' ==> 00006
      <no epsilon>
00006() <~ (44, 113), (78, 212), (112, 306), (146, 403)
      == 'c' ==> 00006
      == 'd' ==> 00002
      <no epsilon>

State 0:
  .entry:
    .accepter:
        last_acceptance = Failure
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .accepter:
        if      PreContext_9: last_acceptance = Pattern11
    .positioner:
        .from 0: <nothing>
        .from 1: <nothing>
  .drop_out:
    if PreContext_9:  goto Pattern11;
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .positioner:
        .from 1: <nothing>
        .from 6: <nothing>
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 11: pos -= 1;  goto Pattern11;
        case 20: pos = position[Acceptance]; goto Pattern20;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
     goto Pattern44;


State 4:
  .entry:
    .positioner:
        .from 3: <nothing>
  .drop_out:
    if PreContext_76:  goto Pattern78;
    else if PreContext_110:  goto Pattern112;
    else if PreContext_144:  goto Pattern146;
    pos -= 1;  goto Pattern44;


State 5:
  .entry:
    .accepter:
        if      PreContext_18: last_acceptance = Pattern20
    .positioner:
        .from 0: <nothing>
  .drop_out:
    if PreContext_18:  goto Pattern20;
    pos = lexeme_start_p + 1;  goto Failure;


State 6:
  .entry:
    .positioner:
        .from 5:if 'PreContext_18':  position[Acceptance] = input_p;
        .from 6: <nothing>
  .drop_out:
    if PreContext_18: pos = position[Acceptance]; goto Pattern20;
    pos = lexeme_start_p + 1;  goto Failure;


