init-state = 0L
00000 (44, 98), (29, 63), (14, 30)
     == 'a' ==> 00001
    
00001 (14, 31, S), (29, 64), (44, 99)
     == 'b' ==> 00002
    
00002 (14, 32), (29, 65, S), (44, 100)
     == 'c' ==> 00003
    
00003 (14, 33, A, R, pre=12), (29, 66, A, R, pre=27), (44, 101, A, pre=42)
    

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .positioner:
        .from 0: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .positioner:
        .from 1: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
    if PreContext_12: pos -= 2;  goto Pattern14;
    else if PreContext_27: pos -= 1;  goto Pattern29;
    else if PreContext_42:  goto Pattern44;
    pos = lexeme_start_p + 1;  goto Failure;


