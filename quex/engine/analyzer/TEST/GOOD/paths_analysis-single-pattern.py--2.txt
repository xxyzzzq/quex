init-state = 0L
00000 
     == 'a' ==> 00001
    
00001 S1
     == 'b' ==> 00002
    
00002 
     == 'c' ==> 00003
    
00003 A(1,R1)
     == 'c' ==> 00003
    

State 0:
  .entry:
    .from NONE: 

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 1:
  .entry:
    .from 0: 

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 2:
  .entry:
    .from 1: position[PostContext_1]  = input_p;

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 3:
  .entry:
    .from 2: 
    .from 3: 

.drop_out:
pos = position[PostContext_1] ; goto Pattern1;


--- Optimized States ---

State 2:
  .entry:
    .from 1: position[PostContext_0]  = input_p;

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 3:
  .entry:
    .from 2: 
    .from 3: 

.drop_out:
pos = position[PostContext_0] ; goto Pattern1;

