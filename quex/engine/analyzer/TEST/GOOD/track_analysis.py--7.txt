init-state = 0L
00000 (4, 12), (12, 34), (37, 103)
     == 'a' ==> 00001
     == 'b' ==> 00004
    
00001 (4, 13, A), (37, 105)
     == 'a' ==> 00001
     == 'd' ==> 00002
    
00002 (37, 106)
     == 'e' ==> 00003
    
00003 (37, 107, A)
    
00004 (12, 35), (37, 104)
     == 'b' ==> 00004
     == 'c' ==> 00005
    
00005 (12, 36, A), (37, 108)
     == 'd' ==> 00002
    

State 0:
  .entry:
    .from NONE:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .from 0:
    .from 1:
  .drop_out:
     goto Pattern4;


State 2:
  .entry:
    .from 1: last_acceptance = Pattern4
    .from 5: last_acceptance = Pattern12
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case 12: pos -= 1;  goto Pattern12;
        case 4: pos -= 1;  goto Pattern4;


State 3:
  .entry:
    .from 2:
  .drop_out:
     goto Pattern37;


State 4:
  .entry:
    .from 0:
    .from 4:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 5:
  .entry:
    .from 4:
  .drop_out:
     goto Pattern12;


