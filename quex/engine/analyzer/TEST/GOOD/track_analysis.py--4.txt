init-state = 0L
00000 (15, 34), (4, 8)
     == 'a' ==> 00001
     <no epsilon>
00001 (4, 9, A), (15, 35)
     == 'a' ==> 00002
     == 'c' ==> 00003
     <no epsilon>
00002 (4, 10, A), (15, 36)
     == 'c' ==> 00003
     <no epsilon>
00003 (15, 37)
     == 'd' ==> 00004
     <no epsilon>
00004 (15, 38, A)
     <no epsilon>

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .positioner:
        .from 0: <nothing>
  .drop_out:
     goto Pattern4;


State 2:
  .entry:
    .positioner:
        .from 1: <nothing>
  .drop_out:
     goto Pattern4;


State 3:
  .entry:
    .positioner:
        .from 1: <nothing>
        .from 2: <nothing>
  .drop_out:
    pos -= 1;  goto Pattern4;


State 4:
  .entry:
    .positioner:
        .from 3: <nothing>
  .drop_out:
     goto Pattern15;


