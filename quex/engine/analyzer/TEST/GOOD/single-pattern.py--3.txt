init-state = 69L
00069() <~ (21, 59)
      == 'a' ==> 00070
      == 'b' ==> 00071
      <no epsilon>
00070(S, P14) <~ (21, 61, S, P14)
      == 'a' ==> 00070
      == 'd' ==> 00073
      <no epsilon>
00073(A, P14) <~ (21, 62, A, P14)
      == 'd' ==> 00073
      <no epsilon>
00071() <~ (21, 60)
      == 'c' ==> 00072
      <no epsilon>
00072(S, P14) <~ (21, 63, S, P14)
      == 'd' ==> 00073
      <no epsilon>

State 72:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 73:
  .entry:
    .by 72:
    Positioner:
    Position[PostContext_14]  = input_p;
    .by 73:
    .by 70:
    Positioner:
    Position[PostContext_14]  = input_p;
  .drop_out:
    pos = Position[PostContext_14] ; goto Pattern21;


State 69:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 70:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 71:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


