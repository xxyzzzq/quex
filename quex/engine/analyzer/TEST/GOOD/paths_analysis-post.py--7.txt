init-state = 0L
00000 (1), (2)
     == 'a' ==> 00001
    
00001 (1), (2)
     == 'b' ==> 00002
    
00002 (1), (2, S)
     == 'c' ==> 00003
    
00003 (1, A), (2)
     == 'd' ==> 00004
    
00004 (2)
     == 'e' ==> 00005
    
00005 (2, A, R)
    

State 0:
  .entry:
    .from NONE:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .from 0:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .from 1:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 3:
  .entry:
    .from 2:
  .drop_out:
     goto Pattern1;


State 4:
  .entry:
    .from 3:
  .drop_out:
    pos -= 1;  goto Pattern1;


State 5:
  .entry:
    .from 4:
  .drop_out:
    pos -= 3;  goto Pattern2;


