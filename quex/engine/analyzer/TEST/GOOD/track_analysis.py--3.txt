init-state = 0L
00000 (1, 2), (3, 6), (11, 23)
     == 'a' ==> 00001
     == 'b' ==> 00004
    
00001 (1, 3, A), (11, 24)
     == 'c' ==> 00002
    
00002 (11, 25)
     == 'd' ==> 00003
    
00003 (11, 26, A)
    
00004 (3, 7, A), (11, 24)
     == 'c' ==> 00002
    

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .accepter:
        last_acceptance = Pattern1
    .positioner:
        .from 0: <nothing>
  .drop_out:
     goto Pattern1;


State 2:
  .entry:
    .positioner:
        .from 1: <nothing>
        .from 4: <nothing>
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case 1: pos -= 1;  goto Pattern1;
        case 3: pos -= 1;  goto Pattern3;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
     goto Pattern11;


State 4:
  .entry:
    .accepter:
        last_acceptance = Pattern3
    .positioner:
        .from 0: <nothing>
  .drop_out:
     goto Pattern3;


