init-state = 98L
00098() <~ (3, 6), (33, 74), (18, 39), (1, 2)
      == 'a' ==> 00099
      == 'b' ==> 00100
      <no epsilon>
00099(A, S) <~ (1, 3, A, S), (18, 40)
      == 'b' ==> 00103
      <no epsilon>
00103() <~ (18, 41)
      == 'c' ==> 00104
      <no epsilon>
00104(A, S, pre=16) <~ (18, 42, A, S, pre=16)
      <no epsilon>
00100(A, S) <~ (3, 7, A, S), (33, 75)
      == 'b' ==> 00101
      <no epsilon>
00101() <~ (33, 76)
      == 'c' ==> 00102
      <no epsilon>
00102(A, S, pre=31) <~ (33, 77, A, S, pre=31)
      <no epsilon>

State 98:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 99:
  .entry:
  .drop_out:
     goto Pattern1;


State 100:
  .entry:
  .drop_out:
     goto Pattern3;


State 101:
  .entry:
  .drop_out:
    pos -= 1;  goto Pattern3;


State 102:
  .entry:
  .drop_out:
    if PreContext_31:  goto Pattern33;
    pos -= 2;  goto Pattern3;


State 103:
  .entry:
  .drop_out:
    pos -= 1;  goto Pattern1;


State 104:
  .entry:
  .drop_out:
    if PreContext_16:  goto Pattern18;
    pos -= 2;  goto Pattern1;


