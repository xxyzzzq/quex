init-state = 158L
00158() <~ (47, 125), (20, 50), (11, 29)
      == 'x' ==> 00159
      <no epsilon>
00159(S, P1) <~ (11, 30, S, P1), (20, 51), (47, 126)
      == 'y' ==> 00160
      <no epsilon>
00160(S, P16) <~ (11, 31), (20, 52, S, P16), (47, 127)
      == 'a' ==> 00161
      == 'b' ==> 00162
      <no epsilon>
00161(A, P1) <~ (11, 32, A, P1), (47, 128)
      == 'a' ==> 00161
      == 'c' ==> 00163
      <no epsilon>
00163() <~ (47, 130)
      == 'd' ==> 00164
      <no epsilon>
00164() <~ (47, 131)
      == 'e' ==> 00165
      <no epsilon>
00165(A, S) <~ (47, 132, A, S)
      <no epsilon>
00162(A, P16) <~ (20, 53, A, P16), (47, 129)
      == 'c' ==> 00163
      <no epsilon>

State 160:
  .entry:
    .positioner:
        .from 159: position[PostContext_1]  = input_p;
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 161:
  .entry:
    .accepter:
        last_acceptance = Pattern11
    .positioner:
        .from 160: <nothing>
        .from 161: <nothing>
  .drop_out:
    pos = position[PostContext_1] ; goto Pattern11;


State 162:
  .entry:
    .accepter:
        last_acceptance = Pattern20
    .positioner:
        .from 160: <nothing>
  .drop_out:
    pos -= 1;  goto Pattern20;


State 163:
  .entry:
    .positioner:
        .from 161: <nothing>
        .from 162: <nothing>
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case 11: pos = position[PostContext_1] ; goto Pattern11;
        case 20: pos -= 2;  goto Pattern20;


State 164:
  .entry:
    .positioner:
        .from 163: <nothing>
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case 11: pos = position[PostContext_1] ; goto Pattern11;
        case 20: pos -= 3;  goto Pattern20;


State 165:
  .entry:
  .drop_out:
     goto Pattern47;


State 158:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 159:
  .entry:
    .positioner:
        .from 158: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


