___________________________________________________________________________
expression    = "^[a-z]+$"
state machine
init-state = 1L
00000 <~ 
      == '\n' ==> 00002
      <no epsilon>
00001 <~ 
      == ['a', 'z'] ==> 00003
      <no epsilon>
00002* <~ (5, 22, post, bol)
      <no epsilon>
00003 <~ (5, 16, S, post, bol)
      == \0 ==> 00002
      == ['a', 'z'] ==> 00003
      == '\r' ==> 00000
      <no epsilon>

begin of line =  True
___________________________________________________________________________
expression    = "^[a-z]*$"
state machine
init-state = 1L
00000 <~ 
      == '\n' ==> 00002
      <no epsilon>
00001 <~ (14, 41, S, post, bol)
      == ['a', 'z'] ==> 00001
      == \0 ==> 00002
      == '\r' ==> 00000
      <no epsilon>
00002* <~ (14, 47, post, bol)
      <no epsilon>

begin of line =  True
___________________________________________________________________________
expression    = "^[a-z]?$"
state machine
init-state = 0L
00000 <~ (22, 61, S, post, bol)
      == \0 ==> 00001
      == '\r' ==> 00002
      == ['a', 'z'] ==> 00003
      <no epsilon>
00001* <~ (22, 68, post, bol)
      <no epsilon>
00002 <~ 
      == '\n' ==> 00001
      <no epsilon>
00003 <~ (22, 62, S, post, bol)
      == \0 ==> 00001
      == '\r' ==> 00002
      <no epsilon>

begin of line =  True
___________________________________________________________________________
expression    = "^[a-z]?/[a-z]/$"
state machine
init-state = 0L
00000 <~ 
      == ['a', 'z'] ==> 00002
      <no epsilon>
00001* <~ (39, 109, post, pre=37)
      <no epsilon>
00002 <~ (33, 89, S, post)
      == \0 ==> 00001
      == '\r' ==> 00003
      <no epsilon>
00003 <~ 
      == '\n' ==> 00001
      <no epsilon>
pre-condition inverted = init-state = 0L
00000 <~ (33, 96)
      == ['a', 'z'] ==> 00001
      == \0, '\n' ==> 00002
      <no epsilon>
00001 <~ (33, 97)
      == \0, '\n' ==> 00002
      <no epsilon>
00002* <~ 
      <no epsilon>

begin of line =  False
___________________________________________________________________________
expression    = "^[a-b]/[c-z]$"
state machine
init-state = 1L
00000 <~ (47, 125, S, post)
      == ['c', 'z'] ==> 00003
      <no epsilon>
00001 <~ 
      == ['a', 'b'] ==> 00000
      <no epsilon>
00002* <~ (53, 140, post, bol)
      <no epsilon>
00003 <~ (47, 133)
      == \0 ==> 00002
      == '\r' ==> 00004
      <no epsilon>
00004 <~ 
      == '\n' ==> 00002
      <no epsilon>

begin of line =  True
