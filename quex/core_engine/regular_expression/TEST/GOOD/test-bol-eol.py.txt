___________________________________________________________________________
expression    = "^[a-z]+$"
state machine
init-state = 0L
00000() <~ 
      == ['a', 'z'] ==> 00001
      <no epsilon>
00001(S, P4) <~ 
      == '\n' ==> 00002
      == ['a', 'z'] ==> 00001
      <no epsilon>
00002(A, P4, bol) <~ 
      <no epsilon>

begin of line =  True
___________________________________________________________________________
expression    = "^[a-z]+/"
state machine
init-state = 0L
00000() <~ 
      == ['a', 'z'] ==> 00001
      <no epsilon>
00001(A, S, bol) <~ 
      == ['a', 'z'] ==> 00001
      <no epsilon>

begin of line =  True
___________________________________________________________________________
expression    = "^[a-z]*$"
state machine
init-state = 0L
00000(S, P17) <~ 
      == '\n' ==> 00001
      == ['a', 'z'] ==> 00000
      <no epsilon>
00001(A, P17, bol) <~ 
      <no epsilon>

begin of line =  True
___________________________________________________________________________
expression    = "^[a-z]*/"
state machine
init-state = 0L
00000(A, S, bol) <~ 
      == ['a', 'z'] ==> 00000
      <no epsilon>

begin of line =  True
___________________________________________________________________________
expression    = "^[a-z]?$"
state machine
init-state = 0L
00000(S, P27) <~ 
      == '\n' ==> 00001
      == ['a', 'z'] ==> 00002
      <no epsilon>
00001(A, P27, bol) <~ 
      <no epsilon>
00002(S, P27) <~ 
      == '\n' ==> 00001
      <no epsilon>

begin of line =  True
___________________________________________________________________________
expression    = "^[a-z]?/"
state machine
init-state = 0L
00000(A, S, bol) <~ 
      == ['a', 'z'] ==> 00001
      <no epsilon>
00001(A, S, bol) <~ 
      <no epsilon>

begin of line =  True
___________________________________________________________________________
expression    = "^[a-z]?/[a-z]/$"
state machine
init-state = 0L
00000() <~ 
      == ['a', 'z'] ==> 00001
      <no epsilon>
00001(S, P43) <~ 
      == '\n' ==> 00002
      <no epsilon>
00002(A, P43, pre=41) <~ 
      <no epsilon>
pre-condition inverted = init-state = 0L
00000() <~ 
      == '\n' ==> 00001
      == ['a', 'z'] ==> 00002
      <no epsilon>
00001(A) <~ 
      <no epsilon>
00002() <~ 
      == '\n' ==> 00001
      <no epsilon>

begin of line =  False
___________________________________________________________________________
expression    = "^[a-z]?/[a-z]/"
state machine
init-state = 0L
00000() <~ 
      == ['a', 'z'] ==> 00001
      <no epsilon>
00001(A, S, pre=54) <~ 
      <no epsilon>
pre-condition inverted = init-state = 0L
00000() <~ 
      == '\n' ==> 00001
      == ['a', 'z'] ==> 00002
      <no epsilon>
00001(A) <~ 
      <no epsilon>
00002() <~ 
      == '\n' ==> 00001
      <no epsilon>

begin of line =  False
