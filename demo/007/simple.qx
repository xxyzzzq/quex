// -*- C++ -*- vim: set syntax=cpp:
start = DERIVED;

token {
    PERIOD
    FISCHERS
    FISCHES
    FRITZ
    FISCH
    NOTHING
    MATH_OPERATOR_LIST
    GRABS
    SWORDFISH
    FOOLS_AROUND
    TROUTS
    SOMETHING_IMPOSSIBLE
}

mode BASE :
<inheritable: only>  
{    
    <<EOF>> {
        self.send(QUEX_TKN_TERMINATION);
        RETURN;
    }
    "."                => QUEX_TKN_PERIOD;
    ","                => QUEX_TKN_PERIOD;
    "Fischer's"        => QUEX_TKN_FISCHERS;
    [abd-fh-z][a-z]*   => QUEX_TKN_FISCHES(Lexeme);
    "Fritz"            => QUEX_TKN_FRITZ;
    [A-MO-RT-Z][a-z]*  => QUEX_TKN_FISCH(Lexeme);
    "Nothing"          => QUEX_TKN_NOTHING;

    // Test, that the skippers follow the same rule as every other pattern:
    // longer match precedes. Earlier match precedes.
    "/*-+"      => QUEX_TKN_MATH_OPERATOR_LIST;
}


mode DERIVED : BASE
<skip:       [ \n\t]>
<skip_range: "/*" "*/">
<skip_range: "//" "\n">
{
    "Nothing"          DELETION;

    "grabs"            => QUEX_TKN_GRABS;
    "Swordfish"        => QUEX_TKN_SWORDFISH;
    [abd-fh-z][a-z]*   PRIORITY-MARK;
    "hunts"            => QUEX_TKN_FOOLS_AROUND;
    "Trouts"           => QUEX_TKN_TROUTS;
    [A-MO-RT-Z][a-z]*  PRIORITY-MARK;
    "catches"          => QUEX_TKN_FOOLS_AROUND;
    "Sharks"           => QUEX_TKN_SOMETHING_IMPOSSIBLE;
}

