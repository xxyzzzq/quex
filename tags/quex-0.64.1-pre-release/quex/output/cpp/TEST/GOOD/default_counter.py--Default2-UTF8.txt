#spec 
       [\x0A\x0b\x0c\x85\X2028\X2029]      => newline 1;
       [\x0d]                                   => newline 0;
       [\t]                                     => grid    4;
       [\X0600-\X06FF]                         => space   3;
       [\U010000-\U10FFFF]                     => space   2;
    
#ifdef __QUEX_OPTION_COUNTER
void
QUEX_NAME(TEST_MODE_counter)(QUEX_TYPE_ANALYZER* me, const QUEX_TYPE_CHARACTER* LexemeBegin, const QUEX_TYPE_CHARACTER* LexemeEnd)
{
#   define self (*me)
    const QUEX_TYPE_CHARACTER* iterator    = (const QUEX_TYPE_CHARACTER*)0;
    QUEX_TYPE_CHARACTER        input       = (QUEX_TYPE_CHARACTER)0;

    __QUEX_IF_COUNT_SHIFT_VALUES();

    for(iterator=LexemeBegin; iterator < LexemeEnd; ) {
        input = *iterator;
        __quex_debug("Init State\n");
        __quex_debug_state(154);
        if( input < 0xE0 ) {
            if( input < 0x80 ) {
                if( input >= 0xE ) {
                    goto _173;
                } else if( input == 0xD ) {
                    goto _174;
                } else if( input >= 0xA ) {
                    goto _167;
                } else if( input == 0x9 ) {
                    goto _155;
                } else {
                    goto _173;
                }
            } else {
                switch( input ) {
                    case 0xC2: goto _163;
                    case 0xC3: 
                    case 0xC4: 
                    case 0xC5: 
                    case 0xC6: 
                    case 0xC7: 
                    case 0xC8: 
                    case 0xC9: 
                    case 0xCA: 
                    case 0xCB: 
                    case 0xCC: 
                    case 0xCD: 
                    case 0xCE: 
                    case 0xCF: 
                    case 0xD0: 
                    case 0xD1: 
                    case 0xD2: 
                    case 0xD3: 
                    case 0xD4: 
                    case 0xD5: 
                    case 0xD6: 
                    case 0xD7: goto _162;
                    case 0xD8: 
                    case 0xD9: 
                    case 0xDA: 
                    case 0xDB: goto _159;
                    case 0xDC: 
                    case 0xDD: 
                    case 0xDE: 
                    case 0xDF: goto _162;

                }
            }
        } else {
            switch( input ) {
                case 0xE0: goto _157;
                case 0xE1: goto _165;
                case 0xE2: goto _160;
                case 0xE3: 
                case 0xE4: 
                case 0xE5: 
                case 0xE6: 
                case 0xE7: 
                case 0xE8: 
                case 0xE9: 
                case 0xEA: 
                case 0xEB: 
                case 0xEC: 
                case 0xED: 
                case 0xEE: 
                case 0xEF: goto _165;
                case 0xF0: goto _158;
                case 0xF1: goto _168;
                case 0xF2: 
                case 0xF3: goto _156;
                case 0xF4: goto _172;
                case 0xF5: 
                case 0xF6: 
                case 0xF7: goto _161;

            }
        }
        __quex_debug_drop_out(154);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_173: /* (173 from 195) (173 from 196) (173 from 162) (173 from 191) (173 from 190) (173 from 154) (173 from 163) */

        ++iterator;
        __quex_debug_state(173);
        __quex_debug_drop_out(173);
        goto TERMINAL_13;

        __quex_assert_no_passage();
_162: /* (162 from 154) (162 from 160) (162 from 157) (162 from 165) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(162);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _173;
        } else {

        }
        __quex_debug_drop_out(162);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_190: /* (190 from 189) (190 from 204) (190 from 188) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(190);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _173;
        } else {

        }
        __quex_debug_drop_out(190);
        goto TERMINAL_13;

        __quex_assert_no_passage();
_165: /* (165 from 172) (165 from 161) (165 from 154) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(165);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _162;
        } else {

        }
        __quex_debug_drop_out(165);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_167: /* (167 from 154) (167 from 163) (167 from 196) */

        ++iterator;
        __quex_debug_state(167);
        __quex_debug_drop_out(167);
        goto TERMINAL_14;

        __quex_assert_no_passage();
_184: /* (184 from 168) (184 from 158) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(184);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _186;
        } else {

        }
        __quex_debug_drop_out(184);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_186: /* (186 from 185) (186 from 184) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(186);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _189;
        } else {

        }
        __quex_debug_drop_out(186);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_189: /* (189 from 187) (189 from 186) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(189);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _190;
        } else {

        }
        __quex_debug_drop_out(189);
        goto TERMINAL_15;

        __quex_assert_no_passage();
_161: /* (161 from 154) (161 from 199) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(161);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _165;
        } else {

        }
        __quex_debug_drop_out(161);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_175: /* (175 from 172) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(175);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _180;
        } else {

        }
        __quex_debug_drop_out(175);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_180: /* (180 from 175) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(180);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _181;
        } else {

        }
        __quex_debug_drop_out(180);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_181: /* (181 from 180) */

        ++iterator;
        __quex_debug_state(181);
        __quex_debug_drop_out(181);
        goto TERMINAL_15;

        __quex_assert_no_passage();
_185: /* (185 from 168) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(185);
        switch( input ) {
            case 0x80: 
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: goto _186;
            case 0xBF: goto _187;

        }
        __quex_debug_drop_out(185);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_187: /* (187 from 185) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(187);
        switch( input ) {
            case 0x80: 
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: goto _189;
            case 0xBF: goto _188;

        }
        __quex_debug_drop_out(187);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_188: /* (188 from 187) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(188);
        switch( input ) {
            case 0x80: 
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: goto _190;
            case 0xBF: goto _191;

        }
        __quex_debug_drop_out(188);
        goto TERMINAL_15;

        __quex_assert_no_passage();
_191: /* (191 from 188) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(191);
        if( input >= 0xBF ) {

        } else if( input >= 0x80 ) {
            goto _173;
        } else {

        }
        __quex_debug_drop_out(191);
        goto TERMINAL_13;

        __quex_assert_no_passage();
_193: /* (193 from 156) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(193);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _194;
        } else {

        }
        __quex_debug_drop_out(193);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_194: /* (194 from 193) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(194);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _195;
        } else {

        }
        __quex_debug_drop_out(194);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_195: /* (195 from 194) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(195);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _173;
        } else {

        }
        __quex_debug_drop_out(195);
        goto TERMINAL_15;

        __quex_assert_no_passage();
_196: /* (196 from 160) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(196);
        switch( input ) {
            case 0x80: 
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: goto _173;
            case 0xA8: 
            case 0xA9: goto _167;
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: 
            case 0xBF: goto _173;

        }
        __quex_debug_drop_out(196);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_197: /* (197 from 159) */

        ++iterator;
        __quex_debug_state(197);
        __quex_debug_drop_out(197);
        goto TERMINAL_12;

        __quex_assert_no_passage();
_198: /* (198 from 158) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(198);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _203;
        } else {

        }
        __quex_debug_drop_out(198);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_199: /* (199 from 158) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(199);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _161;
        } else {

        }
        __quex_debug_drop_out(199);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_203: /* (203 from 198) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(203);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _204;
        } else {

        }
        __quex_debug_drop_out(203);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_204: /* (204 from 203) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(204);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _190;
        } else {

        }
        __quex_debug_drop_out(204);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_155: /* (155 from 154) */

        ++iterator;
        __quex_debug_state(155);
        __quex_debug_drop_out(155);
        goto TERMINAL_11;

        __quex_assert_no_passage();
_156: /* (156 from 154) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(156);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _193;
        } else {

        }
        __quex_debug_drop_out(156);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_157: /* (157 from 154) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(157);
        switch( input ) {
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: 
            case 0xBF: goto _162;

        }
        __quex_debug_drop_out(157);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_158: /* (158 from 154) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(158);
        switch( input ) {
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: goto _199;
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: goto _198;
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: 
            case 0xBF: goto _184;

        }
        __quex_debug_drop_out(158);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_159: /* (159 from 154) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(159);
        if( input >= 0xC0 ) {

        } else if( input >= 0x80 ) {
            goto _197;
        } else {

        }
        __quex_debug_drop_out(159);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_160: /* (160 from 154) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(160);
        switch( input ) {
            case 0x80: goto _196;
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: 
            case 0xBF: goto _162;

        }
        __quex_debug_drop_out(160);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_163: /* (163 from 154) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(163);
        switch( input ) {
            case 0x80: 
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: goto _173;
            case 0x85: goto _167;
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: 
            case 0xBF: goto _173;

        }
        __quex_debug_drop_out(163);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_168: /* (168 from 154) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(168);
        switch( input ) {
            case 0x80: 
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: 
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: goto _184;
            case 0xBF: goto _185;

        }
        __quex_debug_drop_out(168);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_172: /* (172 from 154) */

        ++iterator;
        input = *iterator;
        __quex_debug_state(172);
        switch( input ) {
            case 0x80: 
            case 0x81: 
            case 0x82: 
            case 0x83: 
            case 0x84: 
            case 0x85: 
            case 0x86: 
            case 0x87: 
            case 0x88: 
            case 0x89: 
            case 0x8A: 
            case 0x8B: 
            case 0x8C: 
            case 0x8D: 
            case 0x8E: 
            case 0x8F: goto _175;
            case 0x90: 
            case 0x91: 
            case 0x92: 
            case 0x93: 
            case 0x94: 
            case 0x95: 
            case 0x96: 
            case 0x97: 
            case 0x98: 
            case 0x99: 
            case 0x9A: 
            case 0x9B: 
            case 0x9C: 
            case 0x9D: 
            case 0x9E: 
            case 0x9F: 
            case 0xA0: 
            case 0xA1: 
            case 0xA2: 
            case 0xA3: 
            case 0xA4: 
            case 0xA5: 
            case 0xA6: 
            case 0xA7: 
            case 0xA8: 
            case 0xA9: 
            case 0xAA: 
            case 0xAB: 
            case 0xAC: 
            case 0xAD: 
            case 0xAE: 
            case 0xAF: 
            case 0xB0: 
            case 0xB1: 
            case 0xB2: 
            case 0xB3: 
            case 0xB4: 
            case 0xB5: 
            case 0xB6: 
            case 0xB7: 
            case 0xB8: 
            case 0xB9: 
            case 0xBA: 
            case 0xBB: 
            case 0xBC: 
            case 0xBD: 
            case 0xBE: 
            case 0xBF: goto _165;

        }
        __quex_debug_drop_out(172);
        
        goto _214; /* TERMINAL_FAILURE */

        __quex_assert_no_passage();
_174: /* (174 from 154) */

        ++iterator;
        __quex_debug_state(174);
        __quex_debug_drop_out(174);
        goto TERMINAL_10;
TERMINAL_10:
        __quex_debug("* terminal 10:   \n");
        __QUEX_IF_COUNT_COLUMNS_SET((size_t)1);

        continue;

TERMINAL_11:
        __quex_debug("* terminal 11:   \n");
                __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end &= ~ ((size_t)0x3));
        __QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 4);

        continue;

TERMINAL_12:
        __quex_debug("* terminal 12:   \n");
        __QUEX_IF_COUNT_COLUMNS_ADD((size_t)3);

        continue;

TERMINAL_13:
        __quex_debug("* terminal 13:   \n");
        __QUEX_IF_COUNT_COLUMNS_ADD((size_t)1);

        continue;

TERMINAL_14:
        __quex_debug("* terminal 14:   \n");
        __QUEX_IF_COUNT_LINES_ADD((size_t)1);
        __QUEX_IF_COUNT_COLUMNS_SET((size_t)1);

        continue;

TERMINAL_15:
        __quex_debug("* terminal 15:   \n");
        __QUEX_IF_COUNT_COLUMNS_ADD((size_t)2);

        continue;

_214: /* TERMINAL: FAILURE */
        QUEX_ERROR_EXIT("State machine failed.");
    }
    __quex_assert(iterator == LexemeEnd); /* Otherwise, lexeme violates codec character boundaries. */
#   undef self
}
#endif /* __QUEX_OPTION_COUNTER */
_____________________________________________________________________________
file:     './data/example.utf8';
char_size: 1;
byte_n:    1605;
column_n:  1298;
line_n:    6;
## gcc -I. -ggdb ./data/check.c ./data/test.c  -D__QUEX_OPTION_COUNTER -DDEF_COUNTER_FUNCTION='QUEX_NAME(TEST_MODE_counter)'  -DDEF_FILE_NAME='"./data/example.utf8"'  -DDEF_CHARACTER_TYPE=uint8_t  -o test
