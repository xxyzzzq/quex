// -*- C++ -*-

define {
    // need to define whitespace, since current version 0.10.0 is not able
    // to parse ' ' in a regular expression inside a mode.
    P_WHITESPACE   [ \t\r\n]+
}

token {
   IDENTIFIER
   STRUCT
   TYPE_INT
   TYPE_DOUBLE
   SEND
   EXPECT
   SEMICOLON
   BRACKET_OPEN
   BRACKET_CLOSE
   NUMBER
}

mode ONE_AND_ONLY
{
    <<EOF>>     => quex::token::ID_TERMINATION;

    "struct"    => TKN_STRUCT;
    "int"       => TKN_TYPE_INT;
    "double"    => TKN_TYPE_DOUBLE;
    "send"      => TKN_SEND;
    "expect"    => TKN_EXPECT;
    ";"         => TKN_SEMICOLON;
    "{"         => TKN_BRACKET_OPEN;
    "}"         => TKN_BRACKET_CLOSE;
    [0-9]+      => TKN_NUMBER(atoi((char*)Lexeme));
    [_a-zA-Z]+  { self.send(TKN_IDENTIFIER, Lexeme); RETURN; }
    {P_WHITESPACE} { }
}



