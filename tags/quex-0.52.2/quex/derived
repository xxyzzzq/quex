#ifdef    __QUEX_OPTION_ON_ENTRY_HANDLER_PRESENT_DISABLED
#   undef __QUEX_OPTION_ON_ENTRY_HANDLER_PRESENT
#endif
#ifdef    __QUEX_OPTION_ON_EXIT_HANDLER_PRESENT_DISABLED
#   undef __QUEX_OPTION_ON_EXIT_HANDLER_PRESENT
#endif
#ifdef    QUEX_OPTION_ENABLE_ICONV_DISABLED
#   undef QUEX_OPTION_ENABLE_ICONV
#endif
#ifdef    QUEX_OPTION_ENABLE_ICU_DISABLED
#   undef QUEX_OPTION_ENABLE_ICU
#endif
#ifdef     __QUEX_OPTION_SUPPORT_BEGIN_OF_LINE_PRE_CONDITION_DISABLED
#   undef  __QUEX_OPTION_SUPPORT_BEGIN_OF_LINE_PRE_CONDITION
#endif
#ifdef    QUEX_OPTION_INCLUDE_STACK_DISABLED
#   undef QUEX_OPTION_INCLUDE_STACK
#endif
#ifdef QUEX_OPTION_DEBUG_QUEX_PATTERN_MATCHES_DISABLED
#   undef QUEX_OPTION_DEBUG_QUEX_PATTERN_MATCHES
#endif
#ifdef    QUEX_OPTION_DEBUG_MODE_TRANSITIONS_DISABLED
#   undef QUEX_OPTION_DEBUG_MODE_TRANSITIONS
#endif
#ifdef    QUEX_OPTION_DEBUG_TOKEN_SENDING_DISABLED
#   undef QUEX_OPTION_DEBUG_TOKEN_SENDING
#endif
#ifndef    QUEX_OPTION_AUTOMATIC_ANALYSIS_CONTINUATION_ON_MODE_CHANGE_DISABLED
#   define QUEX_OPTION_AUTOMATIC_ANALYSIS_CONTINUATION_ON_MODE_CHANGE
#endif
#ifdef    QUEX_OPTION_RUNTIME_MODE_TRANSITION_CHECK_DISABLED
#   undef QUEX_OPTION_RUNTIME_MODE_TRANSITION_CHECK
#endif
#ifdef    QUEX_OPTION_RUNTIME_MODE_TRANSITION_CHECK_DISABLED
#   undef QUEX_OPTION_POST_CATEGORIZER
#endif
#ifdef    QUEX_OPTION_COLUMN_NUMBER_COUNTING_DISABLED
#   undef QUEX_OPTION_COLUMN_NUMBER_COUNTING
#endif
#ifdef    QUEX_OPTION_LINE_NUMBER_COUNTING_DISABLED
#   undef QUEX_OPTION_LINE_NUMBER_COUNTING
#endif

/* Tokens may be 'stamped' with the line an column number automatically.
 * This happens by means of the option 
 *      
 *       QUEX_OPTION_TOKEN_STAMPING_WITH_LINE_AND_COLUMN_DISABLED
 *
 * It is active by default only for queue token policies, because after
 * a call to .receive(), the lexical analyzer maintains only the position
 * of the last token in the queue. The positions of other tokens would
 * not be accessible once they are in the queue. 
 * 
 * The token policy 'users_token' only communicates one token at a time
 * and the line and column numbers in the lexical analyzer are those
 * of the last token. Thus, in this case the tokens do not need to be 
 * stamped with the position in the file.                                */
#ifndef     QUEX_OPTION_TOKEN_STAMPING_WITH_LINE_AND_COLUMN_DISABLED
#    ifndef    QUEX_OPTION_TOKEN_STAMPING_WITH_LINE_AND_COLUMN
#       define QUEX_OPTION_TOKEN_STAMPING_WITH_LINE_AND_COLUMN
#    endif
#else
#    ifdef     QUEX_OPTION_TOKEN_STAMPING_WITH_LINE_AND_COLUMN
#        undef QUEX_OPTION_TOKEN_STAMPING_WITH_LINE_AND_COLUMN
#    endif
#endif
#ifdef  QUEX_OPTION_TOKEN_REPETITION_SUPPORT
#   define __QUEX_IF_TOKEN_REPETITION_SUPPORT(EXPRESSION)          EXPRESSION
#   define __QUEX_IF_TOKEN_REPETITION_SUPPORT_DISABLED(EXPRESSION) /* empty */
#else
#   define __QUEX_IF_TOKEN_REPETITION_SUPPORT(EXPRESSION)          /* empty */
#   define __QUEX_IF_TOKEN_REPETITION_SUPPORT_DISABLED(EXPRESSION) EXPRESSION
#endif



#if defined(QUEX_OPTION_ENABLE_ICONV) || defined(QUEX_OPTION_ENABLE_ICU)
#   ifndef    __QUEX_OPTION_CONVERTER_ENABLED
#      define __QUEX_OPTION_CONVERTER_ENABLED
#   endif
#endif
#if ! defined(QUEX_SETTING_BUFFER_FILLERS_CONVERTER_NEW)
#   if   defined (QUEX_OPTION_ENABLE_ICONV)
#        define  QUEX_SETTING_BUFFER_FILLERS_CONVERTER_NEW  QUEX_NAME(Converter_IConv_new)
#   elif defined (QUEX_OPTION_ENABLE_ICU)
#        define  QUEX_SETTING_BUFFER_FILLERS_CONVERTER_NEW  QUEX_NAME(Converter_ICU_new)
#   else
#        define  QUEX_SETTING_BUFFER_FILLERS_CONVERTER_NEW  QUEX_NAME(__Converter_EMPTY_new)
#   endif
#endif


#if    defined(QUEX_OPTION_LINE_NUMBER_COUNTING)          \
    || defined(QUEX_OPTION_COLUMN_NUMBER_COUNTING)        \
    || defined(__QUEX_OPTION_INDENTATION_TRIGGER_SUPPORT)       
#     define  __QUEX_OPTION_COUNTER
#else
#     if defined(__QUEX_OPTION_COUNTER)  
#        undef   __QUEX_OPTION_COUNTER
#     endif
#endif

#if defined (QUEX_OPTION_ASSERTS) && ! defined(__QUEX_OPTION_PLAIN_C)
#    define QUEX_TYPE_CHARACTER_POSITION     QUEX_NAME(MemoryPositionMimiker)
#else
#    define QUEX_TYPE_CHARACTER_POSITION     QUEX_TYPE_CHARACTER*
#endif

#if defined(QUEX_OPTION_LINE_NUMBER_COUNTING)   
#   define     __QUEX_IF_COUNT_LINES(EXPRESSION)      EXPRESSION
#   define     __QUEX_IF_COUNT_LINES_ADD(X)           ((me->counter._line_number_at_end) += (X))
#else
#   define     __QUEX_IF_COUNT_LINES(EXPRESSION)      /* empty */
#   define     __QUEX_IF_COUNT_LINES_ADD(X)           /* empty */
#endif
#if defined(QUEX_OPTION_LINE_NUMBER_COUNTING)   
#   define     __QUEX_IF_COUNT_COLUMNS(EXPRESSION)    EXPRESSION
#   define     __QUEX_IF_COUNT_COLUMNS_SET(X)         ((me->counter._column_number_at_end) = (X))
#   define     __QUEX_IF_COUNT_COLUMNS_ADD(X)         ((me->counter._column_number_at_end) += (X))
#else
#   define     __QUEX_IF_COUNT_COLUMNS(EXPRESSION)    /* empty */
#   define     __QUEX_IF_COUNT_COLUMNS_SET(X)         /* empty */
#   define     __QUEX_IF_COUNT_COLUMNS_ADD(X)         /* empty */
#endif
#if defined(__QUEX_OPTION_INDENTATION_TRIGGER_SUPPORT)
#   define     __QUEX_IF_COUNT_INDENTATION(EXPRESSION) EXPRESSION
#else
#   define     __QUEX_IF_COUNT_INDENTATION(EXPRESSION) /* empty */
#endif

/* Decide about computed gotos */
#if defined(QUEX_OPTION_ALLOW_COMPUTED_GOTOS)
#   if    defined(__GNUC__) \
       && ((__GNUC__ > 2) || (__GNUC__ == 2 && __GNUC_MINOR__ >= 3))
#       if ! defined(__QUEX_OPTION_USE_COMPUTED_GOTOS)
#           define __QUEX_OPTION_USE_COMPUTED_GOTOS
#       endif
#   endif
#endif

/* Special Case MinGW: At the time of this writing (2009y09m23d) it does 
 * not support 'wchart_t'.                                                */
#if      (defined (__GLIBCPP__) || defined(__GLIBCXX__)) \
    && ! defined  (_GLIBCXX_USE_WCHAR_T)
#   define  __QUEX_OPTION_WCHAR_T_DISABLED
#endif
#ifndef     __QUEX_OPTION_WCHAR_T_DISABLED
#   define  __QUEX_OPTION_WCHAR_T
#endif

 
