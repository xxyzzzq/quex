static void
TEST_MODE_character_counter(QUEX_TYPE_ANALYZER* me, const QUEX_TYPE_CHARACTER* LexemeBegin, const QUEX_TYPE_CHARACTER* LexemeEnd)
{
#   define self (*me)
    const QUEX_TYPE_CHARACTER* iterator = (void*)0;

    for(iterator=LexemeBegin; iterator < LexemeEnd; ++iterator) {
        if( (*iterator) >= 0x80 ) {
            QUEX_ERROR_EXIT("Unexpected character for codec 'cp737'.\n"
                            "May be, codec transformation file from unicode contains errors.");
        } else if( (*iterator) >= 0xB ) {
            self.counter._column_number_at_end += 1;

        } else if( (*iterator) == 0xA ) {
            self.counter._line_number_at_end   += 1;
            self.counter._column_number_at_end = 1;

        } else if( (*iterator) == 0x9 ) {
            self.counter._column_number_at_end &= ~ ((size_t)0x3);
            self.counter._column_number_at_end += 4;
        } else {
            self.counter._column_number_at_end += 1;

        }
    }
    __quex_assert(iterator == End); /* Otherwise, lexeme violates codec character boundaries. */
#   undef self
}

