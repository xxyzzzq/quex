---------------------------
Original = otto_mueller
Cutter   = mueller

result =  init-state = 0L
00000 ()
     == 'o' ==> 00001
    
00001 ()
     == 't' ==> 00002
    
00002 ()
     == 't' ==> 00003
    
00003 ()
     == 'o' ==> 00004
    
00004 ()
     == '_' ==> 00005
    
00005 (A)
    


Original = mueller
Cutter   = otto_mueller

result =  init-state = 0L
00000 ()
     == 'm' ==> 00001
    
00001 ()
     == 'u' ==> 00002
    
00002 ()
     == 'e' ==> 00003
    
00003 ()
     == 'l' ==> 00004
    
00004 ()
     == 'l' ==> 00005
    
00005 ()
     == 'e' ==> 00006
    
00006 ()
     == 'r' ==> 00007
    
00007 (A)
    

---------------------------
Original = otto
Cutter   = otto

result =  init-state = 0L
00000 ()
    


Original = otto
Cutter   = otto

result =  init-state = 0L
00000 ()
    

---------------------------
Original = otto|fritz
Cutter   = otto

result =  init-state = 0L
00000 ()
     == 'f' ==> 00001
    
00001 ()
     == 'r' ==> 00002
    
00002 ()
     == 'i' ==> 00003
    
00003 ()
     == 't' ==> 00004
    
00004 ()
     == 'z' ==> 00005
    
00005 (A)
    


Original = otto
Cutter   = otto|fritz

result =  init-state = 0L
00000 ()
    

---------------------------
Original = [01]{1,3}
Cutter   = 0

result =  init-state = 0L
00000 ()
     == ['0', '1'] ==> 00001
    
00001 (A)
     == ['0', '1'] ==> 00002
    
00002 (A)
     == '1' ==> 00003
    
00003 (A)
    


Original = 0
Cutter   = [01]{1,3}

result =  init-state = 0L
00000 ()
    

---------------------------
Original = [01]{1,3}
Cutter   = 0+

result =  init-state = 0L
00000 ()
     == '0' ==> 00001
     == '1' ==> 00005
    
00001 ()
     == '0' ==> 00002
     == '1' ==> 00004
    
00002 ()
     == '1' ==> 00003
    
00003 (A)
    
00004 (A)
     == '1' ==> 00003
    
00005 (A)
     == '0' ==> 00002
     == '1' ==> 00004
    


Original = 0+
Cutter   = [01]{1,3}

result =  init-state = 0L
00000 ()
     == '0' ==> 00001
    
00001 (A)
     == '0' ==> 00001
    

---------------------------
Original = [01]+
Cutter   = 0

result =  init-state = 0L
00000 ()
     == ['0', '1'] ==> 00001
    
00001 (A)
     == ['0', '1'] ==> 00001
    


Original = 0
Cutter   = [01]+

result =  init-state = 0L
00000 ()
    

---------------------------
Original = [01]+
Cutter   = 0+

result =  init-state = 0L
00000 ()
     == '0' ==> 00000
     == '1' ==> 00001
    
00001 (A)
     == '0' ==> 00000
     == '1' ==> 00001
    


Original = 0+
Cutter   = [01]+

result =  init-state = 0L
00000 ()
    

---------------------------
Original = 1[01]*
Cutter   = 10

result =  init-state = 0L
00000 ()
     == '1' ==> 00001
    
00001 (A)
     == ['0', '1'] ==> 00001
    


Original = 10
Cutter   = 1[01]*

result =  init-state = 0L
00000 ()
    

---------------------------
Original = 1[01]*
Cutter   = 10+

result =  init-state = 0L
00000 ()
     == '1' ==> 00001
    
00001 (A)
     == ['0', '1'] ==> 00001
    


Original = 10+
Cutter   = 1[01]*

result =  init-state = 0L
00000 ()
    

---------------------------
Original = [0-9]{2,}
Cutter   = 01

result =  init-state = 0L
00000 ()
     == ['0', '9'] ==> 00001
    
00001 (A)
     == ['0', '9'] ==> 00001
    


Original = 01
Cutter   = [0-9]{2,}

result =  init-state = 0L
00000 ()
    

---------------------------
Original = 123
Cutter   = 123(4?)

result =  init-state = 0L
00000 ()
    


Original = 123(4?)
Cutter   = 123

result =  init-state = 0L
00000 ()
     == '1' ==> 00001
    
00001 ()
     == '2' ==> 00002
    
00002 ()
     == '3' ==> 00003
    
00003 ()
     == '4' ==> 00004
    
00004 (A)
    

---------------------------
Original = 12
Cutter   = 1(2?)

result =  init-state = 0L
00000 ()
    


Original = 1(2?)
Cutter   = 12

result =  init-state = 0L
00000 ()
     == '1' ==> 00001
    
00001 (A)
    

---------------------------
Original = 1
Cutter   = 1(2?)

result =  init-state = 0L
00000 ()
    


Original = 1(2?)
Cutter   = 1

result =  init-state = 0L
00000 ()
     == '1' ==> 00001
    
00001 ()
     == '2' ==> 00002
    
00002 (A)
    

---------------------------
Original = "123"|"ABC"
Cutter   = "123"

result =  init-state = 0L
00000 ()
     == 'A' ==> 00001
    
00001 ()
     == 'B' ==> 00002
    
00002 ()
     == 'C' ==> 00003
    
00003 (A)
    


Original = "123"
Cutter   = "123"|"ABC"

result =  init-state = 0L
00000 ()
    

---------------------------
Original = \n
Cutter   = (\r\n)|\n

result =  init-state = 0L
00000 ()
    


Original = (\r\n)|\n
Cutter   = \n

result =  init-state = 0L
00000 ()
     == '\r' ==> 00001
    
00001 (A)
    

