###############################################################################
## NOTE: In order to disable this message, you can do two things. Either, 
## define 'QUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED' which only disables
## this particular message, but leaves the asserts intact. Or, define the macro
## 'QUEX_OPTION_ASSERTS_DISABLED' which also disarms all internal asserts.
##-----------------------------------------------------------------------------
## You are running a lexical analyser generated by quex in 'paranoid' mode.
## This is very good, in a way that any tiny misbehavior will cause a comment
## and a program exit. However, the paranoia is a heavy load on speed perfor-
## mance!
##-----------------------------------------------------------------------------
## The lexical analyser is very low-level and the smallest error
## can have desastrous consequences. Leaving the asserts helps you to find
## subtle errors in your code--and if you find one in the lexical analyser, 
## then please, report it at
##
##          http://sourceforge.net/tracker/?group_id=168259&atid=846112
##
###############################################################################
ToMode: ONE
| [START]
Exit:  ONE
FromMode: ONE ToMode: TWO
Enter: TWO
TOKEN: GOSUB_TO_MODE 'sub2' 
Exit:  TWO
FromMode: TWO ToMode: THREE
Enter: THREE
TOKEN: GOSUB_TO_MODE 'sub3' 
Exit:  THREE
FromMode: THREE ToMode: ONE
Enter: ONE
TOKEN: GOSUB_TO_MODE 'sub1' 
Exit:  ONE
FromMode: ONE ToMode: THREE
Enter: THREE
TOKEN: RETURN_TO_MODE 'return' 
Exit:  THREE
FromMode: THREE ToMode: TWO
Enter: TWO
TOKEN: RETURN_TO_MODE 'return' 
Exit:  TWO
FromMode: TWO ToMode: ONE
Enter: ONE
TOKEN: RETURN_TO_MODE 'return' 
transition-x.exe: /home/fschaef/prj/quex/trunk/quex/code_base/analyzer/member/mode-handling.i:75: void quex::EHLexer_pop_mode(quex::EHLexer*): Assertion `me->_mode_stack.end != me->_mode_stack.begin' failed.
