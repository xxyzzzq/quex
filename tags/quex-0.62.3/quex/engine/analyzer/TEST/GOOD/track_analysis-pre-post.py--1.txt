init-state = 0L
00000 (10, 22), (24, 53), (37, 82)
     == 'a' ==> 00001
    
00001 (10, 23, S), (24, 54), (37, 83)
     == 'b' ==> 00002
    
00002 (10, 24), (24, 55, S), (37, 84)
     == 'c' ==> 00003
    
00003 (10, 25, A, R, pre=13), (24, 56, A, R, pre=27), (37, 85, A, pre=40)
    

State 0:
  .entry:
    .from NONE:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .from 0:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .from 1:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 3:
  .entry:
    .from 2:
  .drop_out:
    if PreContext_13: pos -= 2;  goto Pattern10;
    else if PreContext_27: pos -= 1;  goto Pattern24;
    else if PreContext_40:  goto Pattern37;
    pos = lexeme_start_p + 1;  goto Failure;


