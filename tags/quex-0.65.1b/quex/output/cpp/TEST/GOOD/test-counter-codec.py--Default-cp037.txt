#ifdef __QUEX_OPTION_COUNTER
void
QUEX_NAME(TEST_MODE_counter)(QUEX_TYPE_ANALYZER* me, QUEX_TYPE_CHARACTER* LexemeBegin, QUEX_TYPE_CHARACTER* LexemeEnd)
{
#   define self (*me)
    QUEX_TYPE_CHARACTER            input                          = (QUEX_TYPE_CHARACTER)(0x00);
    QUEX_TYPE_CHARACTER_POSITION   reference_p                    = (QUEX_TYPE_CHARACTER_POSITION)0x0;
    (void)me;
    __QUEX_IF_COUNT_SHIFT_VALUES();
    /* Allow LexemeBegin == LexemeEnd (e.g. END_OF_STREAM)
     * => Caller does not need to check
     * BUT, if so quit immediately after 'shift values'. */
    __quex_assert(LexemeBegin <= LexemeEnd);
    if(LexemeBegin == LexemeEnd) return;
    me->buffer._input_p = LexemeBegin;
 /* (4 from NONE) */
__QUEX_IF_COUNT_COLUMNS(reference_p = me->buffer._input_p);

_10:
    input = *(me->buffer._input_p);



    __quex_debug("Init State\n");
    __quex_debug_state(4);
    if( input < 0x25 ) {
        switch( input ) {
            case 0x0: 
            case 0x1: 
            case 0x2: 
            case 0x3: 
            case 0x4: goto _5;
            case 0x5: goto _6;
            case 0x6: 
            case 0x7: 
            case 0x8: 
            case 0x9: 
            case 0xA: 
            case 0xB: 
            case 0xC: 
            case 0xD: 
            case 0xE: 
            case 0xF: 
            case 0x10: 
            case 0x11: 
            case 0x12: 
            case 0x13: 
            case 0x14: 
            case 0x15: 
            case 0x16: 
            case 0x17: 
            case 0x18: 
            case 0x19: 
            case 0x1A: 
            case 0x1B: 
            case 0x1C: 
            case 0x1D: 
            case 0x1E: 
            case 0x1F: 
            case 0x20: 
            case 0x21: 
            case 0x22: 
            case 0x23: 
            case 0x24: goto _5;

        }
    } else {
        if( input == 0x25 ) {
            goto _7;
        
} else if( input < 0x100 ) {
            goto _5;
        } else {

        
}
    
}

    __quex_debug_drop_out(4);
    __quex_debug("Character counting terminated.\n");
    goto _2;


    __quex_assert_no_passage();
_4: /* (4 from 9) */
    goto _10;



    __quex_assert_no_passage();
_5: /* (5 from 4) */
    ++(me->buffer._input_p);
    input = *(me->buffer._input_p);
    goto _12;

_12:

    __quex_debug_state(5);
    __quex_debug_drop_out(5);
goto _14;

    __quex_assert_no_passage();
_6: /* (6 from 4) */
    ++(me->buffer._input_p);
    input = *(me->buffer._input_p);
    goto _15;

_15:

    __quex_debug_state(6);
    __quex_debug_drop_out(6);
goto _17;

    __quex_assert_no_passage();
_7: /* (7 from 4) */
    ++(me->buffer._input_p);
    input = *(me->buffer._input_p);
    goto _18;

_18:

    __quex_debug_state(7);
    __quex_debug_drop_out(7);
goto _20;
    /* (*) Terminal states _______________________________________________________
     *
     * States that implement actions of the 'winner patterns.                     */
_14: __quex_debug("* TERMINAL [0000, 0004] [0006, 0024] [0026, 00FF] \n");
if( me->buffer._input_p == LexemeEnd ) goto _2;;
goto _4;
_17: __quex_debug("* TERMINAL [0005] \n");
__QUEX_IF_COUNT_COLUMNS_ADD((size_t)((me->buffer._input_p - reference_p)));
__QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end &= ~ ((size_t)0x3));
__QUEX_IF_COUNT_COLUMNS(self.counter._column_number_at_end += 4);
__QUEX_IF_COUNT_COLUMNS(reference_p = me->buffer._input_p + 1);
if( me->buffer._input_p == LexemeEnd ) goto _1;;
goto _4;
_20: __quex_debug("* TERMINAL [0025] \n");
__QUEX_IF_COUNT_LINES_ADD((size_t)1);
__QUEX_IF_COUNT_COLUMNS_SET((size_t)1);
__QUEX_IF_COUNT_COLUMNS(reference_p = me->buffer._input_p + 1);
if( me->buffer._input_p == LexemeEnd ) goto _1;;
goto _4;
_2: __quex_debug("* TERMINAL -- Exit --\n");
__QUEX_IF_COUNT_COLUMNS_ADD((size_t)((me->buffer._input_p - reference_p)));
goto _1;
_1:
    __quex_assert(me->buffer._input_p == LexemeEnd); /* Otherwise, lexeme violates codec character boundaries. */
   return;
#  undef self
}
#endif /* __QUEX_OPTION_COUNTER */

_____________________________________________________________________________
file:     './data/example.cp037';
char_size: 1;
byte_n:    256;
column_n:  218;
line_n:    1;
## gcc -Wall -Werror -I. -ggdb ./data/check.c ./data/test.c  -D__QUEX_OPTION_COUNTER -DDEF_COUNTER_FUNCTION='QUEX_NAME(TEST_MODE_counter)'  -DDEF_FILE_NAME='"./data/example.cp037"'  -DDEF_CHARACTER_TYPE=uint8_t  -o test
