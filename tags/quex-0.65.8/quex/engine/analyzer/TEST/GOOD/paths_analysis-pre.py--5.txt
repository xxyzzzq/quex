init-state = 0L
00000 
     == 'a' ==> 00001
    
00001 A(1), A(2,pre=1)
     == 'b' ==> 00002
    
00002 A(3,pre=2)
     == 'c' ==> 00003
    
00003 A(4,pre=3)
    

State 0:
  .entry:
    .from BEFORE_ENTRY: 

.drop_out:
pos = lexeme_start_p + 1;  goto Failure;

State 1:
  .entry:
    .from 0: 

.drop_out:
goto Pattern1;

State 2:
  .entry:
    .from 1: 

.drop_out:
if PreContext_2: goto Pattern3;
pos -= 1;  goto Pattern1;

State 3:
  .entry:
    .from 2: 

.drop_out:
if PreContext_3: goto Pattern4;
else if PreContext_2: pos -= 1;  goto Pattern3;
pos -= 2;  goto Pattern1;

State 0:
        [MATCH_FAILURE]: NONE/set([0L])

State 1:
        [      1]: NONE/set([1L])

State 2:
        [      1]: NONE/set([1L])
        [      3]: 2/set([2L])

State 3:
        [      1]: NONE/set([1L])
        [      3]: 2/set([2L])
        [      4]: 3/set([3L])

