init-state = 0L
00000 (8, 17), (17, 39), (25, 58)
     == 'a' ==> 00001
     == 'b' ==> 00004
    
00001 (8, 18), (17, 40, S), (25, 59)
     == 'b' ==> 00002
    
00002 (8, 19, S), (17, 41), (25, 60)
     == 'c' ==> 00003
    
00003 (8, 20, A, R), (17, 42, A, R), (25, 61, A)
    
00004 (25, 59)
     == 'b' ==> 00005
    
00005 (25, 60)
     == 'c' ==> 00006
    
00006 (25, 61, A)
    

State 0:
  .entry:
    .from NONE:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .from 0:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .from 1:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 3:
  .entry:
    .from 2:
  .drop_out:
    pos -= 1;  goto Pattern8;


State 4:
  .entry:
    .from 0:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 5:
  .entry:
    .from 4:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 6:
  .entry:
    .from 5:
  .drop_out:
     goto Pattern25;


