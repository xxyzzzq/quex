init-state = 0L
00000 (7, 15), (16, 36), (25, 58)
     == 'a' ==> 00001
     == 'b' ==> 00004
    
00001 (7, 16), (16, 37), (25, 59, S)
     == 'b' ==> 00002
    
00002 (7, 17), (16, 38, S), (25, 60)
     == 'c' ==> 00003
    
00003 (7, 18, A), (16, 39, A, R), (25, 61, A, R)
    
00004 (7, 16)
     == 'b' ==> 00005
    
00005 (7, 17)
     == 'c' ==> 00006
    
00006 (7, 18, A)
    

State 0:
  .entry:
    .from NONE:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .from 0:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .from 1:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 3:
  .entry:
    .from 2:
  .drop_out:
     goto Pattern7;


State 4:
  .entry:
    .from 0:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 5:
  .entry:
    .from 4:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 6:
  .entry:
    .from 5:
  .drop_out:
     goto Pattern7;


