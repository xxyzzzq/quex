Buffer:
   -- contains the data subject to lexical analysis
      + _memory

   -- for the analyser contains:
      + _read_p:         pointer to the currently analysed character
      + _lexeme_start_p:  pointer to the first character in current lexeme
      + ...

   -- for the reload process
      + filler: a pointer to a structure responsible for filling the buffer
                and navigation.
               
               
BufferFiller: 

   A set of function pointers used to navigate in the input stream
   and to fill a given buffer with data. Navigation is based on character
   indices (not byte positions, some codings have dynamic character widths).

   Derived Classes:
     + BufferFiller_Plain
       Loading plain data from a file. Character width is constant. This
       is practical for ASCII, UCS-2, UCS4, and similar codings.

     + BufferFiller_Converter
       Base class for all fillers that convert the input from an external format
       to an internal one.

       + BufferFiller_Converter_IConv
         BufferFiller doing the conversion with GNU's iconv library.

       + BufferFiller_Converter_ICU
         BufferFiller based on IBM's ICU library.

Converter:

   Base class for all converters. A structure consisting of three function pointers:
  
   + open(...):    initialize the conversion and maybe allocates a conversion handle.
   + convert(...): converts data and writes it from a source to a target buffer.
   + close(...):   terminates the conversion and maybe de-allocates a conversion handle.

   Derived Classes:
      + Converter_IConv
      + Covnerter_ICU



