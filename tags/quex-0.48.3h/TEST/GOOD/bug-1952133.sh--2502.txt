## Buffer Size = 2502
clean
###############################################################################
## NOTE: In order to disable this message, you can do two things. Either, 
## define 'QUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED' which only disables
## this particular message, but leaves the asserts intact. Or, define the macro
## 'QUEX_OPTION_ASSERTS_DISABLED' which also disarms all internal asserts.
##-----------------------------------------------------------------------------
## You are running a lexical analyser generated by quex in 'paranoid' mode.
## This is very good, in a way that any tiny misbehavior will cause a comment
## and a program exit. However, the paranoia is a heavy load on speed perfor-
## mance!
##-----------------------------------------------------------------------------
## The lexical analyser is very low-level and the smallest error
## can have desastrous consequences. Leaving the asserts helps you to find
## subtle errors in your code--and if you find one in the lexical analyser, 
## then please, report it at
##
##          http://sourceforge.net/tracker/?group_id=168259&atid=846112
##
###############################################################################
,------------------------------------------------------------------------------------
| [START]
BRACKET_O
BRACKET_C
LESS
GREATER
CORNER_BRACKET_O
CORNER_BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
OP_ASSIGNMENT
PLUS
MINUS
MULT
DIV
ASSIGN_PLUS
ASSIGN_MINUS
ASSIGN_MULT
ASSIGN_DIV
GREATER
GR_EQ
GREATER
AMPERSANT
DOUBLE_COLON
GREATER
NAMESPACE
USING
CLASS
STRUCT
TEMPLATE
PRIVATE
PROTECTED
FRIEND
CONST
MUTUAL
IF
ELSE
SWITCH
FOR
DO
WHILE
BREAK
CONTINUE
THROW
TRY
CATCH
DOT
COMMENT
TEMPLATE
LESS
CLASS
IDENTIFIER
GREATER
COMMENT
STRUCT
IDENTIFIER
CURLY_BRACKET_O
IDENTIFIER
IDENTIFIER
SEMICOLON
PRIVATE
IDENTIFIER
IDENTIFIER
SEMICOLON
PUBLIC
IDENTIFIER
IDENTIFIER
BRACKET_O
BRACKET_C
CONST
SEMICOLON
IDENTIFIER
DOUBLE_COLON
IDENTIFIER
IDENTIFIER
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
TRY
CURLY_BRACKET_O
IF
BRACKET_O
NUMBER
PLUS
IDENTIFIER
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
IDENTIFIER
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IDENTIFIER
BRACKET_O
STRING
BRACKET_C
SEMICOLON
THROW
IDENTIFIER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
IDENTIFIER
GR_EQ
NUMBER
BRACKET_C
IDENTIFIER
SEMICOLON
CURLY_BRACKET_C
CATCH
CURLY_BRACKET_O
CURLY_BRACKET_C
THROW
BRACKET_O
IDENTIFIER
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
FOR
BRACKET_O
IDENTIFIER
OP_ASSIGNMENT
IDENTIFIER
DOT
IDENTIFIER
SEMICOLON
IDENTIFIER
NOT_EQ
IDENTIFIER
SEMICOLON
PLUS
PLUS
IDENTIFIER
BRACKET_C
CURLY_BRACKET_O
IDENTIFIER
BRACKET_O
IDENTIFIER
MINUS
NUMBER
PLUS
NUMBER
MULT
NUMBER
DIV
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
IDENTIFIER
LE_EQ
NUMBER
AMPERSANT
AMPERSANT
IDENTIFIER
GREATER
NUMBER
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
BREAK
SEMICOLON
BRACKET_O
BRACKET_C
LESS
GREATER
CORNER_BRACKET_O
CORNER_BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
OP_ASSIGNMENT
PLUS
MINUS
MULT
DIV
ASSIGN_PLUS
ASSIGN_MINUS
ASSIGN_MULT
ASSIGN_DIV
GREATER
GR_EQ
GREATER
AMPERSANT
DOUBLE_COLON
GREATER
NAMESPACE
USING
CLASS
STRUCT
TEMPLATE
PRIVATE
PROTECTED
FRIEND
CONST
MUTUAL
IF
ELSE
SWITCH
FOR
DO
WHILE
BREAK
CONTINUE
THROW
TRY
CATCH
DOT
COMMENT
TEMPLATE
LESS
CLASS
IDENTIFIER
GREATER
COMMENT
STRUCT
IDENTIFIER
CURLY_BRACKET_O
IDENTIFIER
IDENTIFIER
SEMICOLON
PRIVATE
IDENTIFIER
IDENTIFIER
SEMICOLON
PUBLIC
IDENTIFIER
IDENTIFIER
BRACKET_O
BRACKET_C
CONST
SEMICOLON
IDENTIFIER
DOUBLE_COLON
IDENTIFIER
IDENTIFIER
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
TRY
CURLY_BRACKET_O
IF
BRACKET_O
NUMBER
PLUS
IDENTIFIER
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
IDENTIFIER
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IDENTIFIER
BRACKET_O
STRING
BRACKET_C
SEMICOLON
THROW
IDENTIFIER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
IDENTIFIER
GR_EQ
NUMBER
BRACKET_C
IDENTIFIER
SEMICOLON
CURLY_BRACKET_C
CATCH
CURLY_BRACKET_O
CURLY_BRACKET_C
THROW
BRACKET_O
IDENTIFIER
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
FOR
BRACKET_O
IDENTIFIER
OP_ASSIGNMENT
IDENTIFIER
DOT
IDENTIFIER
SEMICOLON
IDENTIFIER
NOT_EQ
IDENTIFIER
SEMICOLON
PLUS
PLUS
IDENTIFIER
BRACKET_C
CURLY_BRACKET_O
IDENTIFIER
BRACKET_O
IDENTIFIER
MINUS
NUMBER
PLUS
NUMBER
MULT
NUMBER
DIV
NUMBER
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
WHILE
BRACKET_O
IDENTIFIER
LE_EQ
NUMBER
AMPERSANT
AMPERSANT
IDENTIFIER
GREATER
NUMBER
BRACKET_C
SEMICOLON
BREAK
SEMICOLON
BREAK
SEMICOLON
BRACKET_O
BRACKET_C
LESS
GREATER
CORNER_BRACKET_O
CORNER_BRACKET_C
CURLY_BRACKET_O
CURLY_BRACKET_C
OP_ASSIGNMENT
PLUS
MINUS
MULT
DIV
ASSIGN_PLUS
ASSIGN_MINUS
ASSIGN_MULT
ASSIGN_DIV
GREATER
GR_EQ
GREATER
AMPERSANT
DOUBLE_COLON
GREATER
NAMESPACE
USING
CLASS
STRUCT
TEMPLATE
PRIVATE
PROTECTED
FRIEND
CONST
MUTUAL
IF
ELSE
SWITCH
FOR
DO
WHILE
BREAK
CONTINUE
THROW
TRY
CATCH
DOT
COMMENT
TEMPLATE
LESS
CLASS
IDENTIFIER
GREATER
COMMENT
STRUCT
IDENTIFIER
CURLY_BRACKET_O
IDENTIFIER
IDENTIFIER
SEMICOLON
PRIVATE
IDENTIFIER
IDENTIFIER
SEMICOLON
PUBLIC
IDENTIFIER
IDENTIFIER
BRACKET_O
BRACKET_C
CONST
SEMICOLON
IDENTIFIER
DOUBLE_COLON
IDENTIFIER
IDENTIFIER
CORNER_BRACKET_O
NUMBER
CORNER_BRACKET_C
SEMICOLON
CURLY_BRACKET_C
SEMICOLON
TRY
CURLY_BRACKET_O
IF
BRACKET_O
NUMBER
PLUS
IDENTIFIER
EQ
NUMBER
BRACKET_C
CURLY_BRACKET_O
IDENTIFIER
BRACKET_O
STRING
BRACKET_C
SEMICOLON
CURLY_BRACKET_C
ELSE
CURLY_BRACKET_O
IDENTIFIER
BRACKET_O
STRING
BRACKET_C
SEMICOLON
THROW
IDENTIFIER
SEMICOLON
CURLY_BRACKET_C
IF
BRACKET_O
IDENTIFIER
GR_EQ
NUMBER
BRACKET_C
IDENTIFIER
SEMICOLON
CURLY_BRACKET_C
CATCH
CURLY_BRACKET_O
CURLY_BRACKET_C
THROW
BRACKET_O
IDENTIFIER
BRACKET_C
SEMICOLON
CONTINUE
SEMICOLON
<TERMINATION>
Buffer Size = 2502
| [END] number of token = 473
`------------------------------------------------------------------------------------
buffer size = 2502
VALGRIND:   All heap blocks were freed -- no leaks are possible
clean
