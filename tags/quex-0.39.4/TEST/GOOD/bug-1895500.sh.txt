quex -i indigo.qx -o IndigoLexer -b 4 --iconv 
g++ -I./ -I/home/fschaef/prj/quex/trunk \
		IndigoLexer-core-engine.cpp          \
		IndigoLexer.cpp                      \
		lexer.cpp                     \
		-ggdb \
	   	# -D__QUEX_OPTION_DEBUG_STATE_TRANSITION_REPORTS \
		# -D__QUEX_OPTION_UNIT_TEST_INPUT_STRATEGY_ICONV 
## You are running a lexical analyser generated by quex in 'paranoid' mode.
## This is very good, in a way that any tiny misbehavior will cause a comment
## and a program exit. However, the paranoia is a heavy load on speed performance!
## To disable it, please, compile with the following compile option:
## "-DQUEX_OPTION_ASSERTS_DISABLED".
## The lexical analyser is very low-level and the smallest error
## can have desastrous consequences. Leaving the asserts helps you to find subtle
## errors in your code--and if you find one in the lexical analyser, then please,
## report it at http://sourceforge.net/tracker/?group_id=168259&atid=846112
,------------------------------------------------------------------------------------
| [START]
ID
<TERMINATION>
| [END] number of token = 2
`------------------------------------------------------------------------------------
rm -rf IndigoLexer-core-engine.cpp
rm -rf IndigoLexer-token_ids
rm -rf IndigoLexer.cpp
rm -rf IndigoLexer
rm -rf a.out
