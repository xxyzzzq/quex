terminate called after throwing an instance of 'std::runtime_error'
  what():  
The provided input stream behaves strangely. Number of read
characters is not proportional to the stream position increase.
The buffer filler type which you are using might be able to
deal with those cases. Try compile option:

-DQUEX_OPTION_STRANGE_ISTREAM_IMPLEMENTATION

However, those mechanisms imply a trade-off in terms of speed.
Please, consider using a 'binary' for your input stream, or use
a different implementation of the standard I/O library (e.g.
not Microsoft(tm)).

###############################################################################
## NOTE: In order to disable this message, you can do two things. Either, 
## define 'QUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED' which only disables
## this particular message, but leaves the asserts intact. Or, define the macro
## 'QUEX_OPTION_ASSERTS_DISABLED' which also disarms all internal asserts.
##-----------------------------------------------------------------------------
## You are running a lexical analyser generated by quex in 'paranoid' mode.
## This is very good, in a way that any tiny misbehavior will cause a comment
## and a program exit. However, the paranoia is a heavy load on speed perfor-
## mance!
##-----------------------------------------------------------------------------
## The lexical analyser is very low-level and the smallest error
## can have desastrous consequences. Leaving the asserts helps you to find
## subtle errors in your code--and if you find one in the lexical analyser, 
## then please, report it at
##
##          http://sourceforge.net/tracker/?group_id=168259&atid=846112
##
###############################################################################
