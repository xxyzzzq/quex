g++ -I./ -I/home/fschaef/prj/quex/trunk  -ggdb lexer.cpp Simple.cpp -o good 
#####################################################################################
## NOTE: In order to disable this message, you can do two things. Either, define
## 'QUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED' which only disables this
## particular message, but leaves the asserts intact. Or, define the macro
## 'QUEX_OPTION_ASSERTS_DISABLED' which additionally disarms all internal asserts.
##-----------------------------------------------------------------------------------
## You are running a lexical analyser generated by quex in 'paranoid' mode.
## This is very good, in a way that any tiny misbehavior will cause a comment
## and a program exit. However, the paranoia is a heavy load on speed performance!
##
## The lexical analyser is very low-level and the smallest error
## can have desastrous consequences. Leaving the asserts helps you to find subtle
## errors in your code--and if you find one in the lexical analyser, then please,
## report it at http://sourceforge.net/tracker/?group_id=168259&atid=846112
#####################################################################################
,------------------------------------------------------------------------------------
| [START]
(1, 1)  	IDENTIFIER 'eins' 
(1, 5)  	WHITESPACE '' 
(1, 6)  	COMMENT '' 
(1, 17)  	WHITESPACE '' 
(1, 18)  	IDENTIFIER 'zwei' 
(1, 22)  	WHITESPACE '' 
(1, 23)  	COMMENT '' 
(1, 34)  	WHITESPACE '' 
(1, 35)  	IDENTIFIER 'drei' 
(1, 39)  	WHITESPACE '' 
(1, 40)  	COMMENT '' 
(1, 53)  	WHITESPACE '' 
(1, 54)  	IDENTIFIER 'vier' 
(1, 58)  	WHITESPACE '' 
(1, 59)  	COMMENT '' 
(1, 71)  	WHITESPACE '' 
(1, 72)  	IDENTIFIER 'fuenf' 
(1, 77)  	WHITESPACE '' 
(1, 78)  	COMMENT '' 
(1, 90)  	WHITESPACE '' 
(1, 91)  	IDENTIFIER 'sechs' 
(1, 96)  	WHITESPACE '' 
(1, 97)  	COMMENT '' 
(1, 115)  	<TERMINATION> '' 
| [END] number of token = 24
`------------------------------------------------------------------------------------
clean
