init-state = 0L
00000() <~ (11, 27), (20, 45), (57, 145), (94, 250), (131, 355)
      == 'a' ==> 00001
      == 'b' ==> 00005
      <no epsilon>
00001(A, S, P40, pre=9) <~ (11, 28, A, S, pre=9), (57, 146, S, P40), (94, 251), (131, 357)
      == 'a' ==> 00001
      == 'd' ==> 00002
      <no epsilon>
00002(S, P83) <~ (57, 149), (94, 254, S, P83), (131, 358)
      == 'd' ==> 00002
      == 'e' ==> 00003
      <no epsilon>
00003(S, P123) <~ (57, 150), (94, 255), (131, 359, S, P123)
      == 'f' ==> 00004
      <no epsilon>
00004(A, P123, pre=129) <~ (57, 151, A, P40, pre=55), (94, 256, A, P83, pre=92), (131, 360, A, P123, pre=129)
      <no epsilon>
00005(A, S, pre=18) <~ (20, 46, A, S, pre=18), (57, 147), (94, 252), (131, 356)
      == 'c' ==> 00006
      <no epsilon>
00006(S, P40) <~ (57, 148, S, P40), (94, 253), (131, 361)
      == 'c' ==> 00006
      == 'd' ==> 00002
      <no epsilon>

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .accepter:
        if      PreContext_9: last_acceptance = Pattern11
    .positioner:
    if 'PreContext_9': position[Acceptance] = input_p;
    if 'PreContext_55': position[PostContext_40]  = input_p;
  .drop_out:
    if PreContext_9:  goto Pattern11;
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 11: pos = position[Acceptance]; goto Pattern11;
        case 20: pos = position[Acceptance]; goto Pattern20;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 11: pos = position[Acceptance]; goto Pattern11;
        case 20: pos = position[Acceptance]; goto Pattern20;


State 4:
  .entry:
    .positioner:
        .from 3: <nothing>
  .drop_out:
    Checker:
        if      PreContext_55: accept = Pattern57
        else if PreContext_92: accept = Pattern94
        else if PreContext_129: accept = Pattern131
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 131: pos -= 1;  goto Pattern131;
        case 11: pos = position[Acceptance]; goto Pattern11;
        case 20: pos = position[Acceptance]; goto Pattern20;
        case 57: pos = position[PostContext_40] ; goto Pattern57;
        case 94: pos -= 2;  goto Pattern94;


State 5:
  .entry:
    .accepter:
        if      PreContext_18: last_acceptance = Pattern20
    .positioner:
    if 'PreContext_18': position[Acceptance] = input_p;
  .drop_out:
    if PreContext_18:  goto Pattern20;
    pos = lexeme_start_p + 1;  goto Failure;


State 6:
  .entry:
    .positioner:
    if 'PreContext_55': position[PostContext_40]  = input_p;
  .drop_out:
    if PreContext_18: pos = position[Acceptance]; goto Pattern20;
    pos = lexeme_start_p + 1;  goto Failure;


