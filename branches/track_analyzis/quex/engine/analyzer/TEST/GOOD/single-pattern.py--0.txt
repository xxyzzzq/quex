init-state = 0L
00000() <~ (8, 18)
      == 'a' ==> 00001
      <no epsilon>
00001(S, P1) <~ (8, 19, S, P1)
      == 'b' ==> 00002
      <no epsilon>
00002() <~ (8, 20)
      == 'c' ==> 00003
      <no epsilon>
00003(A, P1) <~ (8, 21, A, P1)
      <no epsilon>

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .positioner:
        .from 0: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .positioner:
        .from 1: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 3:
  .entry:
  .drop_out:
    pos -= 2;  goto Pattern8;


