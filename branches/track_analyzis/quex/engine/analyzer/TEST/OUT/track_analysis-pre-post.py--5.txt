init-state = 142L
00142() <~ (19, 41), (21, 47), (45, 110), (4, 8)
      == 'a' ==> 00143
      == 'b' ==> 00144
      <no epsilon>
00143(A, S, P8) <~ (4, 9, A, S), (19, 42, S, P8), (45, 112)
      == 'a' ==> 00148
      <no epsilon>
00148(A, S) <~ (4, 10, A, S), (19, 43), (45, 113)
      == 'a' ==> 00149
      <no epsilon>
00149(A, P8, pre=17) <~ (19, 44, A, P8, pre=17), (45, 114)
      == 'c' ==> 00146
      <no epsilon>
00146() <~ (45, 115)
      == 'd' ==> 00147
      <no epsilon>
00147(A, S) <~ (45, 116, A, S)
      <no epsilon>
00144(A, S) <~ (21, 48, A, S), (45, 111)
      == 'b' ==> 00145
      <no epsilon>
00145() <~ (45, 114)
      == 'c' ==> 00146
      <no epsilon>

State 142:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 143:
  .entry:
    .positioner:
        .from 142: <nothing>
  .drop_out:
     goto Pattern4;


State 144:
  .entry:
    .accepter:
        last_acceptance = Pattern21
    .positioner:
        .from 142: <nothing>
  .drop_out:
     goto Pattern21;


State 145:
  .entry:
    .positioner:
        .from 144: <nothing>
  .drop_out:
    pos -= 1;  goto Pattern21;


State 146:
  .entry:
    .positioner:
        .from 145: <nothing>
        .from 149: <nothing>
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case 19: pos -= 3;  goto Pattern19;
        case 4: pos -= 2;  goto Pattern4;
        case 21: pos -= 2;  goto Pattern21;


State 147:
  .entry:
  .drop_out:
     goto Pattern45;


State 148:
  .entry:
    .accepter:
        last_acceptance = Pattern4
    .positioner:
        .from 143: <nothing>
  .drop_out:
     goto Pattern4;


State 149:
  .entry:
    .accepter:
        if      PreContext_17: last_acceptance = Pattern19
    .positioner:
        .from 148: <nothing>
  .drop_out:
    if PreContext_17: pos -= 2;  goto Pattern19;
    pos -= 1;  goto Pattern4;


