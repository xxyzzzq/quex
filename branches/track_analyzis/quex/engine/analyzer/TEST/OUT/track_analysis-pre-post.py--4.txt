init-state = 141L
00141() <~ (29, 65), (46, 111), (14, 30)
      == 'a' ==> 00142
      <no epsilon>
00142(S, P3) <~ (14, 31, S, P3), (29, 66), (46, 112)
      == 'b' ==> 00143
      <no epsilon>
00143() <~ (14, 32), (29, 67), (46, 113)
      == 'c' ==> 00144
      <no epsilon>
00144(A, S, P3, pre=27) <~ (14, 33, A, P3, pre=12), (29, 68, A, S, pre=27), (46, 114)
      == 'd' ==> 00145
      <no epsilon>
00145() <~ (46, 115)
      == 'e' ==> 00146
      <no epsilon>
00146() <~ (46, 116)
      == 'f' ==> 00147
      <no epsilon>
00147(A, S) <~ (46, 117, A, S)
      <no epsilon>

State 141:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 142:
  .entry:
    .positioner:
        .from 141: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 143:
  .entry:
    .positioner:
        .from 142: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 144:
  .entry:
    .positioner:
        .from 143: <nothing>
  .drop_out:
    if PreContext_12: pos -= 2;  goto Pattern14;
    else if PreContext_27:  goto Pattern29;
    pos = lexeme_start_p + 1;  goto Failure;


State 145:
  .entry:
    .positioner:
        .from 144: <nothing>
  .drop_out:
    if PreContext_12: pos -= 3;  goto Pattern14;
    else if PreContext_27: pos -= 1;  goto Pattern29;
    pos = lexeme_start_p + 1;  goto Failure;


State 146:
  .entry:
    .positioner:
        .from 145: <nothing>
  .drop_out:
    if PreContext_12: pos -= 4;  goto Pattern14;
    else if PreContext_27: pos -= 2;  goto Pattern29;
    pos = lexeme_start_p + 1;  goto Failure;


State 147:
  .entry:
  .drop_out:
     goto Pattern46;


