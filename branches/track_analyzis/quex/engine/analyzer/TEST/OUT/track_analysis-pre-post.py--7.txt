init-state = 395L
00395() <~ (11, 27), (20, 45), (57, 145), (94, 250), (131, 355)
      == 'a' ==> 00396
      == 'b' ==> 00397
      <no epsilon>
00396(A, S, P40, pre=9) <~ (11, 28, A, S, pre=9), (57, 146, S, P40), (94, 251), (131, 357)
      == 'a' ==> 00396
      == 'd' ==> 00399
      <no epsilon>
00399(S, P83) <~ (57, 149), (94, 254, S, P83), (131, 358)
      == 'd' ==> 00399
      == 'e' ==> 00400
      <no epsilon>
00400(S, P123) <~ (57, 150), (94, 255), (131, 359, S, P123)
      == 'f' ==> 00401
      <no epsilon>
00401(A, P123, pre=129) <~ (57, 151, A, P40, pre=55), (94, 256, A, P83, pre=92), (131, 360, A, P123, pre=129)
      <no epsilon>
00397(A, S, pre=18) <~ (20, 46, A, S, pre=18), (57, 147), (94, 252), (131, 356)
      == 'c' ==> 00398
      <no epsilon>
00398(S, P40) <~ (57, 148, S, P40), (94, 253), (131, 361)
      == 'c' ==> 00398
      == 'd' ==> 00399
      <no epsilon>

State 395:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 396:
  .entry:
    .accepter:
        if      PreContext_9: last_acceptance = Pattern11
    .positioner:
        .from 395: <nothing>
        .from 396: <nothing>
  .drop_out:
    if PreContext_9:  goto Pattern11;
    pos = lexeme_start_p + 1;  goto Failure;


State 397:
  .entry:
    .accepter:
        if      PreContext_18: last_acceptance = Pattern20
    .positioner:
        .from 395: <nothing>
  .drop_out:
    if PreContext_18:  goto Pattern20;
    pos = lexeme_start_p + 1;  goto Failure;


State 398:
  .entry:
    .positioner:
        .from 397:if 'PreContext_18':  position[Acceptance] = input_p;
        .from 398: <nothing>
  .drop_out:
    if PreContext_18: pos = position[Acceptance]; goto Pattern20;
    pos = lexeme_start_p + 1;  goto Failure;


State 399:
  .entry:
    .positioner:
        .from 396:
            if 'PreContext_9':  position[Acceptance] = input_p;
            if 'PreContext_55':  position[PostContext_40]  = input_p;
        .from 398:if 'PreContext_55':  position[PostContext_40]  = input_p;
        .from 399: <nothing>
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 11: pos = position[Acceptance]; goto Pattern11;
        case 20: pos = position[Acceptance]; goto Pattern20;


State 400:
  .entry:
    .positioner:
        .from 399: <nothing>
  .drop_out:
    Checker:
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 11: pos = position[Acceptance]; goto Pattern11;
        case 20: pos = position[Acceptance]; goto Pattern20;


State 401:
  .entry:
    .accepter:
        if      PreContext_55: last_acceptance = Pattern57
        else if PreContext_92: last_acceptance = Pattern94
        else if PreContext_129: last_acceptance = Pattern131
  .drop_out:
    Checker:
        if      PreContext_55: accept = Pattern57
        else if PreContext_92: accept = Pattern94
        else if PreContext_129: accept = Pattern131
        accept = last_acceptance
    Router:
        case Failure: pos = lexeme_start_p + 1;  goto Failure;
        case 131: pos -= 1;  goto Pattern131;
        case 11: pos = position[Acceptance]; goto Pattern11;
        case 20: pos = position[Acceptance]; goto Pattern20;
        case 57: pos = position[PostContext_40] ; goto Pattern57;
        case 94: pos -= 2;  goto Pattern94;


