init-state = 76L
00076() <~ (7, 15), (22, 53)
      == 'a' ==> 00077
      <no epsilon>
00077() <~ (7, 16), (22, 54)
      == 'b' ==> 00078
      <no epsilon>
00078(S, P12) <~ (7, 17), (22, 55, S, P12)
      == 'c' ==> 00079
      <no epsilon>
00079(A, S) <~ (7, 18, A, S), (22, 56)
      == 'd' ==> 00080
      <no epsilon>
00080() <~ (22, 57)
      == 'e' ==> 00081
      <no epsilon>
00081(A, P12) <~ (22, 58, A, P12)
      <no epsilon>

State 76:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 77:
  .entry:
    .positioner:
        .from 76: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 78:
  .entry:
    .positioner:
        .from 77: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 79:
  .entry:
    .positioner:
        .from 78: <nothing>
  .drop_out:
     goto Pattern7;


State 80:
  .entry:
    .positioner:
        .from 79: <nothing>
  .drop_out:
    pos -= 1;  goto Pattern7;


State 81:
  .entry:
  .drop_out:
    pos -= 3;  goto Pattern22;


