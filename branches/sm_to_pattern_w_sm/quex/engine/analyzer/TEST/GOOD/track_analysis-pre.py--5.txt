init-state = 0L
00000 (30, 62), (1, 2), (5, 10), (16, 32)
     == 'a' ==> 00001
    
00001 (1, 3, A), (5, 11, A, pre=9), (16, 33), (30, 63)
     == 'b' ==> 00002
    
00002 (16, 34, A, pre=20), (30, 64)
     == 'c' ==> 00003
    
00003 (30, 65, A, pre=34)
    

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .positioner:
        .from 0: <nothing>
  .drop_out:
     goto Pattern1;


State 2:
  .entry:
    .positioner:
        .from 1: <nothing>
  .drop_out:
    if PreContext_20:  goto Pattern16;
    pos -= 1;  goto Pattern1;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
  .drop_out:
    if PreContext_34:  goto Pattern30;
    else if PreContext_20: pos -= 1;  goto Pattern16;
    pos -= 2;  goto Pattern1;


