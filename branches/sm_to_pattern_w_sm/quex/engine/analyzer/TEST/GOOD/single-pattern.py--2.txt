init-state = 0L
00000 (11, 29)
     == 'a' ==> 00001
     <no epsilon>
00001 (11, 30, S)
     == 'b' ==> 00002
     <no epsilon>
00002 (11, 31)
     == 'c' ==> 00003
     <no epsilon>
00003 (11, 32, A, R)
     == 'c' ==> 00003
     <no epsilon>

State 0:
  .entry:
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 1:
  .entry:
    .positioner:
        .from 0: <nothing>
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 2:
  .entry:
    .positioner:
        .from 1: position[PostContext_11]  = input_p;
  .drop_out:
    pos = lexeme_start_p + 1;  goto Failure;


State 3:
  .entry:
    .positioner:
        .from 2: <nothing>
        .from 3: <nothing>
  .drop_out:
    pos = position[PostContext_11] ; goto Pattern11;


