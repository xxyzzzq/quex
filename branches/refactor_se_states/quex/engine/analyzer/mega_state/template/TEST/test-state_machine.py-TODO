#! /usr/bin/env python
# -*- coding: utf8 -*-
import os
import sys
sys.path.insert(0, os.environ["QUEX_PATH"])

import quex.input.regular_expression.engine  as     regex
from   quex.engine.generator.base            import get_combined_state_machine
import quex.engine.analyzer.core             as     core
from   quex.blackboard                       import E_InputActions
import quex.engine.analyzer.TEST.help        as     help
from   quex.engine.analyzer.mega_state.template.TEST.templates_aux import *
import quex.engine.analyzer.core             as     analyzer_generator
import quex.engine.analyzer.engine_supply_factory           as     engine

from   quex.blackboard import E_Compression, setup as Setup

if "--hwut-info" in sys.argv:
    print "Track Analyzis: With Pre- and Post-Contexts;"
    print "CHOICES: 1, 2, 3, 4, 5, 6, 7, 8, 9;"
    sys.exit()

pattern_list = [
    'x/a/b+c+',
    'y/ab+/c+',
    'z/ab+c+/',
]


Setup.compression_type_list = [ E_Compression.TEMPLATE ]

sm       = help.prepare(pattern_list)
analyzer = analyzer_generator.do(sm, engine.FORWARD)

for state in sorted(analyzer.mega_state_list, key=lambda x: x.implemented_state_index_list):
    print state.get_string()
    print_tm(state.transition_map, state.state_index_sequence())

# For DEBUG purposes: specify 'DRAW' on command line
help.if_DRAW_in_sys_argv(sm)

